%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: light bulb of gears and cogs.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Алексей Егоров
%%CreationDate: 2/19/2014
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Microvector</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-02-19T12:37:05+04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-02-19T12:37:05+04:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-02-19T12:37:05+04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AIAM7t8wXgYqvAxQvC4qv&#xA;C4quC4qvC4quC4quC4quC4quC4q2FxQ3xxVvjirfHFXccVdxxV3HFWuOKtccVaK4q0VxStK4q0Vx&#xA;VYVxVaVxVaVxVYVxVYVxVaRiqwjFKmRiq8DFV4GKF4GKqgGKrguKrwuKrwuKrguKrguKrguKFwXF&#xA;VwXFW+OKt8cVdxxVvjiruOKtccVdxxVrjirXHFVpXFWiuKrSuKrCuKVpXFVpXFVhXFVhGKrCMVWE&#xA;YqsIxSuAxQvAxVUAxVeBiq8DFV4XFV4XFVwXFC4Liq8LirYXFVwXFK4LirfHArfHFLuOK07jitO4&#xA;4q1xxRTRXCq0rirRXFC0riq0riqwriq0rilYVxVYVxVYRiqwjFVhGKrCMVXKMVVAMVXgYqvAxVeB&#xA;iq8DFV4XFC8Liq4Liq8LilcFwJXBcVXBcCVwXFW+OK07jimnccVdxxRTXHFVpXFWiuFC0riqwrhQ&#xA;tK4oWFcVWlcVWFcVWEYpWEYqpkYqsIxVYwxVcoxVeoxVUAxVeBiqoBiq8DFC8Liq8Liq8LgSvC4p&#xA;XhcCVwXFK4LgVvjilvjirfHAtO44rTXHCrXHFWiuKFpXFVpXChYVwoWFcVWFcKFhXFCwjFVhGKrC&#xA;MUqbDFVjDFVNhiq5RiqooxVUUYqvAxVUAxQvAxVeq4pVFXAlUC4ErwuKV4XAlcFwJXBcVpcFwJpv&#xA;jitO44q7jiruOKtFcVpaVwopaVxVaVwoWFcULCuFCwrhQpsuFCwjFCmRiqwjFVMjFKxhiqmwxVco&#xA;xVUUYqqKMVXqMUKijFV6rilVVcCVRVwJXhcCV4XAlUC4pXBcCVwXFKIs7G5vLhLe3QvI7KoA6Dkw&#xA;UFj0AqRuchOYiLLZjxSmaiN2RL+XHmQw+p6cYeikxcquKqzEECu44j79swv5SxXTsR2Pnq6H4v8A&#xA;HxQmi+W2uNXks9S5WsVrE096d+SRqoY9FcA0Nd/l1y3PqeGHFDezQadNo+LIYz9IiLPu+1kz+XNF&#xA;vIlg+pR2JnDC0uY7j1SZTV4kZQGqHVg2w2GYA1OSJu+KuYqturtDo8UxXCI3yIle/MfPn7kvsPy7&#xA;aaxE11PJFPJXhGkRYJU8U5gkOSdzRRUDLsnaNSoDb3uPi7IuFyJB9339fkxK7s5ba6mtpB+8gdo3&#xA;p0qpoaZsYTEgCOrp8mMxkYnmFArk2C0rihYVwoWFcULCuFCmy4UKbLhQpsuFCmwxQsYYqpsMUqbD&#xA;FVNhiq5RiqooxVUUYoVFGKqijFVRVwMlVVwJVFXAlUVcDJeFwJXhcUrwuBLK9G8kC8sEu7q5MPqr&#xA;6kaIgYhKkc3JK0Bp92a/NruGXCBdO203ZnHDikav7vNPPLej3Gi2eo3MTQNqEbolpPKVSJ0ejUVy&#xA;3+7F7MBvTfMTU5hllEG+Hr+PJztHp5YIzkOHjFUTy+d9R3oxtKj+qvcD1KepNqoikD+gHdlULLJD&#xA;zZmioaBeoysZTde6Pn8Ae9uOAcPFvzM+tXtzMb+nyUta1K6tbPT9fkW3mui0kMhty7QSRNX7PJX4&#xA;ltgxYhtqDJYMQlKWMWBz35g/jl0YanPKEY5jwmW425Efo8+uyEi8xBjEulwX897dJKtlHcuGiFWc&#xA;l0DDixSm3UdssOm58ZiIirrm1R1l14YmZSvhvl13+H7En07zTrVlZRxfV43j5GKG4lRgqnunwlUb&#xA;jy6HpmTk0mOUrv4OFh1+WEQKFcgSPs7mfRwQ6aqWlrArSsyC5lEYmd5Zhy9WUggruprXbcdM05kZ&#xA;+on3dNh0D0IiMXpiN+u17nqWEfmJpdjFNZ6laRLCL9XMscZBQuhHxDjtUht6ZtezssiDCRvhdH2x&#xA;ggDGcRXGw4rmzdKsK4ULCuKFNlwoU2XChTZcLFTZcKFJhhQpsMULGGKqbDFKmwxVtRiqooxVUUYo&#xA;VFGKqqjAlVUYGSoowJVVXAyVFXAlUVcCV4XFKJs7G7vJhDawvPKQSEQFjQbk0GQnMRFk0G3HilM1&#xA;EWWc+S9auL30tJeF2uIIyscgcLGY4zULKOLFaD4Kr47jvmp1uAQud7E/ivvd72bqTOsZG4Hwod/3&#xA;bd6lo2vSXeuXtjqVkZ4L1gstqBzZDANuRCtK5XhQfF4nJZtPw4xKBox6+/7Aw02rM8soZI2JdPd8&#xA;LPJNPTsooll/S8MaQ3STLFGnpxxxW45tFHCpI5n1Ry3NffMe5E1wHeNe8nrfw2cuoAX4gFSvuAEd&#xA;6A7991CGG017VYbSwt4TomnyP68LOULeozcnUK3xL0ZTQb7ZORlhgZSJ8STXGMdRkEYAeFA7j33v&#xA;z5dysNdew1K10fSrAJZQGVYZ5Q0jsaFnKGu3xde/y6ZH8vxxM5y9Rpn+bOOccWOPpF0Tv76/Hydp&#xA;d3a+ZGFpqumoDbPI1pIhaOJ3/aVlBr13NK/R3csDg9UJc+feuDJHU+nJD6broChp/NtxpfDTdcs0&#xA;vLq3UKssU3RWps/X4xxHv/GcdGMnrxnhB8mqXaEsXoyxEpDuP3+ate2tvrE8F3rEMtxcyKjppcHN&#xA;Tb27c25Hbk7N6fE7Dc/6uQhM4gYwIA/nHqf0c/xu2ZYDMRLKCZH+Efwx3+fL8bMX8w+XbK2slv7C&#xA;T92GWK5tXkjeSGQg/CxQ0JPGu33CmbDT6mUpcMvge91Wr0cIx44HbkRYJBY0VzOdYsZcUKbLhQps&#xA;uFCmy4WKkwwoU2GFCkwwsVNhiqmwxVTYYpbUYqqKMUKqjFVRRilVUYEqqjAyVFGRSqqMDJVVcCVR&#xA;VxZIvToLWW+t4rqQxWzyKs0q0JVSaE75XkkREkbltwxiZgSNRt6XoXkZNC1dtTe+VrSBG48xwPxA&#xA;g8zXiAB/mM0WfX+NDgEfUXp9L2WNPk8Qy9I/G6Ig8yeUIb+7nsYjJclS9xcQx05AuqkVYrX4iDkJ&#xA;aXOYgSO3QFshrdNGcjAXLqQPMIjTda8pHV7lYAltqUjtHKzrwLsGNaN9ndvffIZcGbgF7xbMGp03&#xA;iGvTO697HdQ/L+3sre+v7y+PoRqzwBEoxY/ZDVP8xpQffmbj7RMzGMY7utzdkRxxlOUthya8h27X&#xA;FlqUUNqqTPA8Q1DkeXKQfDHxO3vUYe0JcMokna+X6Udkw4ozAjvwkcXv6O0mT6pBPpMuptBqE3ER&#xA;zohZohFUlCftgUFKGhHh4uYcRExG4j7bXTy4AcZnUz17q6d/45K8rfpvzFazaddHhBNE00LDix9F&#xA;hykIA3PhXb3qaZADwsRExzB+3o2SPj54mEuRFj3dfx8+iSefFUa/Kv1NbVvtGRWLesG6SHsMy+z/&#xA;AO7G9/ocDtYfvj6eH9Pmn2lataXtvbSpPGlxFEILq2umCxiKNeRMQA6sF/mAFK0zDzYZQJFGibBH&#xA;f5/2fF2On1EckQQRYFES5UO73+8e5K/NWrRppb6d9bF3e3Uiy33Bi0cbIByRWHUGSpodh2A2OX6T&#xA;CTPiqojl5/gOJr9QBj4OLilI3LuFft+XcwplzaukU2XFCmy4WKmwwoUmGFCkwwsVNhhYqTDJIUmG&#xA;KFNhiqmwxS2oxVUUYoVFGKqqjAyVlGBKqowMlVRgSqKMDJVUYEqqrgZM68i6R5W1WH0rmB21O3Pq&#xA;PVm4OgbYgD4aCoBBzUa/NmxmwfQXfdlafT5RUh6xuj/OV0NVaS0hnMdrZsVkdDzi9QbEToo5x8Ts&#xA;rUK5VooeH6iN5fP4dD7ubkdpZPFuINRj8r/pdR5HcJN5f8t6w8l2q25KNCFSaqmJj6qN8L14tsp6&#xA;HMrU6rGAN+vx5FwdHospMtunPpzHVQ1PQL/9L3bXKfVYWndlmlrRgzEj0wKlya9Frk8WojwCtzX4&#xA;vua8+kn4kuL0izuf0d/wZrob29/p8mh6gWlZE2WZh67Rgj4nVa+nxJFAW5ZqtQDCQyR293L9v3O9&#xA;0pjkgcM99uvOv0fO2L6rNoWj6/A2l27ObFm+sB3bi0g2ABNT8J6+ObDDHJlxHjP1cnUaieHDmHhj&#xA;6Oe/X9ia2moeWtTuLK7vYvQ1OYSevNDVIkK1A9QsaVZemY88WXGJRibgOV8/g5mPNgyyjKYrIbsj&#xA;l8UOvmPQtMt1fRbQPLcSOl2kxYTFO3FhWgav9mTOlyZD+8PLlXJqGtw4o3ijuTvfNb5c8iG5KXWo&#xA;q0cQaRJbORWRqcaIytUdzX6MOq7Q4doc9t10XZPF6p7DfZllt5Y0GFFiFurvHAbcsx+IxvWvKlBU&#xA;770rmslq8h3vrfxdxDQ4Yiq5CvggdU8jaJe25NtGIpUg9C2IJ9NSDUOabs3uTl2LX5InfcXZaM/Z&#xA;WKY9Io8NDu97znzB5dvNIu5InR3t1YJHdMhRHYqGPHcj8c3en1Mckb69zzOr0csMiDfD31zSZlzK&#xA;cNTYYUKTDCxUmGFCkwwsVJhhYqTDChSYYWKmwxVSYYq2oxVVUYqqKMUqqjAlWUYGSqoyLJVUYEqq&#xA;jAyVVGBKqowMnqfkO48svG0emwvFfLGDcmSpZhUAkNUinLwpnPdoRyg3M3Ho9Z2TPARWMVOt7YOl&#xA;vqh1i5a1LrcxSuZZQeAT4iCXckBR8zm3MocAvkQ6AQyeKeH6gTuzDV7fWLny1po0lvUTf62LUemH&#xA;fpyAAT4eXLoKd81mGUI5Zcfwt3Wphlngh4W/fw7fq623rEerR+X9NhmmVNZ+Mc3IEpTuiSkbNQrX&#xA;4gT744DA5ZED939ny+a6kZBhgCf3v213X38uu6V+RYLmLzIUdWR0jk9ZWBBHQbg+9Mye0JA4vi4f&#xA;ZMJDPR7jaL80N5ZuNUEEUZS+M6rdXAqsdOVH5b9fcDKtIM0YWfprYdW7XnTyycIHr4tz0805ZvRR&#xA;4ogEELFI7EJ8LqpahKEFjyQknh14beGYoF7nr1/Hn397nk8IIHT+GufPpz3Hd/N27mO2vl61m823&#xA;FksKy2UTn1IzJwKqw6rShPAnp9+Z09SRgErqR8nV49HGWpMALgD3/jkzHWPMWnaNJbQ3Iak1QCg5&#xA;cFWgqR1pmqwaaeUEjo73U62GAxEuqU6XYSafrF7qEFwkmm6hCWtpnkG8xYFUqxqab5k5cgnjjEj1&#xA;RO+3RwsGE48spggwmNjfXuQukz2vlDTXOpytJqF2ef1ONuRUCoHfiK92/XTLM0TqZ+gekdWrTzjo&#xA;sf7w+uX8Ka+adMttZ0IXEUSzyrH6lozSGJVEgFXJqF2XffMbSZTiyUTXftbma/BHPh4gLNWN659X&#xA;kDLnTPGFSYYUKTDCxUmGFipMMKFFhhYqTDJMVJhhQpMMUKbDFXLiqquKqqjFKqoyLJWUYEqqjAyC&#xA;qowMlZRkWSqowJVVGBkzPyf5i8vaRbqstvL9fmbjPcgKVCFtgDy5AAUJFOv0Zq9bpsuU7EcI6O77&#xA;O1uDDHcHjPMpz5ysbi1U39rbiaJjzkBoY4n/AN+GIAB2b+Z+XyzG0OQS9MjR+0+V/qpze08UoeuI&#xA;sfYPOuvvNsc0PUtR9e9m+syeo0IJbkeolQD8DTM/PihURQ5/oLq9LnncjZuv0hbeX98msXoVzMJJ&#xA;3VoX/eK4DkKCprWnbw7YceOJxx6bMMuaYyy63I7c73Zvpqpo+kPqV/G0ThB+5r6jRqTQRqzDkATT&#xA;4WY0zUZT4uTgj+PN6DABgxeJMVty515d/wACdmNanBb6/qCzaPayRSuGa5LhVViGUcloTU/FVs2G&#xA;KRwxrIR5OpzxjqZ3iiQev4+9MXsfN8FmfSljm4qVSVArS0VvTXgwBapVj8hXvlAyYDLcEfd3uUcW&#xA;qjHYg/f3bfD7EF5IHp65Ks6xesKgvI1JA24Ij3+Ktd8t7Q3xirr8c2jsrbMQavz5/BkXmjU47Rre&#xA;F9MXUWuKiMMAQGHanF998wNJiMrPFw07TX5xCgYcfF+O5JNf8v3mopZCL6vaSwQEzaf6gURKXJ5j&#xA;bp/NmXptTGHFdyBP1VzcDWaOeURrhiRHeN8t+f61S+uYtItbCWfTIdWtkgSP9Igq24J2BKvsP2a5&#xA;HHE5ZSAkYG/pZ5ZjDGJMBkjwgcX4tkt7IjaFI8kUcayQbwXDBIxzX7DttTrTMDGP3lAnnzDtcsgc&#xA;JJAHp5HYe4vFJaF2IAUEkhR0HsK51QeFlzUWGSYKLDChSYZJipMMLEqLDChSYYWKiwwsVJsKFNsV&#xA;cuKqq4qqrgSrKMDJVXAyVlGRZBVUYEqyjAyVVGBkFVRgZJtoNneTX8M1vaG8EEsZeIbA1b4Qx7A0&#xA;6nbMfUTiIkE8NhytJjkZgxjxURszrRfM2tXevLZX1otvDNGXWIqwdQASCSfGlOmafPpMccfFE2QX&#xA;oNLrss83BOPCCEVa2/lC/wBQube1jT60FIm9PkilQyk0pRD8QHTK5yzwiDLk244aXJOUYj1da/FK&#xA;+mN5YGq3ENkqfpBWYysQxYtU8+LP79eORyjNwAy+lswHT+KRCuP8Xz/Qxy6853kyXdrdW0ckMoZF&#xA;UVUr2G+9adc2ENBEVKJNh1OTtSUhKMoggprFaXFnpcFnDAWtrqJ1vWRWEqNIvFJDGSWFKfFTMUzE&#xA;5mRO8Tt3bdLc2OOWPGIAemQPF3i+Rr71slp9T9GdJI5biwWO1RZmeGGN+ALEGnxlye5GET47FECV&#xA;nbcn9VIOPgqQIMoVHewAa+20F5hkmsbyw1MxRR3rJ8cLEOqkbVVF/Z7g8upy7TATjKFnhcfWyOOc&#xA;MlAT7uf2ftZdp9/aahbie3cSqpKFwrKOQG9OQB75qsuKUDR2d5hzRyR4om0q0zy9eQ6tqF7fTLOL&#xA;tDGjLUHix3BB6UAFN8ycupiYRjEVwuHg0c45Zzmb4hS/yromoaXZS215Mk0TNWKNakKD9rc06+FM&#xA;GszxySBiKZdn6WeGBjMghJvPvmKFbd9Mt2jkkJKXcUiMWUEBkZCaLtmV2dpjfGfg4Pa2tHD4caJ6&#xA;7POWGbt5pSYZJiVFhhYqTDChRYYWKkwyTFRbCxKkwwoUWwsVNsVcuKqi4qrLgZKy4EhVXAyVlyLI&#xA;Kq4GSsuBkrKMikKqjAyekpG8FtY2dqZYLWO3W4EkL8Vnkcs3pgzFG3O6j33GaImzKRom636eez04&#xA;BjGMY2IiN7H6iem9H3KN8jnRL2GSaScWPB7bUZHJ9TnyWgMXKtOg5eO9Bk8Z/eRIAHFzj/a15gfB&#xA;kCSeCql3/L9PelnlPR9ZmnF9YuIFUOonbiy8gB8LLWu/LwzJ1mfGBwy38nE7O02WUuOBrnuyFPId&#xA;urmT63IJC6tzH2gKfvBXbdidjTbME9pHlQ/HJ2Q7Hjd8Rv8AFpHq/lO90+MzhhLAoLSOCBxHLio3&#xA;IJJqO2ZuDWxyGuRddquzp4hxcx+1M9Nk0/U7GJJYUfULVRHAhd4lapPFa8mZjsTmPmE8cjR9EufV&#xA;y9PLHmgAQOOOw3I/TumDWmoSvax38qPayxyi6oyhKyj92kYrUleAocoE4CzAeoEV8OZLlHHkJiJn&#xA;0kG/jyA91MZ8wX0dwYLa0LtZ26KkJqxD0A34kLRt6HNjpsZjcpfUXUa3MJ1GP0R5ef7UBYarfafO&#xA;kkDmsXLhG5JQFxxJ41Arl2XDGYo9XHw6ieI2DyZFpnnTVbmSO1jtvrE3okFu7S9mNOICeOa/NoIR&#xA;BkTQv7P1u10/amSZERHiNfb+pFa6POMtg5WKH0ntwlzBGxZuZJLOmynptSp+nKtP4AlzN3s3asao&#xA;w5CuHcD7x+C85uJJpZGeZ2eU7MzklthTcnfN7EADZ5mciTZ5odhkmtRYYUFSbJMVFsLFRbCxUmws&#xA;VFskgqTYWKi2FipNirlxVVXFVVcDIKy4GQVlyKQqrgZKy4GQVlwMgqrkWQVlwJDJdM8zQrBBbapb&#xA;fW47dwYZQzeqgLEueRbfagA2G2YOXSGyYHhv5O0wa4ACOQcQHLv80Va366rLa6PZWv1WxZg00Ucn&#xA;F2O4c83NG2oaEE7ZXPH4YOSRuXubIZvGMcUI8MOovfz36s2vNW0zSfq1ncSshlXistAacQF5Offx&#xA;pmpx4Z5bkByd/l1OPDwwkef43SxYddXTbqyFz6t3LOrWk/qgO0JKkuu9QBTtmTxYuMSqogbiurh8&#xA;GYY5Q4rkZbG+m26aafqtjLONNWc3NzDHWSUgcWK0B38cxsuCQHHVAlzMOpgZeHfFIDmw7WtOkstW&#xA;MUAerkGFuYaRi3f4aEVObfT5RPHZdBq8Bx5aje/LfdONC0GadYbi6d+MbGOeznU8SFUhKBvDl4Zi&#xA;anUiNiPXkQ5+j0ZkBKRO2xiR8kRpk2izXQsLe1YxWDvOJ5WoEYGlRvvv4/wyvNHII8ZO8tqbdPPD&#xA;KXBGO0CTZ6IWWx8u6w01rYTLFdSXHrSyOpLMtDyEdabVNaZYMmXFUpi41X9rVLDgz3GBqRlf9in5&#xA;VsWtLvUkEcqOystlI4CO4QkHhzHGu69cOsycUYnbzY9nYuCUxR/o9Dt3Xt3JvZJL9bqgWvPrHs3D&#xA;kfW5cxxoZqk8KdsxMhHD+Ph9ne5+IHi2+zu68/6Xc838wmA61em3oYTK3EqajrvT6c32mvw43zp5&#xA;bWcPiy4eVpU2ZDilRbCxKi2FiVJskxKi2FiVFsKCpNkmJUWwsSpNhYqTYq0uKqq4qqrgZBWXAyVl&#xA;yKQqrgZKy4GQVlwMgqrkWQVlwJVlwMgnnlKeKHXLZpSoUtxBdDJuenEDo1eh7ZiayJOM05/Z0xHN&#xA;En7rega42qmW3gsrOG6SWvOScckjIp1FR2zSacQomUiK7npNWclgQiJX39ElubHT5NW/Sr34SK2l&#xA;iinVEbisqBRxRv5dvozMhkmIcHDuQa9zgZMMDl8Uz2iQDt18vJOdL/SUeoSwzWVvDb8S63NuOIbf&#xA;Yd98xM3AYAiRJ7i52n8QTIMYiPeEp1hbS78yxwOXoAFZrdCJFfanJiDUe46Zl6cyhhJH28nB1Qhk&#xA;1Aib+A3RWv3OpWGo2d4A0lhCArU33Ozc/cjocq0sIThKP8RbtbkyYskZ84D8G1KPSIBBdgX0cEWr&#xA;SIbZz9pozVuIBK7nlTJHObj6STAb+9hHTR4ZeoRGU7e7uQ0k82hSMlnoxZIiQ17IC7OP5uSiig/P&#xA;JiIzD1T59GuUzpzUMfL+I7215hvRLp9jrkL3EV2yUhWOhhQg/Hy279PfHTY6lLGa4ft8l1uW4RzA&#xA;yEq2rkO9Ibvzlr9xbNbvOFVgFdkUKxHfcePemZsNDiibp12TtPNKPCSx5ySSTuT1OZodcVFsLEqL&#xA;YWJUWwsSpNkmJUWwsSothQVJskxKi2FiVJsLFSbFWlxVUXFVZcDJWXAkKq4GSsuRZKq4GSsuBkrL&#xA;kUhVU4GSspwMgrwSyRSLJE5jkU1V1JBB9iMjIAiizjIg2Ob0ny95rsb21EFy4gnRWqGZv7tFHxNI&#xA;abnfvmg1OjlA2Nx+Oj1Oi7RhkjwyNH9A80dH5e0ldMl0+Mt9WnkEpowLV+EijU6fDlR1U+MTPMN8&#xA;dFi8MwH0k2pajr2naTZJDA4lkRALePkWBCMEILjluN+vhksWmnllZ272GfWY8EKjua2+7mxTR9VZ&#xA;dWFzcXj28Z+255SkqDUR9GObTPhvHQjf2fF0ml1BGXilIxHz+DIb6y8yfX5ZtNmBsrijhJCCoBUV&#xA;qrg0+jMDHkw8IEx6g7XNi1HGTjPol3/qLS3emXL29nfBbq7sVeYvbfDAnAVod18ANhiYTiDKO0Zb&#xA;b81GTHMiE/VKFn0/SKS6+1XUOMHmDT2ZUnf0rm0JLqHXZRT/AClGZGPDDfFPpuC4uXUZNs8ORNEe&#xA;f7UT5z1FE05LZbk2ly6CSWxVCRIshoQXAoOJr33yrQYrndcQ7/c3dqZgMYjfDKvp7783n7HN282V&#xA;FjhYlSY4WKi2FBUmyTFRbCxUmwsVFsLEqLZJBUmwsVFsLFSbFWlxVVXFVVcCQrLgZKq4GSspyLIK&#xA;qnAlWU4GSqpwMgrKcDJVU5FKqpwMmdeVbOwk0hXSJZp3LesxjWQhuXFUNegIoe3jXNRrMkhPnQ+T&#xA;0HZ+KBxWBZ67X8PxXvQDabfXet3dnYzOiL/pEPJmoxjACcW9q0U5cMsY4xKQ8vx+lxjgnPNKECe8&#xA;fDl+xXPknVTFat/u6Yt9aDFaRb7GoPxVHWmR/lCFnuHLzZnsnLUe88/JJZIrizuWPE/6PKU9QrVe&#xA;aH3FO3TMwSEx7w6+UZY5f1SyjTNat9WtY9L1CSWa6unctIgEYjCqSNxSvTwzW5tOcUjOFAD7Xcaf&#xA;VRzxGPISZSJ8qRdro1hDo80Om3UbTXxMAupDTkKkMiAddgenzyqeokcgMwajvTfj0sI4iMchc9rP&#xA;3Bq1n0zQNH4SyC+WO64TmNR+7l6/ZJ/Z4YzjPPksDh9PzC45Y9NionjqW/kf2UwzXdZutQuCsk/r&#xA;wQu/1Z2RVbgx70APQZtdPgjAbCiebotXqpZZbmwCaSljmS4akxwoUWOFipMckxKkxwsVFjhQpMcL&#xA;EqLHJMVFsLEqTYUKLYWKm2KrVxVVXFVVTilVU5FkrKcCVVTgZBWU4GSqpyLJVU4EqqnAyVVOBkqq&#xA;cCUbphha7jiuJXht5DxkeMVahFBt33yrLYjYFlvwUZASJET3M81e4urKyj0bTLv/AEm3jAldiBJx&#xA;/ZAI+zt3pQDqR30+CMZyOSY2J+D0OpnLHAYscvVEfH9n43CXT2PmeG3s5Y5JI5o6i4b1KlS1COYB&#xA;YmvhQ5fHJhJINV02cSeLURjEgkEc9/vR+pPaatoZlvLplfTzW5ECghnIop41PX57d6dqcQliyVEf&#xA;Vytys5jmw3OX0c67/wAfgIHRNKsVtLeSSFLm6uAZSsvLikQ2BHDlU8vE9O2XajNLiIBoD73G0mmg&#xA;IgkCUpb79B8ELr0P1aCzmtpDAI5mRrdSSkU68SxQtxJ7dvpyzTy4jIEXtz7w1auHAImJqjy7j5fj&#xA;4p8dJ01kaAwxzcnUOXDes7NWsvPjyq3KooCvwnemYXjTu7I+73fjfd2P5bGRVA7/ABPnfP8ARs88&#xA;vY1hupoVbksbsgYdCFJFc3kDcQXmcseGRHcUKzZNrU2OFCkxwsVJjhYlSY4UKLHCxKkxyTEqTHCh&#xA;RY4WKkxwsVFsKFNsVWqcVVVxVUU4pVlOBKqpyLJVU4GSspwJVVOBkqqcCVRTgZKqtgSqK2Bkm3ly&#xA;8uLbVoHglihdjxaWfiIwvU1LdOmY2pgJQNgn3OXosko5AYkD38mU+Zraxt9VTXXlMsM/Brcx/Ehd&#xA;FAG6nf7Neqj3PTNfpJylDwwNxz/H9rttdjhHJ4xNg1Xw/Hl7+ilc63o8cM1wLeVX1of6RyYMqBev&#xA;GnFjXl4/0yUMGQkCx+75MMmqxAGVG8vPyR2jWw0vQ7q4t7qKJ72hszclVU8R0BbjyqCaVUfLKs8/&#xA;EyAEH086cjSw8HDKUZAcf08X4/QPcgrS41yz04PqWmyyWkTNMkiH03TkPiqin7Pf7OWzjjlP0SHE&#xA;dmjHPNCF5IExG/dXw7vgsitLrzHbLKzCw0myHGMtykJP7RqTvTucJnHAa+qcmMcctVG/oxw+Ltct&#xA;df0rTfUtr83OnqTEXChZIyCUI5UJpXaoOOnniyToxqXNOqx5sOO4z4ocvMdGFs2bV0SxmwoUmbCh&#xA;TY4WKkxwoUmOFipMcLFSY4UKTHCxUWOSYqTHChSY4oU2xVapxSqKcUKqnFVVTgZKqnAlVU4GSqpw&#xA;JVVOBkqKcCVVWwMlRWyKVRWxZLw2BLMNE84W/wBX/R+qQRfoyG34pEqFmeRaU6kirb+GazPojfFA&#xA;njJdzpe0o8PBkA8MR7uZR66t5JSLTpmtAwcsPSLmT6uAQCXQk1r1FR0ynwdQTIX+1yBqNIBAmP6e&#xA;H3hRtfNceo+YLSK8SE2sFyzWs4UqQCCqA1PSvE9MnPRmGImN2Y7sMfaAy5oiYHCJbH7v0MsjF1Hc&#xA;M8x4ovxSSGoHEKPU5MV4MKcKUVejb5rTwkbfju/T39HcREhKz+O/y7ug6pH5c1HT7yylsbV1jmt5&#xA;5nt4jRSY5CwUo3agbf8AtzL1WOUZCR5EC3A0WaE4GEdjEmvcb5LfNd7bafolxZyTCS9uQkSISHk4&#xA;RmnqO/8AlKK79zjo4GeQSA9I/T0R2hljjxGJNylQ89up/HN5yWzevMqbNhQsZsWKkzYUKbHChSY4&#xA;WKmxySFFjhYqTHCxUmOFCkxwsVNjiqmxxVYpxSqqcUKinFVRTilVU4EqqnIslVTgSqqcDJUVsCVR&#xA;WwMlRWxSqBsCV4bAlmXk/wAmWesae97dzyIvMxxpCVB+ECpYsG8emavW66WKXDEfN3fZ3Zkc0DKR&#xA;PPon3/KtNC/3/df8HH/1TzD/AJUyd0ft/W7D+Q8PfL7P1N/8q10L/louv+Dj/wCqeP8AKmTuj9v6&#xA;1/kTD3y+z9SKk8lWslsLWTUr97cUpEZkK0HQU4ZWNeQbEY37v2tx7LiY8JnPh9/7EL/yrTQv+Wi6&#xA;/wCDj/6p5Z/KmTuj9v62n+RMPfL7P1IPV/y70yDTrm5t7mf14Y2kX1SjKeAqQaKp3p45bh7SmZAE&#xA;Ci06jsbHGBlEysC96/U86LZu3mlhbChTZsULGbChSZsKFNjhYqTHChTY4WKkxwoUmOSYqTHFCmxx&#xA;VTY4pWqcVVFOKFRTiqopxVUU4GSqpwJVVOBKorYGSorYEqitgSqBsWS8NgSvDYFZh5JsPNs9tNNp&#xA;F2tpa8+LmWjKzgCvFSr9iN81muyYQQJjiLuuzMWplEnHLhj5/wBhZP8Aov8AMP8A6vNv/wAik/6p&#xA;ZgeLpf5h+f7Xa+Brf9Uj8h/xLv0X+Yf/AFebf/kUn/VLHxdL/MPz/avga3/VI/If8S79F/mH/wBX&#xA;m3/5FJ/1Sx8XS/zD8/2r4Gt/1SPyH/Eu/Rf5h/8AV5t/+RSf9UsfF0v8w/P9q+Brf9Uj8h/xKW+Y&#xA;NK8/foq4a41GO5tlQtPDEqo5QbnoiVFOorl+ny6bjFRIP483F1mDWeGeKYlHqBt+h50WzdvNWsLY&#xA;VWFsUKbNhQsZsLFSZsKFNjhQpscLFSY4UKTHCxU2OKqbHFVNjilYpxVUU4qqKcUKinFVRTilVU4E&#xA;qitgSqK2BkqK2BKoGwJXhsUrw2BK4NgSzPyR5n1qxtZbO0019SgVvUpHyBQsKGrBXFDTpms12lxz&#xA;IlKXCXddma7LjiYxgZj7vvZP/jHzJ/1K9x/yMb/qlmB+Sxf6oPx8Xa/yjn/1GXz/AOOt/wCMfMn/&#xA;AFLFx/yMb/qlj+Sxf6oPx8V/lHP/AKjL5/8AHXf4x8yf9Sxcf8jG/wCqWP5LF/qg/HxX+Uc/+oy+&#xA;f/HWv8Y+ZP8AqV7j/kY3/VLH8li/1Qfj4r/KOf8A1GXz/wCOpd5g85eYjpVxG+hS2SSoY3uZCzqq&#xA;uOJ/YQA77VOX6fRYuMHjEq6fguNq+0c3hkHEY31P9jzctm7eZWFsKFhbFCwthQps2FCxmwoU2bCx&#xA;UmbChTY4UKbHFCmxxVTY4pU2OKrFOKqinFVRTiqopxQvU4qqK2KVRWwJVFbAlUVsCV4bAyXhsUrw&#xA;2BVwbFL0D8v/ADloelaZJZagxt5PVaQShGdXDADfgGNRTwzTdoaPJknxR32eh7J7RxYsZhPbe2Vf&#xA;8rD8nf8AVw/5Iz/80Zr/AOTs/wDN+0frdt/K+m/nfZL9Tv8AlYfk/wD6uH/JGf8A5ox/k7P/ADft&#xA;H61/lfTfzvsl+p3/ACsPyf8A9XD/AJIz/wDNGP8AJ2f+b9o/Wv8AK+m/nfZL9Tv+Vh+Tv+rh/wAk&#xA;Z/8AmjH+Ts/837R+tf5X03877JfqS/X/AMwvK8mj3cFtObqaeJ4kiEbqKupWpLqooK5fp+zsomCR&#xA;QBcbV9r4DjkIniJFcj+l5KWzoXkbWlsKFpbCqmWxQsLYULGbCxU2bChSZsKFjHFCmxxVTY4qsY4p&#xA;U2OKrFOKqinFV6nFVRTiheDiqoDiq9WxSqK2BK8NgSvDYErw2KV4bAlcGxW2w2BLKfy7i0afzCE1&#xA;QRsvpMbZJacGlqKA12J41oDmB2jKYx+jv39ztOyI4pZqyVy2vver/o3y5/yy2f8AyLi/pnP+Ll75&#xA;fa9b4OH+bH5B36N8uf8ALLZ/8i4v6Y+Ll75favg4f5sfkGD/AJoWvl6CxtWtI4ItQaWgWAKpMXE8&#xA;iwX/ACqUJza9lzymRu+Guve6LtvHhjCPCAJ307nnBbN083a0thRa0tiqwthQtLYoWFsKFNmwoU2b&#xA;ChYTihYTiqmxxVYTilTY4qpscVWKcVVFOKr1OKqgOKrwcULwcVXhsVXhsUqgbAleGwKuDYpXBsCV&#xA;wbFK4NirfLAruWKbdyxW3csUW0Wwq0WxVaWxQsLYULS2KrC2FCwthQsLYoWE4qpk4qsJxSsJxVTY&#xA;4qsY4qpqcVVAcVXg4qqA4qvBxVeDiheGxVcGxVeGxVeGxSuDYErg2Krg2BLfLFbb5Yptvlitu5Yr&#xA;bXLFba5Yototiq0thQtLYqtLYULC2KFpbFVhbFVhbFVhOKVhOKrCcVUycVWMcVWA4qvBxVeDiq8H&#xA;FV4bFV4OKrw2Krw2KFwbFVwbFVwbFVwbFLYbAq4NilvliruWK27litu5Yq1yxVotihaWwqtLYoWl&#xA;sVWlsVWlsVWFsVWk4pWE4qsJxVYTiqmTiqwnFVgOKV4OKF4OKrwcVXhsVXhsVXBsVXhsVXBsULg2&#xA;Krg2KthsVb5Yq3yxVvlirfLFXcsVa5Yq1yxVrlirRbFWi2KrS2KrS2KrS2KVpbFVhbFVhbFVhOKr&#xA;CcVWE4qsJxSpg4qqA4qvBxQvDYquDYqvDYquDYqvDYquDYquDYq2GxQuDYq3yxVvliruWKt8sVdy&#xA;xVrliruWKtcsVa5Yq0WxVaWxStLYqtLYqtLYqsLYqtLYqsLYqsJxVYTilYTir//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:86345bd9-8a5d-8a4e-983f-3db60e8c7b04</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:86345bd9-8a5d-8a4e-983f-3db60e8c7b04</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:94ad77fe-f9c8-4553-a2c9-fe8522a6de87</stRef:instanceID>
            <stRef:documentID>xmp.did:c7e7b661-c327-9e43-a071-77b99f8f7842</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:86345bd9-8a5d-8a4e-983f-3db60e8c7b04</stEvt:instanceID>
                  <stEvt:when>2014-02-19T12:37:05+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[315.999 0 0 315.999 225 225 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.490196 .839216 1 ]
/C1 [.121569 .639216 .870588 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.121569 .639216 .870588 ]
/C1 [.0235294 .529412 .760784 ]
/N 1 
>>
]
/Bounds [.64557 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.999 0 0 315.999 225 225 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~I=-BgH?sj^G^"@TG'.qLF)uABEH,r9Df0H0D/=!'C2.HsBP1siAn>Oa@q/tW@:<PN?X@&E?!LW=>$>'3
=BJX*<`N.!<)Z[m;,L.d:JOYZ9h\5R8kMZH84Z6?7R]a66pj:-5s[b$5<h=p4Zkhg4$#A^3&iiU2Dm?K
1c$pC0ek@90/"q0/M&G'.k2ts-n$Gj-7'r`,U4NX+X%sN+!2OF*ZZ7A*?6%=*#fh9)B'M4)&X;0(`4)+
(Ddl'()@W"'bqDs'GM2o'+toj&eP]f&J,Kb%hB0]%LrsX%1NaT$k*OP$O[:K$47(G#mgkC#R:S>#6kA:
~>
<~f%&=$eC<!se'landa?IidEp7ecd0q_cHa\Zc-=JVbfe2Qb0%lKaiVZGaN2EBa2Z-=`Pog8`5KU3_o'@.
_SO()_8*k%^V@Ot^:q:o]tM(k]Xtef]"5J`\[f5[\@B#W\$i`R[C*EL['[3HZa6sCZE^[>Yct@9YHP.4
Y-+n/XfSV*XK/D&WiE(uWMuhpW2QVlVl$>gV5:#aUnjf]USFQXU7n9STV.sMT:_aISt;LDSXc4?S"#n:
R[T\5R@0G0R$X/+Q^3r'Q'IW!Pa%AqPEV/mP*(lhOH>QbO,o?^NfK*YNJrgTMi3LOMMd:JM2@%ELkgb@
~>
<~s8N#srr2lprVc]mr;?Kjqtp9fqtg0cqYL$`q>'j]q"XXZp\4FVp\+=Sp@e1Pp%A"Mo^qeJoCMSFoCDJC
o()>@naZ/=nF5r:n*f`6n*]W3mdBK0mHs<-m-O**lg*m&lg!d#lK[Wul07Hrkih6okND$kkN:phk2tde
jlPUbjQ,C_j5]1[j5T(Xio8qUiSibRi8EPOhr!>Khqm5HhVR)Eh;$f@gY:K:g=k96g"G$1f[na,f%/F'
e^`4"eC;sre'c[mda?Iid*U.ccd0n^cHa\Zc-4DUbKJ)Ob0%lKaiVWFaN)?A`l?$<`Pog7`5KR2_ns:-
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
265.863 320.699 mo
265.863 324.013 263.177 326.699 259.863 326.699 cv
193.613 326.699 li
190.299 326.699 187.613 324.013 187.613 320.699 cv
187.613 320.699 li
187.613 317.385 190.299 314.699 193.613 314.699 cv
259.863 314.699 li
263.177 314.699 265.863 317.385 265.863 320.699 cv
265.863 320.699 li
cp
1 1 1 rgb
f
265.863 338.199 mo
265.863 341.513 263.177 344.199 259.863 344.199 cv
193.613 344.199 li
190.299 344.199 187.613 341.513 187.613 338.199 cv
187.613 338.199 li
187.613 334.885 190.299 332.199 193.613 332.199 cv
259.863 332.199 li
263.177 332.199 265.863 334.885 265.863 338.199 cv
265.863 338.199 li
cp
f
265.863 355.699 mo
265.863 359.013 263.177 361.699 259.863 361.699 cv
193.613 361.699 li
190.299 361.699 187.613 359.013 187.613 355.699 cv
187.613 355.699 li
187.613 352.385 190.299 349.699 193.613 349.699 cv
259.863 349.699 li
263.177 349.699 265.863 352.385 265.863 355.699 cv
265.863 355.699 li
cp
f
247.863 373.199 mo
247.863 376.513 245.177 379.199 241.863 379.199 cv
211.613 379.199 li
208.299 379.199 205.613 376.513 205.613 373.199 cv
205.613 373.199 li
205.613 369.885 208.299 367.199 211.613 367.199 cv
241.863 367.199 li
245.177 367.199 247.863 369.885 247.863 373.199 cv
247.863 373.199 li
cp
f
297.443 169.391 mo
293.889 170.49 290.296 171.146 286.763 171.342 cv
286.531 171.355 li
286.48 171.128 li
286.274 170.225 285.921 169.363 285.43 168.566 cv
285.306 168.365 li
285.487 168.211 li
288.232 165.888 291.233 163.813 294.406 162.045 cv
294.629 161.92 li
294.77 162.134 li
296.168 164.261 297.131 166.596 297.632 169.074 cv
297.681 169.318 li
297.443 169.391 li
cp
297.613 177.074 mo
297.101 179.551 296.128 181.881 294.721 184 cv
294.583 184.208 li
294.363 184.092 li
291.075 182.356 288.071 180.28 285.433 177.92 cv
285.26 177.764 li
285.384 177.567 li
285.883 176.775 286.245 175.911 286.461 175.001 cv
286.516 174.77 li
286.752 174.79 li
290.287 175.085 293.876 175.745 297.419 176.753 cv
297.665 176.823 li
297.613 177.074 li
cp
289.052 189.642 mo
286.923 191.04 284.589 192.003 282.113 192.502 cv
281.868 192.551 li
281.795 192.313 li
280.697 188.761 280.04 185.168 279.844 181.634 cv
279.831 181.402 li
280.058 181.35 li
280.958 181.146 281.821 180.793 282.621 180.301 cv
282.822 180.177 li
282.975 180.358 li
285.301 183.107 287.376 186.108 289.141 189.278 cv
289.266 189.501 li
289.052 189.642 li
cp
278.158 179.183 mo
276.514 179.183 274.969 178.543 273.807 177.38 cv
272.645 176.218 272.005 174.672 272.005 173.029 cv
272.004 171.385 272.644 169.84 273.806 168.678 cv
274.968 167.516 276.514 166.876 278.158 166.876 cv
279.802 166.876 281.347 167.516 282.509 168.678 cv
284.908 171.077 284.908 174.981 282.508 177.381 cv
281.347 178.543 279.801 179.183 278.158 179.183 cv
cp
276.396 181.622 mo
276.102 185.159 275.441 188.748 274.434 192.29 cv
274.364 192.536 li
274.113 192.484 li
271.634 191.971 269.304 190.998 267.186 189.592 cv
266.978 189.454 li
267.095 189.234 li
268.832 185.944 270.908 182.94 273.267 180.304 cv
273.422 180.131 li
273.619 180.255 li
274.411 180.753 275.274 181.116 276.185 181.332 cv
276.416 181.386 li
276.396 181.622 li
cp
261.909 184.013 mo
261.686 184.138 li
261.545 183.924 li
260.147 181.795 259.184 179.461 258.684 176.984 cv
258.635 176.739 li
258.873 176.666 li
262.426 175.568 266.019 174.911 269.552 174.715 cv
269.784 174.702 li
269.836 174.929 li
270.04 175.829 270.394 176.692 270.885 177.492 cv
271.009 177.694 li
270.829 177.847 li
268.08 180.172 265.079 182.247 261.909 184.013 cv
cp
258.702 168.984 mo
259.214 166.509 260.187 164.178 261.595 162.057 cv
261.732 161.849 li
261.953 161.966 li
265.242 163.703 268.246 165.78 270.882 168.138 cv
271.056 168.293 li
270.932 168.49 li
270.433 169.283 270.07 170.146 269.854 171.057 cv
269.8 171.288 li
269.563 171.268 li
266.025 170.973 262.437 170.312 258.897 169.305 cv
258.651 169.235 li
258.702 168.984 li
cp
267.263 156.417 mo
269.392 155.018 271.727 154.055 274.203 153.556 cv
274.447 153.507 li
274.52 153.745 li
275.618 157.298 276.275 160.891 276.471 164.424 cv
276.484 164.656 li
276.257 164.708 li
275.356 164.912 274.494 165.265 273.695 165.757 cv
273.493 165.881 li
273.34 165.701 li
271.014 162.953 268.94 159.952 267.173 156.781 cv
267.049 156.557 li
267.263 156.417 li
cp
279.918 164.436 mo
280.213 160.901 280.873 157.312 281.881 153.768 cv
281.952 153.522 li
282.202 153.574 li
284.679 154.086 287.009 155.059 289.129 156.465 cv
289.336 156.603 li
289.22 156.823 li
287.485 160.112 285.408 163.117 283.048 165.754 cv
282.893 165.927 li
282.696 165.803 li
281.901 165.303 281.038 164.941 280.13 164.727 cv
279.899 164.672 li
279.918 164.436 li
cp
310.03 172.186 mo
309.579 172.026 309.07 171.867 308.576 171.712 cv
308.074 171.555 307.573 171.398 307.123 171.239 cv
306.953 171.179 li
306.94 170.998 li
306.879 170.12 306.793 169.328 306.677 168.577 cv
306.649 168.399 li
306.802 168.303 li
307.215 168.041 307.68 167.77 308.145 167.501 cv
308.58 167.248 309.029 166.987 309.423 166.739 cv
309.31 166.168 309.19 165.635 309.059 165.119 cv
308.584 165.064 308.052 165.022 307.536 164.981 cv
307.011 164.94 306.486 164.899 306.011 164.843 cv
305.831 164.823 li
305.779 164.65 li
305.554 163.903 305.282 163.13 304.971 162.353 cv
304.904 162.185 li
305.031 162.057 li
305.374 161.71 305.767 161.343 306.16 160.976 cv
306.529 160.63 306.91 160.274 307.241 159.942 cv
307.011 159.433 306.768 158.93 306.518 158.445 cv
306.044 158.497 305.518 158.575 305.008 158.65 cv
304.486 158.727 303.964 158.805 303.487 158.857 cv
303.308 158.877 li
303.218 158.72 li
302.807 158.001 302.372 157.307 301.924 156.659 cv
301.821 156.51 li
301.917 156.357 li
302.174 155.942 302.475 155.497 302.776 155.051 cv
303.06 154.63 303.353 154.197 303.601 153.798 cv
303.296 153.396 302.959 152.978 302.558 152.504 cv
302.115 152.658 301.628 152.848 301.156 153.031 cv
300.657 153.225 300.159 153.419 299.7 153.577 cv
299.529 153.636 li
299.407 153.503 li
298.862 152.91 298.282 152.331 297.684 151.78 cv
297.551 151.658 li
297.61 151.488 li
297.768 151.029 297.962 150.532 298.155 150.034 cv
298.339 149.561 298.529 149.073 298.683 148.629 cv
298.209 148.229 297.792 147.892 297.389 147.585 cv
296.99 147.834 296.556 148.127 296.135 148.412 cv
295.69 148.712 295.245 149.013 294.831 149.27 cv
294.677 149.365 li
294.529 149.263 li
293.883 148.817 293.189 148.382 292.468 147.969 cv
292.311 147.88 li
292.331 147.7 li
292.383 147.22 292.461 146.694 292.539 146.168 cv
292.614 145.661 292.691 145.14 292.743 144.669 cv
292.253 144.417 291.75 144.174 291.245 143.946 cv
290.914 144.275 290.56 144.654 290.216 145.022 cv
289.847 145.416 289.478 145.811 289.13 146.156 cv
289.001 146.283 li
288.834 146.216 li
288.055 145.905 287.282 145.633 286.538 145.408 cv
286.364 145.355 li
286.344 145.176 li
286.288 144.7 286.247 144.175 286.205 143.649 cv
286.165 143.133 286.123 142.602 286.067 142.128 cv
285.556 141.997 285.023 141.878 284.447 141.763 cv
284.2 142.157 283.94 142.604 283.688 143.038 cv
283.418 143.504 283.147 143.971 282.885 144.385 cv
282.788 144.538 li
282.61 144.51 li
281.865 144.395 281.073 144.308 280.189 144.246 cv
280.009 144.234 li
279.948 144.064 li
279.789 143.614 279.632 143.113 279.475 142.61 cv
279.32 142.117 279.161 141.607 279.001 141.156 cv
278.979 141.156 li
278.433 141.137 277.882 141.137 277.336 141.156 cv
277.314 141.156 li
277.154 141.609 276.994 142.119 276.839 142.615 cv
276.683 143.115 276.527 143.615 276.368 144.064 cv
276.307 144.234 li
276.127 144.246 li
275.25 144.307 274.458 144.393 273.706 144.51 cv
273.528 144.538 li
273.432 144.385 li
273.168 143.97 272.896 143.502 272.625 143.034 cv
272.374 142.601 272.115 142.155 271.868 141.763 cv
271.294 141.877 270.761 141.997 270.249 142.128 cv
270.194 142.6 270.152 143.129 270.112 143.642 cv
270.07 144.17 270.029 144.697 269.973 145.175 cv
269.952 145.354 li
269.779 145.406 li
269.037 145.632 268.263 145.904 267.482 146.215 cv
267.314 146.281 li
267.186 146.155 li
266.838 145.81 266.468 145.415 266.099 145.021 cv
265.755 144.653 265.401 144.275 265.071 143.946 cv
264.565 144.174 264.062 144.417 263.573 144.669 cv
263.625 145.139 263.702 145.66 263.777 146.167 cv
263.855 146.693 263.933 147.219 263.985 147.699 cv
264.005 147.878 li
263.848 147.968 li
263.124 148.383 262.431 148.819 261.788 149.263 cv
261.639 149.365 li
261.486 149.27 li
261.073 149.014 260.63 148.714 260.188 148.415 cv
259.764 148.129 259.328 147.834 258.927 147.584 cv
258.527 147.888 258.109 148.226 257.633 148.629 cv
257.788 149.074 257.978 149.563 258.162 150.038 cv
258.355 150.534 258.547 151.03 258.706 151.486 cv
258.765 151.657 li
258.632 151.779 li
258.036 152.328 257.456 152.908 256.909 153.503 cv
256.786 153.636 li
256.616 153.577 li
256.16 153.419 255.666 153.227 255.171 153.035 cv
254.695 152.849 254.205 152.659 253.758 152.503 cv
253.357 152.977 253.02 153.395 252.714 153.798 cv
252.964 154.198 253.259 154.634 253.544 155.057 cv
253.844 155.5 254.143 155.943 254.399 156.356 cv
254.495 156.509 li
254.392 156.658 li
253.946 157.304 253.511 157.997 253.097 158.719 cv
253.008 158.876 li
252.828 158.856 li
252.35 158.803 251.828 158.726 251.304 158.648 cv
250.795 158.574 250.271 158.496 249.798 158.444 cv
249.545 158.935 249.302 159.437 249.075 159.942 cv
249.406 160.273 249.786 160.629 250.156 160.975 cv
250.548 161.342 250.941 161.71 251.285 162.057 cv
251.411 162.185 li
251.344 162.353 li
251.034 163.13 250.762 163.902 250.536 164.65 cv
250.483 164.823 li
250.304 164.843 li
249.829 164.899 249.304 164.94 248.779 164.981 cv
248.263 165.022 247.732 165.064 247.257 165.119 cv
247.126 165.633 247.006 166.166 246.892 166.739 cv
247.286 166.986 247.733 167.246 248.167 167.499 cv
248.633 167.769 249.1 168.04 249.513 168.303 cv
249.666 168.399 li
249.638 168.577 li
249.522 169.329 249.436 170.12 249.375 170.998 cv
249.363 171.178 li
249.193 171.238 li
248.742 171.398 248.241 171.555 247.738 171.712 cv
247.245 171.867 246.736 172.026 246.285 172.186 cv
246.283 172.239 li
246.274 172.501 246.265 172.764 246.265 173.029 cv
246.265 173.294 246.274 173.557 246.283 173.82 cv
246.285 173.872 li
246.737 174.033 247.248 174.192 247.744 174.347 cv
248.244 174.504 248.744 174.66 249.192 174.819 cv
249.363 174.879 li
249.375 175.059 li
249.436 175.937 249.522 176.729 249.638 177.48 cv
249.666 177.658 li
249.513 177.755 li
249.1 178.017 248.634 178.287 248.169 178.558 cv
247.734 178.81 247.286 179.071 246.892 179.319 cv
247.006 179.892 247.126 180.425 247.257 180.938 cv
247.729 180.994 248.256 181.035 248.769 181.075 cv
249.297 181.117 249.826 181.159 250.304 181.215 cv
250.484 181.236 li
250.536 181.408 li
250.762 182.153 251.033 182.926 251.344 183.706 cv
251.411 183.873 li
251.284 184.001 li
250.94 184.349 250.546 184.718 250.152 185.086 cv
249.784 185.43 249.404 185.785 249.075 186.115 cv
249.304 186.624 249.546 187.127 249.797 187.613 cv
250.271 187.561 250.797 187.484 251.307 187.408 cv
251.829 187.331 252.351 187.253 252.828 187.201 cv
253.008 187.181 li
253.097 187.338 li
253.51 188.061 253.946 188.755 254.391 189.399 cv
254.494 189.548 li
254.399 189.701 li
254.142 190.115 253.842 190.559 253.542 191.003 cv
253.257 191.425 252.963 191.86 252.714 192.26 cv
253.02 192.663 253.357 193.081 253.757 193.554 cv
254.202 193.399 254.69 193.209 255.165 193.025 cv
255.661 192.832 256.158 192.638 256.615 192.48 cv
256.786 192.421 li
256.908 192.554 li
257.457 193.152 258.037 193.732 258.631 194.278 cv
258.763 194.4 li
258.705 194.57 li
258.547 195.027 258.354 195.522 258.162 196.018 cv
257.977 196.493 257.787 196.983 257.632 197.429 cv
258.109 197.833 258.527 198.17 258.926 198.473 cv
259.325 198.223 259.76 197.93 260.181 197.645 cv
260.626 197.345 261.071 197.045 261.484 196.788 cv
261.637 196.693 li
261.786 196.795 li
262.442 197.247 263.135 197.682 263.847 198.089 cv
264.004 198.179 li
263.985 198.358 li
263.932 198.839 263.854 199.366 263.776 199.893 cv
263.701 200.398 263.624 200.919 263.572 201.388 cv
264.054 201.637 264.556 201.88 265.07 202.112 cv
265.402 201.782 265.757 201.402 266.102 201.034 cv
266.47 200.64 266.838 200.246 267.186 199.902 cv
267.314 199.775 li
267.481 199.842 li
268.261 200.154 269.034 200.426 269.778 200.651 cv
269.951 200.703 li
269.972 200.882 li
270.027 201.36 270.069 201.887 270.111 202.415 cv
270.151 202.928 270.193 203.457 270.248 203.93 cv
270.757 204.059 271.29 204.18 271.868 204.295 cv
272.115 203.901 272.375 203.454 272.627 203.02 cv
272.898 202.553 273.168 202.087 273.431 201.673 cv
273.527 201.52 li
273.706 201.548 li
274.457 201.665 275.249 201.751 276.127 201.811 cv
276.307 201.824 li
276.367 201.994 li
276.526 202.444 276.683 202.944 276.84 203.446 cv
276.995 203.94 277.154 204.45 277.314 204.902 cv
277.336 204.902 li
277.882 204.921 278.433 204.921 278.979 204.902 cv
279.001 204.902 li
279.161 204.45 279.321 203.94 279.475 203.445 cv
279.632 202.944 279.789 202.444 279.948 201.994 cv
280.008 201.824 li
280.188 201.811 li
281.065 201.751 281.857 201.665 282.609 201.548 cv
282.787 201.52 li
282.884 201.673 li
283.147 202.088 283.418 202.555 283.689 203.022 cv
283.941 203.455 284.2 203.902 284.447 204.295 cv
285.025 204.18 285.558 204.059 286.067 203.93 cv
286.122 203.457 286.163 202.929 286.204 202.416 cv
286.245 201.888 286.287 201.361 286.343 200.883 cv
286.364 200.704 li
286.536 200.652 li
287.28 200.426 288.053 200.154 288.834 199.843 cv
289.001 199.776 li
289.13 199.903 li
289.478 200.247 289.846 200.641 290.215 201.035 cv
290.559 201.403 290.913 201.783 291.244 202.112 cv
291.751 201.884 292.253 201.641 292.743 201.389 cv
292.69 200.92 292.613 200.4 292.539 199.896 cv
292.461 199.368 292.383 198.84 292.33 198.359 cv
292.311 198.18 li
292.467 198.09 li
293.191 197.675 293.885 197.24 294.528 196.796 cv
294.676 196.693 li
294.83 196.788 li
295.245 197.046 295.691 197.347 296.136 197.648 cv
296.557 197.932 296.99 198.225 297.388 198.473 cv
297.789 198.169 298.207 197.833 298.683 197.43 cv
298.528 196.984 298.337 196.495 298.153 196.02 cv
297.96 195.524 297.767 195.028 297.609 194.572 cv
297.55 194.401 li
297.683 194.279 li
298.273 193.737 298.853 193.157 299.406 192.556 cv
299.528 192.423 li
299.699 192.482 li
300.156 192.64 300.652 192.833 301.148 193.026 cv
301.623 193.211 302.112 193.401 302.557 193.556 cv
302.959 193.081 303.296 192.662 303.601 192.26 cv
303.353 191.862 303.061 191.429 302.777 191.009 cv
302.475 190.563 302.174 190.117 301.917 189.702 cv
301.822 189.548 li
301.924 189.4 li
302.372 188.75 302.807 188.057 303.218 187.339 cv
303.307 187.182 li
303.487 187.202 li
303.965 187.255 304.489 187.332 305.013 187.41 cv
305.521 187.485 306.045 187.562 306.518 187.615 cv
306.768 187.128 307.011 186.626 307.24 186.117 cv
306.91 185.785 306.53 185.429 306.161 185.084 cv
305.768 184.716 305.375 184.348 305.031 184.001 cv
304.905 183.873 li
304.971 183.706 li
305.282 182.925 305.554 182.153 305.779 181.408 cv
305.831 181.236 li
306.011 181.215 li
306.489 181.159 307.018 181.117 307.547 181.075 cv
308.059 181.035 308.587 180.994 309.059 180.938 cv
309.19 180.423 309.31 179.89 309.424 179.319 cv
309.03 179.071 308.583 178.812 308.149 178.56 cv
307.683 178.289 307.216 178.018 306.802 177.755 cv
306.649 177.658 li
306.677 177.48 li
306.793 176.73 306.879 175.939 306.94 175.06 cv
306.953 174.88 li
307.123 174.82 li
307.573 174.66 308.074 174.503 308.576 174.346 cv
309.07 174.191 309.579 174.032 310.03 173.872 cv
310.032 173.832 li
310.041 173.565 310.05 173.298 310.05 173.029 cv
310.05 172.76 310.041 172.494 310.032 172.228 cv
310.03 172.186 li
cp
f
236.895 300.677 mo
235.802 301.015 234.697 301.217 233.61 301.277 cv
233.539 301.281 li
233.523 301.211 li
233.459 300.934 233.351 300.668 233.2 300.423 cv
233.162 300.361 li
233.217 300.314 li
234.062 299.599 234.985 298.961 235.961 298.417 cv
236.029 298.379 li
236.073 298.445 li
236.503 299.099 236.799 299.817 236.953 300.579 cv
236.968 300.654 li
236.895 300.677 li
cp
236.947 303.04 mo
236.79 303.802 236.49 304.519 236.058 305.17 cv
236.015 305.234 li
235.947 305.198 li
234.936 304.665 234.012 304.026 233.201 303.3 cv
233.147 303.252 li
233.186 303.192 li
233.339 302.948 233.451 302.682 233.517 302.402 cv
233.534 302.331 li
233.607 302.337 li
234.694 302.428 235.798 302.631 236.887 302.941 cv
236.963 302.963 li
236.947 303.04 li
cp
234.314 306.906 mo
233.659 307.336 232.941 307.632 232.18 307.786 cv
232.104 307.801 li
232.082 307.728 li
231.744 306.635 231.542 305.53 231.482 304.443 cv
231.478 304.371 li
231.548 304.355 li
231.825 304.293 232.09 304.184 232.336 304.033 cv
232.398 303.995 li
232.445 304.05 li
233.16 304.896 233.798 305.819 234.341 306.794 cv
234.38 306.862 li
234.314 306.906 li
cp
230.963 303.689 mo
230.457 303.689 229.982 303.492 229.625 303.134 cv
229.267 302.777 229.07 302.301 229.07 301.796 cv
229.07 301.29 229.267 300.815 229.625 300.458 cv
229.982 300.1 230.457 299.903 230.963 299.903 cv
231.469 299.903 231.944 300.1 232.302 300.458 cv
233.039 301.196 233.039 302.396 232.301 303.134 cv
231.944 303.492 231.469 303.689 230.963 303.689 cv
cp
230.421 304.439 mo
230.331 305.527 230.128 306.631 229.818 307.72 cv
229.796 307.796 li
229.719 307.78 li
228.957 307.622 228.24 307.323 227.588 306.89 cv
227.525 306.848 li
227.56 306.78 li
228.095 305.768 228.733 304.844 229.459 304.034 cv
229.506 303.98 li
229.567 304.018 li
229.811 304.172 230.076 304.283 230.356 304.35 cv
230.427 304.366 li
230.421 304.439 li
cp
225.965 305.174 mo
225.896 305.213 li
225.853 305.147 li
225.423 304.492 225.127 303.774 224.973 303.012 cv
224.958 302.937 li
225.031 302.914 li
226.124 302.577 227.229 302.375 228.316 302.314 cv
228.387 302.31 li
228.403 302.38 li
228.466 302.657 228.575 302.922 228.726 303.169 cv
228.764 303.231 li
228.709 303.278 li
227.863 303.993 226.94 304.631 225.965 305.174 cv
cp
224.979 300.552 mo
225.136 299.79 225.436 299.073 225.869 298.421 cv
225.911 298.357 li
225.979 298.393 li
226.99 298.927 227.914 299.566 228.725 300.292 cv
228.779 300.339 li
228.74 300.4 li
228.587 300.643 228.475 300.909 228.409 301.189 cv
228.392 301.26 li
228.32 301.254 li
227.231 301.163 226.127 300.96 225.039 300.65 cv
224.963 300.629 li
224.979 300.552 li
cp
227.612 296.686 mo
228.267 296.256 228.985 295.96 229.747 295.806 cv
229.822 295.791 li
229.844 295.864 li
230.182 296.957 230.384 298.062 230.444 299.149 cv
230.448 299.22 li
230.378 299.236 li
230.101 299.299 229.836 299.408 229.59 299.559 cv
229.528 299.597 li
229.481 299.542 li
228.766 298.697 228.128 297.773 227.584 296.798 cv
227.546 296.729 li
227.612 296.686 li
cp
231.505 299.153 mo
231.595 298.065 231.798 296.961 232.108 295.872 cv
232.13 295.796 li
232.207 295.812 li
232.969 295.969 233.686 296.268 234.338 296.701 cv
234.401 296.743 li
234.366 296.811 li
233.832 297.823 233.193 298.747 232.467 299.558 cv
232.42 299.611 li
232.359 299.573 li
232.114 299.419 231.849 299.308 231.57 299.242 cv
231.499 299.225 li
231.505 299.153 li
cp
240.767 301.537 mo
240.628 301.487 240.471 301.438 240.319 301.391 cv
240.165 301.342 240.011 301.294 239.872 301.245 cv
239.82 301.227 li
239.816 301.171 li
239.797 300.901 239.771 300.658 239.735 300.427 cv
239.727 300.372 li
239.774 300.342 li
239.901 300.262 240.044 300.178 240.187 300.095 cv
240.321 300.018 240.459 299.938 240.58 299.861 cv
240.545 299.686 240.508 299.522 240.468 299.363 cv
240.322 299.346 240.158 299.333 239.999 299.32 cv
239.838 299.308 239.677 299.295 239.53 299.278 cv
239.475 299.272 li
239.459 299.219 li
239.39 298.989 239.306 298.751 239.21 298.512 cv
239.19 298.46 li
239.229 298.421 li
239.335 298.314 239.455 298.201 239.576 298.089 cv
239.69 297.982 239.807 297.873 239.909 297.771 cv
239.838 297.614 239.763 297.459 239.686 297.31 cv
239.54 297.326 239.379 297.35 239.222 297.373 cv
239.061 297.397 238.901 297.421 238.754 297.437 cv
238.699 297.443 li
238.671 297.395 li
238.545 297.173 238.411 296.96 238.273 296.761 cv
238.242 296.715 li
238.271 296.668 li
238.35 296.54 238.443 296.403 238.535 296.266 cv
238.623 296.137 238.713 296.003 238.789 295.881 cv
238.695 295.757 238.592 295.629 238.468 295.483 cv
238.332 295.53 238.182 295.588 238.037 295.645 cv
237.884 295.704 237.73 295.764 237.589 295.813 cv
237.537 295.831 li
237.499 295.79 li
237.331 295.608 237.153 295.429 236.969 295.26 cv
236.928 295.223 li
236.946 295.17 li
236.995 295.029 237.055 294.876 237.114 294.723 cv
237.171 294.577 237.229 294.427 237.276 294.291 cv
237.131 294.168 237.002 294.064 236.878 293.97 cv
236.756 294.046 236.622 294.137 236.493 294.224 cv
236.356 294.316 236.219 294.409 236.091 294.488 cv
236.044 294.517 li
235.999 294.486 li
235.8 294.349 235.587 294.215 235.365 294.088 cv
235.316 294.06 li
235.322 294.005 li
235.339 293.857 235.363 293.696 235.387 293.534 cv
235.41 293.378 235.433 293.218 235.449 293.073 cv
235.299 292.995 235.144 292.921 234.988 292.85 cv
234.887 292.952 234.778 293.068 234.672 293.181 cv
234.559 293.303 234.445 293.424 234.338 293.53 cv
234.298 293.569 li
234.247 293.549 li
234.007 293.453 233.77 293.369 233.541 293.3 cv
233.487 293.284 li
233.481 293.229 li
233.464 293.082 233.451 292.921 233.438 292.759 cv
233.426 292.6 233.413 292.437 233.396 292.291 cv
233.239 292.251 233.075 292.214 232.898 292.179 cv
232.822 292.3 232.742 292.438 232.664 292.571 cv
232.581 292.715 232.498 292.858 232.417 292.986 cv
232.387 293.032 li
232.332 293.024 li
232.103 292.988 231.86 292.962 231.588 292.943 cv
231.532 292.939 li
231.514 292.887 li
231.465 292.748 231.417 292.594 231.368 292.44 cv
231.321 292.288 231.272 292.131 231.222 291.992 cv
231.216 291.992 li
231.048 291.986 230.878 291.986 230.71 291.992 cv
230.704 291.992 li
230.654 292.132 230.605 292.288 230.558 292.441 cv
230.509 292.595 230.461 292.749 230.412 292.887 cv
230.394 292.939 li
230.338 292.943 li
230.069 292.961 229.825 292.988 229.594 293.024 cv
229.539 293.032 li
229.509 292.986 li
229.428 292.858 229.345 292.714 229.261 292.57 cv
229.184 292.437 229.104 292.3 229.028 292.179 cv
228.852 292.214 228.688 292.251 228.531 292.291 cv
228.514 292.436 228.501 292.599 228.488 292.757 cv
228.475 292.919 228.463 293.081 228.446 293.228 cv
228.439 293.284 li
228.386 293.3 li
228.158 293.369 227.92 293.453 227.679 293.548 cv
227.628 293.569 li
227.588 293.53 li
227.481 293.424 227.367 293.302 227.254 293.181 cv
227.148 293.068 227.039 292.952 226.938 292.85 cv
226.782 292.921 226.627 292.995 226.477 293.073 cv
226.493 293.217 226.517 293.378 226.54 293.533 cv
226.564 293.695 226.588 293.857 226.604 294.005 cv
226.61 294.06 li
226.562 294.087 li
226.339 294.215 226.126 294.349 225.928 294.486 cv
225.882 294.517 li
225.835 294.488 li
225.708 294.409 225.572 294.317 225.436 294.225 cv
225.305 294.137 225.171 294.046 225.048 293.969 cv
224.925 294.063 224.796 294.167 224.65 294.291 cv
224.698 294.428 224.756 294.578 224.813 294.724 cv
224.872 294.877 224.931 295.029 224.98 295.17 cv
224.998 295.222 li
224.957 295.26 li
224.774 295.428 224.596 295.607 224.427 295.79 cv
224.39 295.831 li
224.337 295.813 li
224.197 295.764 224.045 295.705 223.893 295.646 cv
223.746 295.589 223.595 295.53 223.458 295.482 cv
223.335 295.628 223.231 295.757 223.137 295.881 cv
223.214 296.004 223.304 296.138 223.392 296.268 cv
223.484 296.404 223.577 296.541 223.655 296.667 cv
223.685 296.715 li
223.653 296.76 li
223.516 296.959 223.382 297.172 223.255 297.394 cv
223.227 297.443 li
223.172 297.436 li
223.025 297.42 222.864 297.396 222.703 297.373 cv
222.547 297.35 222.386 297.326 222.24 297.31 cv
222.162 297.461 222.088 297.615 222.018 297.77 cv
222.119 297.872 222.236 297.982 222.35 298.088 cv
222.471 298.201 222.592 298.314 222.697 298.421 cv
222.736 298.46 li
222.716 298.512 li
222.62 298.751 222.537 298.989 222.467 299.219 cv
222.451 299.272 li
222.396 299.278 li
222.25 299.295 222.088 299.308 221.927 299.32 cv
221.768 299.333 221.604 299.346 221.458 299.363 cv
221.418 299.521 221.381 299.685 221.346 299.861 cv
221.467 299.937 221.605 300.017 221.738 300.095 cv
221.882 300.178 222.025 300.261 222.153 300.342 cv
222.199 300.372 li
222.191 300.427 li
222.155 300.658 222.129 300.901 222.11 301.171 cv
222.106 301.227 li
222.054 301.245 li
221.915 301.294 221.761 301.342 221.606 301.391 cv
221.455 301.438 221.298 301.487 221.159 301.536 cv
221.159 301.553 li
221.156 301.634 221.153 301.714 221.153 301.796 cv
221.153 301.877 221.156 301.958 221.159 302.039 cv
221.159 302.055 li
221.299 302.105 221.456 302.154 221.608 302.201 cv
221.762 302.249 221.916 302.297 222.054 302.346 cv
222.106 302.365 li
222.11 302.42 li
222.129 302.69 222.155 302.934 222.191 303.165 cv
222.199 303.22 li
222.153 303.249 li
222.025 303.33 221.882 303.413 221.739 303.496 cv
221.605 303.574 221.467 303.654 221.346 303.731 cv
221.381 303.907 221.418 304.071 221.458 304.229 cv
221.604 304.246 221.766 304.258 221.923 304.271 cv
222.086 304.284 222.249 304.297 222.396 304.314 cv
222.451 304.32 li
222.467 304.373 li
222.536 304.602 222.62 304.84 222.716 305.08 cv
222.736 305.131 li
222.697 305.171 li
222.591 305.278 222.47 305.391 222.349 305.504 cv
222.236 305.61 222.119 305.719 222.018 305.821 cv
222.088 305.978 222.163 306.132 222.24 306.282 cv
222.386 306.266 222.547 306.242 222.704 306.219 cv
222.865 306.195 223.025 306.171 223.172 306.155 cv
223.227 306.149 li
223.255 306.197 li
223.382 306.419 223.516 306.633 223.653 306.831 cv
223.684 306.877 li
223.655 306.924 li
223.576 307.051 223.484 307.188 223.392 307.324 cv
223.304 307.454 223.214 307.588 223.137 307.711 cv
223.231 307.835 223.335 307.964 223.458 308.109 cv
223.595 308.061 223.745 308.003 223.891 307.946 cv
224.044 307.887 224.196 307.827 224.337 307.779 cv
224.389 307.761 li
224.427 307.801 li
224.596 307.986 224.774 308.164 224.957 308.332 cv
224.998 308.369 li
224.98 308.422 li
224.931 308.562 224.872 308.714 224.813 308.867 cv
224.756 309.013 224.697 309.164 224.65 309.301 cv
224.796 309.425 224.925 309.529 225.048 309.622 cv
225.171 309.545 225.304 309.455 225.434 309.367 cv
225.571 309.275 225.707 309.183 225.835 309.104 cv
225.882 309.074 li
225.927 309.106 li
226.129 309.245 226.342 309.379 226.561 309.504 cv
226.61 309.531 li
226.604 309.587 li
226.587 309.735 226.563 309.897 226.54 310.059 cv
226.516 310.214 226.493 310.374 226.477 310.519 cv
226.625 310.595 226.779 310.67 226.938 310.741 cv
227.039 310.64 227.149 310.523 227.255 310.41 cv
227.368 310.289 227.481 310.167 227.588 310.062 cv
227.628 310.023 li
227.679 310.043 li
227.919 310.139 228.157 310.223 228.385 310.292 cv
228.439 310.308 li
228.445 310.363 li
228.462 310.51 228.475 310.672 228.488 310.834 cv
228.5 310.992 228.513 311.155 228.53 311.301 cv
228.687 311.34 228.851 311.377 229.028 311.413 cv
229.104 311.292 229.184 311.154 229.262 311.021 cv
229.345 310.877 229.428 310.734 229.509 310.606 cv
229.539 310.559 li
229.594 310.568 li
229.825 310.604 230.069 310.63 230.338 310.649 cv
230.394 310.653 li
230.412 310.705 li
230.461 310.844 230.509 310.997 230.558 311.152 cv
230.605 311.304 230.654 311.46 230.704 311.599 cv
230.71 311.6 li
230.878 311.605 231.048 311.605 231.216 311.6 cv
231.222 311.599 li
231.272 311.46 231.321 311.304 231.368 311.151 cv
231.417 310.997 231.465 310.844 231.514 310.705 cv
231.532 310.653 li
231.588 310.649 li
231.857 310.63 232.101 310.604 232.332 310.568 cv
232.387 310.559 li
232.417 310.606 li
232.498 310.734 232.581 310.878 232.664 311.021 cv
232.742 311.155 232.822 311.292 232.898 311.413 cv
233.075 311.377 233.239 311.34 233.396 311.301 cv
233.413 311.155 233.425 310.993 233.438 310.835 cv
233.451 310.672 233.463 310.51 233.481 310.363 cv
233.487 310.308 li
233.54 310.292 li
233.769 310.223 234.007 310.139 234.247 310.043 cv
234.298 310.023 li
234.338 310.062 li
234.445 310.168 234.558 310.289 234.672 310.41 cv
234.778 310.523 234.887 310.64 234.988 310.741 cv
235.144 310.671 235.299 310.597 235.449 310.519 cv
235.433 310.375 235.409 310.215 235.387 310.06 cv
235.362 309.897 235.339 309.735 235.322 309.587 cv
235.316 309.532 li
235.364 309.504 li
235.587 309.377 235.8 309.243 235.998 309.106 cv
236.044 309.075 li
236.091 309.104 li
236.219 309.183 236.356 309.276 236.493 309.368 cv
236.622 309.456 236.756 309.546 236.878 309.622 cv
237.001 309.529 237.13 309.425 237.276 309.301 cv
237.229 309.164 237.17 309.014 237.113 308.867 cv
237.054 308.715 236.995 308.563 236.946 308.422 cv
236.928 308.37 li
236.969 308.332 li
237.15 308.165 237.329 307.987 237.499 307.802 cv
237.536 307.761 li
237.589 307.779 li
237.729 307.828 237.882 307.887 238.035 307.947 cv
238.181 308.003 238.331 308.062 238.468 308.11 cv
238.591 307.964 238.695 307.835 238.789 307.711 cv
238.713 307.589 238.623 307.456 238.535 307.326 cv
238.443 307.189 238.35 307.052 238.271 306.924 cv
238.242 306.877 li
238.273 306.831 li
238.411 306.631 238.545 306.418 238.671 306.198 cv
238.699 306.149 li
238.754 306.155 li
238.901 306.172 239.062 306.195 239.223 306.219 cv
239.38 306.242 239.541 306.266 239.686 306.282 cv
239.763 306.133 239.838 305.978 239.908 305.821 cv
239.807 305.719 239.69 305.61 239.576 305.504 cv
239.456 305.391 239.335 305.278 239.229 305.171 cv
239.19 305.131 li
239.211 305.08 li
239.306 304.84 239.39 304.602 239.459 304.373 cv
239.475 304.32 li
239.53 304.314 li
239.677 304.297 239.84 304.284 240.003 304.271 cv
240.16 304.258 240.323 304.246 240.468 304.229 cv
240.508 304.07 240.545 303.906 240.58 303.731 cv
240.459 303.654 240.321 303.575 240.188 303.497 cv
240.044 303.414 239.901 303.33 239.774 303.249 cv
239.727 303.22 li
239.735 303.165 li
239.771 302.934 239.797 302.691 239.816 302.421 cv
239.82 302.365 li
239.872 302.347 li
240.011 302.298 240.165 302.249 240.319 302.201 cv
240.471 302.153 240.628 302.104 240.767 302.055 cv
240.767 302.043 li
240.77 301.961 240.773 301.879 240.773 301.796 cv
240.773 301.713 240.77 301.631 240.767 301.549 cv
240.767 301.537 li
cp
f
270.243 108.035 mo
269.016 108.414 267.775 108.641 266.554 108.709 cv
266.474 108.713 li
266.456 108.635 li
266.385 108.323 266.263 108.025 266.093 107.75 cv
266.051 107.68 li
266.113 107.627 li
267.061 106.825 268.098 106.108 269.194 105.497 cv
269.271 105.454 li
269.32 105.528 li
269.803 106.262 270.136 107.069 270.309 107.925 cv
270.326 108.009 li
270.243 108.035 li
cp
270.302 110.689 mo
270.125 111.544 269.789 112.349 269.303 113.081 cv
269.255 113.153 li
269.179 113.113 li
268.044 112.514 267.006 111.796 266.094 110.981 cv
266.035 110.927 li
266.077 110.859 li
266.25 110.586 266.375 110.287 266.45 109.973 cv
266.469 109.893 li
266.55 109.9 li
267.771 110.002 269.011 110.23 270.235 110.578 cv
270.32 110.602 li
270.302 110.689 li
cp
267.345 115.031 mo
266.609 115.513 265.803 115.846 264.947 116.019 cv
264.863 116.036 li
264.838 115.953 li
264.458 114.726 264.232 113.485 264.164 112.264 cv
264.159 112.184 li
264.238 112.166 li
264.549 112.095 264.846 111.973 265.123 111.803 cv
265.192 111.761 li
265.245 111.823 li
266.049 112.773 266.766 113.81 267.376 114.905 cv
267.419 114.982 li
267.345 115.031 li
cp
263.581 111.417 mo
263.013 111.417 262.479 111.196 262.078 110.795 cv
261.677 110.393 261.455 109.859 261.455 109.291 cv
261.455 108.723 261.676 108.19 262.078 107.788 cv
262.479 107.387 263.013 107.166 263.581 107.166 cv
264.149 107.166 264.683 107.387 265.084 107.788 cv
265.913 108.617 265.913 109.966 265.084 110.795 cv
264.683 111.196 264.149 111.417 263.581 111.417 cv
cp
262.973 112.26 mo
262.871 113.482 262.643 114.722 262.295 115.945 cv
262.27 116.03 li
262.184 116.012 li
261.328 115.835 260.522 115.499 259.791 115.013 cv
259.719 114.965 li
259.759 114.889 li
260.359 113.753 261.077 112.715 261.892 111.805 cv
261.945 111.745 li
262.013 111.788 li
262.287 111.96 262.585 112.085 262.9 112.16 cv
262.979 112.178 li
262.973 112.26 li
cp
257.968 113.086 mo
257.891 113.129 li
257.842 113.055 li
257.359 112.32 257.027 111.513 256.854 110.658 cv
256.837 110.573 li
256.919 110.548 li
258.147 110.168 259.388 109.942 260.608 109.874 cv
260.688 109.869 li
260.706 109.948 li
260.777 110.259 260.899 110.557 261.069 110.833 cv
261.112 110.903 li
261.049 110.956 li
260.1 111.759 259.063 112.476 257.968 113.086 cv
cp
256.86 107.894 mo
257.037 107.039 257.373 106.234 257.859 105.501 cv
257.907 105.429 li
257.983 105.469 li
259.119 106.07 260.157 106.787 261.068 107.602 cv
261.128 107.655 li
261.085 107.723 li
260.912 107.997 260.787 108.296 260.713 108.61 cv
260.694 108.69 li
260.612 108.683 li
259.39 108.581 258.15 108.353 256.927 108.005 cv
256.842 107.981 li
256.86 107.894 li
cp
259.817 103.552 mo
260.553 103.069 261.359 102.737 262.215 102.564 cv
262.299 102.547 li
262.325 102.629 li
262.704 103.857 262.931 105.098 262.998 106.319 cv
263.003 106.399 li
262.925 106.417 li
262.613 106.487 262.315 106.609 262.039 106.779 cv
261.97 106.822 li
261.917 106.76 li
261.113 105.81 260.397 104.774 259.787 103.678 cv
259.744 103.601 li
259.817 103.552 li
cp
264.189 106.323 mo
264.291 105.102 264.519 103.862 264.867 102.638 cv
264.892 102.552 li
264.978 102.57 li
265.834 102.747 266.639 103.083 267.371 103.569 cv
267.443 103.617 li
267.403 103.693 li
266.803 104.829 266.086 105.867 265.271 106.778 cv
265.217 106.838 li
265.149 106.795 li
264.874 106.622 264.576 106.497 264.262 106.423 cv
264.183 106.404 li
264.189 106.323 li
cp
274.592 109 mo
274.436 108.945 274.26 108.89 274.089 108.837 cv
273.916 108.782 273.743 108.728 273.587 108.673 cv
273.529 108.652 li
273.524 108.59 li
273.503 108.286 273.473 108.013 273.433 107.754 cv
273.424 107.692 li
273.477 107.659 li
273.619 107.568 273.78 107.475 273.94 107.382 cv
274.091 107.294 274.246 107.204 274.382 107.118 cv
274.343 106.921 274.301 106.737 274.256 106.559 cv
274.092 106.54 273.908 106.525 273.73 106.511 cv
273.549 106.497 273.368 106.483 273.203 106.464 cv
273.141 106.456 li
273.123 106.397 li
273.045 106.139 272.951 105.872 272.844 105.603 cv
272.821 105.545 li
272.865 105.501 li
272.983 105.381 273.119 105.254 273.255 105.128 cv
273.382 105.008 273.514 104.885 273.628 104.77 cv
273.549 104.594 273.465 104.421 273.378 104.253 cv
273.215 104.271 273.033 104.298 272.857 104.324 cv
272.676 104.351 272.496 104.377 272.331 104.396 cv
272.27 104.402 li
272.238 104.348 li
272.096 104.1 271.946 103.86 271.791 103.636 cv
271.756 103.585 li
271.789 103.532 li
271.878 103.389 271.982 103.235 272.086 103.081 cv
272.184 102.935 272.285 102.786 272.371 102.648 cv
272.265 102.509 272.149 102.365 272.01 102.201 cv
271.857 102.254 271.689 102.319 271.526 102.383 cv
271.354 102.45 271.182 102.517 271.023 102.572 cv
270.964 102.592 li
270.922 102.546 li
270.734 102.341 270.533 102.141 270.327 101.951 cv
270.281 101.909 li
270.301 101.85 li
270.356 101.691 270.423 101.52 270.49 101.348 cv
270.553 101.184 270.619 101.016 270.672 100.862 cv
270.508 100.724 270.364 100.607 270.225 100.502 cv
270.087 100.588 269.937 100.689 269.791 100.787 cv
269.638 100.891 269.484 100.995 269.341 101.084 cv
269.288 101.117 li
269.237 101.081 li
269.014 100.927 268.774 100.777 268.525 100.634 cv
268.47 100.603 li
268.477 100.541 li
268.495 100.375 268.522 100.194 268.549 100.012 cv
268.575 99.837 268.602 99.6569 268.62 99.4942 cv
268.45 99.407 268.277 99.3233 268.102 99.2445 cv
267.988 99.3582 267.866 99.489 267.747 99.6161 cv
267.619 99.7524 267.492 99.8887 267.372 100.008 cv
267.327 100.052 li
267.269 100.029 li
267 99.921 266.733 99.8271 266.476 99.7493 cv
266.416 99.7313 li
266.409 99.6692 li
266.39 99.5049 266.376 99.3235 266.361 99.1418 cv
266.347 98.9637 266.333 98.7803 266.314 98.6163 cv
266.137 98.5713 265.953 98.5299 265.754 98.4903 cv
265.669 98.6263 265.579 98.7809 265.492 98.9308 cv
265.398 99.0919 265.305 99.2531 265.214 99.3962 cv
265.181 99.4489 li
265.119 99.4393 li
264.862 99.3994 264.588 99.3695 264.283 99.3482 cv
264.221 99.3439 li
264.2 99.2851 li
264.145 99.1296 264.09 98.9565 264.036 98.7831 cv
263.983 98.6125 263.928 98.4366 263.872 98.2807 cv
263.865 98.2805 li
263.676 98.2739 263.486 98.2739 263.297 98.2805 cv
263.29 98.2807 li
263.234 98.437 263.179 98.6133 263.126 98.7845 cv
263.072 98.9574 263.018 99.13 262.963 99.2851 cv
262.942 99.3439 li
262.88 99.3482 li
262.577 99.3692 262.303 99.399 262.043 99.4393 cv
261.982 99.4489 li
261.948 99.3962 li
261.857 99.2527 261.764 99.0909 261.67 98.9294 cv
261.583 98.7798 261.494 98.6259 261.408 98.4903 cv
261.21 98.5298 261.026 98.5712 260.849 98.6163 cv
260.83 98.7796 260.816 98.9622 260.802 99.1396 cv
260.787 99.3218 260.773 99.504 260.754 99.6689 cv
260.746 99.7308 li
260.687 99.7489 li
260.43 99.8268 260.163 99.9208 259.893 100.028 cv
259.835 100.051 li
259.791 100.007 li
259.67 99.8883 259.543 99.7519 259.415 99.6157 cv
259.297 99.4888 259.174 99.3581 259.06 99.2445 cv
258.885 99.3233 258.712 99.407 258.543 99.4941 cv
258.561 99.6566 258.587 99.8367 258.613 100.012 cv
258.64 100.193 258.667 100.375 258.685 100.541 cv
258.692 100.603 li
258.638 100.634 li
258.388 100.777 258.148 100.928 257.926 101.081 cv
257.875 101.117 li
257.822 101.084 li
257.679 100.995 257.526 100.892 257.373 100.788 cv
257.227 100.689 257.076 100.588 256.938 100.501 cv
256.799 100.606 256.655 100.723 256.491 100.862 cv
256.544 101.016 256.61 101.185 256.674 101.349 cv
256.74 101.52 256.807 101.692 256.861 101.849 cv
256.882 101.908 li
256.836 101.951 li
256.63 102.14 256.43 102.34 256.241 102.546 cv
256.198 102.592 li
256.139 102.572 li
255.982 102.517 255.811 102.451 255.64 102.384 cv
255.476 102.32 255.306 102.254 255.152 102.201 cv
255.014 102.364 254.897 102.509 254.792 102.648 cv
254.878 102.786 254.98 102.937 255.078 103.083 cv
255.182 103.236 255.285 103.389 255.374 103.532 cv
255.407 103.584 li
255.371 103.636 li
255.217 103.859 255.067 104.098 254.924 104.348 cv
254.893 104.402 li
254.831 104.395 li
254.666 104.377 254.485 104.35 254.304 104.324 cv
254.128 104.298 253.947 104.271 253.784 104.253 cv
253.697 104.422 253.613 104.596 253.534 104.77 cv
253.648 104.885 253.78 105.008 253.908 105.127 cv
254.043 105.254 254.179 105.381 254.298 105.501 cv
254.341 105.545 li
254.318 105.603 li
254.211 105.872 254.117 106.139 254.039 106.397 cv
254.021 106.456 li
253.959 106.464 li
253.795 106.483 253.613 106.497 253.432 106.511 cv
253.254 106.525 253.07 106.54 252.906 106.559 cv
252.861 106.736 252.82 106.92 252.78 107.118 cv
252.916 107.204 253.071 107.294 253.221 107.381 cv
253.382 107.474 253.543 107.568 253.686 107.659 cv
253.738 107.692 li
253.729 107.754 li
253.689 108.013 253.659 108.287 253.638 108.59 cv
253.634 108.652 li
253.575 108.673 li
253.419 108.728 253.246 108.782 253.072 108.837 cv
252.902 108.89 252.726 108.945 252.57 109 cv
252.57 109.018 li
252.567 109.109 252.564 109.2 252.564 109.291 cv
252.564 109.383 252.567 109.474 252.57 109.564 cv
252.57 109.583 li
252.727 109.638 252.903 109.693 253.074 109.747 cv
253.247 109.801 253.42 109.855 253.575 109.91 cv
253.634 109.93 li
253.638 109.993 li
253.659 110.296 253.689 110.57 253.729 110.829 cv
253.738 110.891 li
253.686 110.924 li
253.543 111.014 253.382 111.108 253.221 111.201 cv
253.071 111.289 252.916 111.379 252.78 111.464 cv
252.819 111.662 252.861 111.847 252.906 112.024 cv
253.069 112.043 253.251 112.057 253.428 112.071 cv
253.611 112.086 253.794 112.1 253.959 112.119 cv
254.021 112.127 li
254.039 112.186 li
254.117 112.443 254.211 112.711 254.318 112.98 cv
254.341 113.038 li
254.297 113.082 li
254.178 113.202 254.042 113.329 253.906 113.456 cv
253.779 113.576 253.648 113.698 253.534 113.812 cv
253.613 113.988 253.697 114.162 253.784 114.33 cv
253.948 114.312 254.129 114.285 254.305 114.259 cv
254.486 114.232 254.666 114.205 254.831 114.187 cv
254.893 114.18 li
254.924 114.235 li
255.066 114.484 255.217 114.724 255.371 114.947 cv
255.406 114.998 li
255.373 115.051 li
255.285 115.194 255.181 115.347 255.077 115.501 cv
254.979 115.646 254.877 115.797 254.791 115.935 cv
254.897 116.074 255.013 116.218 255.152 116.382 cv
255.305 116.328 255.474 116.263 255.638 116.199 cv
255.81 116.132 255.981 116.066 256.139 116.011 cv
256.198 115.991 li
256.24 116.037 li
256.43 116.243 256.63 116.443 256.835 116.632 cv
256.881 116.674 li
256.861 116.733 li
256.806 116.891 256.74 117.062 256.673 117.233 cv
256.61 117.397 256.544 117.566 256.49 117.72 cv
256.655 117.86 256.8 117.977 256.937 118.081 cv
257.075 117.995 257.225 117.894 257.371 117.795 cv
257.525 117.692 257.678 117.588 257.821 117.499 cv
257.874 117.466 li
257.925 117.502 li
258.152 117.658 258.392 117.808 258.638 117.949 cv
258.692 117.979 li
258.685 118.041 li
258.667 118.208 258.64 118.39 258.613 118.572 cv
258.587 118.746 258.56 118.926 258.542 119.088 cv
258.709 119.174 258.882 119.258 259.06 119.338 cv
259.174 119.224 259.297 119.093 259.416 118.966 cv
259.543 118.83 259.671 118.694 259.791 118.575 cv
259.835 118.531 li
259.893 118.554 li
260.162 118.662 260.429 118.756 260.686 118.834 cv
260.746 118.852 li
260.753 118.913 li
260.772 119.078 260.787 119.261 260.801 119.443 cv
260.815 119.62 260.83 119.803 260.849 119.966 cv
261.024 120.011 261.209 120.053 261.408 120.092 cv
261.494 119.956 261.583 119.802 261.671 119.652 cv
261.764 119.491 261.858 119.33 261.948 119.187 cv
261.982 119.134 li
262.043 119.144 li
262.303 119.184 262.576 119.214 262.879 119.235 cv
262.942 119.239 li
262.963 119.298 li
263.018 119.453 263.072 119.626 263.126 119.799 cv
263.179 119.97 263.234 120.146 263.29 120.302 cv
263.297 120.302 li
263.486 120.309 263.676 120.309 263.865 120.302 cv
263.872 120.302 li
263.928 120.146 263.983 119.97 264.036 119.799 cv
264.091 119.626 264.145 119.453 264.2 119.298 cv
264.22 119.239 li
264.283 119.235 li
264.586 119.214 264.859 119.184 265.119 119.144 cv
265.18 119.134 li
265.214 119.187 li
265.305 119.33 265.398 119.491 265.492 119.653 cv
265.579 119.802 265.669 119.957 265.754 120.092 cv
265.953 120.053 266.138 120.011 266.313 119.966 cv
266.332 119.803 266.347 119.621 266.361 119.443 cv
266.375 119.261 266.389 119.079 266.409 118.914 cv
266.416 118.852 li
266.476 118.834 li
266.733 118.756 267 118.662 267.269 118.554 cv
267.327 118.531 li
267.371 118.575 li
267.492 118.694 267.619 118.83 267.746 118.966 cv
267.865 119.093 267.988 119.225 268.102 119.338 cv
268.277 119.26 268.451 119.176 268.62 119.089 cv
268.602 118.927 268.575 118.747 268.549 118.573 cv
268.522 118.39 268.495 118.208 268.477 118.042 cv
268.47 117.98 li
268.524 117.949 li
268.775 117.806 269.014 117.655 269.236 117.502 cv
269.288 117.466 li
269.341 117.499 li
269.484 117.588 269.638 117.692 269.792 117.796 cv
269.937 117.894 270.087 117.995 270.225 118.081 cv
270.363 117.976 270.507 117.86 270.672 117.721 cv
270.618 117.567 270.552 117.398 270.489 117.234 cv
270.422 117.063 270.355 116.891 270.301 116.734 cv
270.28 116.675 li
270.326 116.632 li
270.53 116.445 270.73 116.245 270.922 116.037 cv
270.964 115.991 li
271.023 116.012 li
271.181 116.066 271.352 116.133 271.523 116.2 cv
271.688 116.263 271.856 116.329 272.01 116.382 cv
272.149 116.218 272.265 116.074 272.371 115.935 cv
272.285 115.798 272.184 115.648 272.086 115.503 cv
271.982 115.349 271.878 115.195 271.789 115.051 cv
271.756 114.998 li
271.791 114.947 li
271.946 114.722 272.097 114.483 272.238 114.235 cv
272.269 114.181 li
272.331 114.188 li
272.497 114.206 272.677 114.232 272.858 114.259 cv
273.034 114.285 273.215 114.312 273.378 114.33 cv
273.465 114.162 273.549 113.989 273.628 113.813 cv
273.514 113.698 273.383 113.575 273.255 113.456 cv
273.119 113.329 272.984 113.202 272.865 113.082 cv
272.821 113.038 li
272.844 112.98 li
272.951 112.71 273.046 112.443 273.123 112.186 cv
273.141 112.127 li
273.203 112.119 li
273.369 112.1 273.551 112.086 273.734 112.071 cv
273.911 112.057 274.093 112.043 274.256 112.024 cv
274.301 111.846 274.343 111.661 274.382 111.464 cv
274.246 111.379 274.092 111.289 273.942 111.202 cv
273.781 111.108 273.619 111.015 273.477 110.924 cv
273.424 110.891 li
273.433 110.829 li
273.473 110.57 273.503 110.297 273.524 109.993 cv
273.529 109.931 li
273.587 109.91 li
273.743 109.855 273.916 109.801 274.09 109.746 cv
274.26 109.693 274.436 109.638 274.592 109.583 cv
274.592 109.569 li
274.595 109.477 274.599 109.384 274.599 109.291 cv
274.599 109.199 274.596 109.107 274.592 109.015 cv
274.592 109 li
cp
f
260.246 297.402 mo
259.018 297.781 257.777 298.008 256.557 298.076 cv
256.477 298.08 li
256.459 298.002 li
256.388 297.69 256.266 297.392 256.096 297.117 cv
256.053 297.047 li
256.116 296.994 li
257.064 296.191 258.101 295.475 259.197 294.864 cv
259.274 294.821 li
259.323 294.895 li
259.806 295.629 260.138 296.436 260.311 297.292 cv
260.328 297.376 li
260.246 297.402 li
cp
260.305 300.056 mo
260.128 300.911 259.792 301.716 259.306 302.448 cv
259.258 302.52 li
259.182 302.48 li
258.046 301.88 257.008 301.163 256.097 300.348 cv
256.037 300.294 li
256.08 300.226 li
256.253 299.952 256.378 299.654 256.452 299.339 cv
256.471 299.26 li
256.553 299.267 li
257.774 299.368 259.014 299.597 260.238 299.945 cv
260.323 299.969 li
260.305 300.056 li
cp
257.347 304.397 mo
256.612 304.88 255.805 305.213 254.95 305.385 cv
254.866 305.402 li
254.84 305.32 li
254.461 304.093 254.234 302.852 254.166 301.631 cv
254.162 301.551 li
254.24 301.533 li
254.551 301.462 254.849 301.34 255.126 301.17 cv
255.195 301.128 li
255.248 301.19 li
256.052 302.14 256.768 303.177 257.378 304.271 cv
257.421 304.349 li
257.347 304.397 li
cp
253.584 300.784 mo
253.016 300.784 252.482 300.563 252.081 300.161 cv
251.679 299.76 251.458 299.226 251.458 298.658 cv
251.458 298.09 251.679 297.557 252.081 297.155 cv
252.482 296.754 253.016 296.533 253.584 296.533 cv
254.152 296.533 254.686 296.754 255.087 297.155 cv
255.916 297.984 255.916 299.333 255.087 300.162 cv
254.685 300.563 254.152 300.784 253.584 300.784 cv
cp
252.975 301.627 mo
252.874 302.849 252.645 304.089 252.297 305.312 cv
252.273 305.397 li
252.187 305.379 li
251.33 305.202 250.525 304.866 249.794 304.38 cv
249.722 304.332 li
249.762 304.256 li
250.362 303.12 251.079 302.082 251.894 301.172 cv
251.948 301.112 li
252.016 301.155 li
252.289 301.327 252.588 301.452 252.902 301.526 cv
252.982 301.545 li
252.975 301.627 li
cp
247.971 302.453 mo
247.893 302.496 li
247.845 302.422 li
247.362 301.687 247.029 300.88 246.856 300.024 cv
246.839 299.94 li
246.922 299.915 li
248.149 299.535 249.39 299.309 250.611 299.241 cv
250.691 299.236 li
250.709 299.315 li
250.78 299.626 250.902 299.924 251.072 300.2 cv
251.114 300.27 li
251.052 300.323 li
250.102 301.126 249.066 301.843 247.971 302.453 cv
cp
246.863 297.261 mo
247.04 296.406 247.376 295.601 247.862 294.868 cv
247.91 294.796 li
247.986 294.836 li
249.122 295.437 250.16 296.154 251.07 296.969 cv
251.13 297.022 li
251.087 297.09 li
250.915 297.364 250.79 297.662 250.715 297.977 cv
250.696 298.057 li
250.615 298.05 li
249.393 297.948 248.153 297.72 246.93 297.372 cv
246.845 297.348 li
246.863 297.261 li
cp
249.82 292.919 mo
250.556 292.436 251.362 292.104 252.218 291.931 cv
252.302 291.914 li
252.327 291.996 li
252.707 293.224 252.933 294.465 253.001 295.686 cv
253.006 295.766 li
252.927 295.784 li
252.616 295.854 252.318 295.976 252.042 296.146 cv
251.972 296.189 li
251.919 296.127 li
251.116 295.177 250.399 294.141 249.789 293.045 cv
249.746 292.968 li
249.82 292.919 li
cp
254.192 295.69 mo
254.294 294.469 254.522 293.229 254.87 292.004 cv
254.894 291.919 li
254.981 291.937 li
255.837 292.114 256.642 292.45 257.374 292.936 cv
257.446 292.984 li
257.405 293.06 li
256.806 294.196 256.089 295.234 255.273 296.145 cv
255.22 296.205 li
255.152 296.162 li
254.877 295.989 254.579 295.864 254.265 295.79 cv
254.185 295.771 li
254.192 295.69 li
cp
264.595 298.367 mo
264.439 298.312 264.263 298.257 264.092 298.203 cv
263.919 298.149 263.746 298.095 263.59 298.04 cv
263.531 298.019 li
263.527 297.957 li
263.506 297.653 263.476 297.38 263.436 297.12 cv
263.426 297.059 li
263.479 297.025 li
263.622 296.935 263.783 296.842 263.943 296.748 cv
264.094 296.661 264.249 296.571 264.385 296.485 cv
264.346 296.288 264.304 296.104 264.259 295.926 cv
264.095 295.907 263.911 295.892 263.733 295.878 cv
263.551 295.864 263.37 295.85 263.206 295.831 cv
263.144 295.823 li
263.126 295.764 li
263.048 295.506 262.954 295.239 262.847 294.97 cv
262.824 294.912 li
262.867 294.868 li
262.986 294.748 263.122 294.621 263.257 294.494 cv
263.385 294.375 263.517 294.252 263.631 294.137 cv
263.551 293.961 263.468 293.788 263.381 293.62 cv
263.217 293.638 263.036 293.665 262.86 293.691 cv
262.679 293.718 262.499 293.744 262.334 293.762 cv
262.272 293.769 li
262.241 293.715 li
262.099 293.467 261.949 293.227 261.794 293.003 cv
261.759 292.952 li
261.792 292.899 li
261.88 292.755 261.984 292.602 262.088 292.448 cv
262.187 292.302 262.288 292.153 262.374 292.015 cv
262.268 291.876 262.152 291.732 262.013 291.568 cv
261.86 291.621 261.692 291.686 261.529 291.75 cv
261.357 291.817 261.184 291.884 261.026 291.939 cv
260.967 291.959 li
260.925 291.913 li
260.736 291.708 260.536 291.508 260.329 291.318 cv
260.283 291.276 li
260.304 291.217 li
260.359 291.058 260.425 290.886 260.492 290.715 cv
260.556 290.551 260.621 290.383 260.675 290.229 cv
260.511 290.091 260.367 289.974 260.227 289.869 cv
260.09 289.955 259.94 290.056 259.794 290.154 cv
259.64 290.258 259.487 290.362 259.344 290.451 cv
259.291 290.483 li
259.239 290.448 li
259.016 290.294 258.777 290.144 258.527 290.001 cv
258.473 289.97 li
258.48 289.908 li
258.498 289.742 258.525 289.561 258.552 289.379 cv
258.578 289.204 258.605 289.024 258.623 288.861 cv
258.453 288.774 258.279 288.69 258.105 288.611 cv
257.991 288.725 257.868 288.856 257.75 288.983 cv
257.622 289.119 257.495 289.256 257.374 289.375 cv
257.33 289.419 li
257.272 289.395 li
257.003 289.288 256.736 289.194 256.479 289.116 cv
256.419 289.098 li
256.412 289.036 li
256.393 288.872 256.378 288.69 256.364 288.509 cv
256.35 288.331 256.335 288.147 256.316 287.983 cv
256.14 287.938 255.956 287.897 255.757 287.857 cv
255.671 287.993 255.582 288.148 255.494 288.298 cv
255.401 288.459 255.307 288.62 255.217 288.763 cv
255.183 288.816 li
255.122 288.806 li
254.864 288.766 254.591 288.736 254.286 288.715 cv
254.223 288.711 li
254.202 288.652 li
254.147 288.496 254.093 288.323 254.039 288.15 cv
253.985 287.979 253.93 287.803 253.875 287.648 cv
253.868 287.647 li
253.679 287.641 253.489 287.641 253.3 287.647 cv
253.293 287.648 li
253.237 287.804 253.182 287.98 253.128 288.151 cv
253.074 288.324 253.02 288.497 252.965 288.652 cv
252.945 288.711 li
252.882 288.715 li
252.579 288.736 252.306 288.766 252.046 288.806 cv
251.984 288.816 li
251.951 288.763 li
251.86 288.62 251.766 288.458 251.672 288.296 cv
251.586 288.147 251.496 287.993 251.411 287.857 cv
251.213 287.897 251.028 287.938 250.852 287.983 cv
250.833 288.146 250.818 288.329 250.804 288.507 cv
250.79 288.689 250.776 288.871 250.756 289.036 cv
250.749 289.098 li
250.689 289.116 li
250.433 289.194 250.166 289.288 249.896 289.395 cv
249.838 289.418 li
249.794 289.374 li
249.673 289.255 249.546 289.119 249.418 288.983 cv
249.299 288.856 249.177 288.725 249.063 288.611 cv
248.888 288.69 248.714 288.774 248.545 288.861 cv
248.563 289.023 248.59 289.204 248.616 289.378 cv
248.643 289.56 248.67 289.742 248.688 289.908 cv
248.695 289.97 li
248.641 290.001 li
248.39 290.144 248.151 290.295 247.929 290.448 cv
247.877 290.483 li
247.824 290.451 li
247.682 290.362 247.529 290.259 247.376 290.155 cv
247.23 290.056 247.079 289.955 246.94 289.868 cv
246.802 289.973 246.658 290.09 246.493 290.229 cv
246.547 290.383 246.612 290.552 246.676 290.716 cv
246.743 290.887 246.809 291.059 246.864 291.216 cv
246.884 291.275 li
246.838 291.317 li
246.632 291.507 246.432 291.707 246.243 291.913 cv
246.201 291.959 li
246.142 291.939 li
245.985 291.884 245.814 291.818 245.643 291.751 cv
245.478 291.687 245.309 291.621 245.155 291.568 cv
245.016 291.731 244.9 291.876 244.794 292.015 cv
244.88 292.153 244.982 292.303 245.081 292.45 cv
245.184 292.603 245.288 292.756 245.376 292.898 cv
245.409 292.951 li
245.374 293.003 li
245.22 293.226 245.069 293.465 244.927 293.715 cv
244.896 293.769 li
244.834 293.762 li
244.669 293.744 244.488 293.717 244.307 293.69 cv
244.131 293.664 243.95 293.638 243.787 293.62 cv
243.699 293.789 243.615 293.963 243.537 294.137 cv
243.651 294.252 243.783 294.375 243.91 294.494 cv
244.046 294.621 244.181 294.748 244.3 294.868 cv
244.344 294.912 li
244.321 294.97 li
244.214 295.238 244.12 295.505 244.042 295.764 cv
244.024 295.823 li
243.962 295.831 li
243.797 295.85 243.616 295.864 243.435 295.878 cv
243.256 295.892 243.073 295.907 242.909 295.926 cv
242.864 296.103 242.822 296.287 242.783 296.485 cv
242.919 296.571 243.073 296.661 243.223 296.748 cv
243.384 296.841 243.546 296.935 243.688 297.025 cv
243.741 297.059 li
243.732 297.12 li
243.691 297.38 243.662 297.654 243.641 297.957 cv
243.636 298.019 li
243.578 298.04 li
243.422 298.095 243.249 298.149 243.075 298.203 cv
242.905 298.257 242.729 298.312 242.573 298.367 cv
242.573 298.385 li
242.569 298.476 242.566 298.567 242.566 298.658 cv
242.566 298.75 242.569 298.841 242.573 298.931 cv
242.573 298.95 li
242.729 299.005 242.906 299.06 243.077 299.114 cv
243.25 299.168 243.422 299.222 243.577 299.277 cv
243.636 299.297 li
243.641 299.36 li
243.662 299.663 243.691 299.936 243.732 300.196 cv
243.741 300.258 li
243.688 300.291 li
243.546 300.381 243.385 300.475 243.224 300.568 cv
243.074 300.655 242.919 300.745 242.783 300.831 cv
242.822 301.029 242.864 301.214 242.909 301.391 cv
243.072 301.41 243.254 301.424 243.431 301.438 cv
243.614 301.452 243.796 301.467 243.962 301.486 cv
244.024 301.493 li
244.042 301.553 li
244.12 301.81 244.214 302.077 244.321 302.347 cv
244.344 302.404 li
244.3 302.449 li
244.181 302.569 244.045 302.696 243.909 302.823 cv
243.782 302.942 243.651 303.065 243.537 303.179 cv
243.616 303.355 243.7 303.529 243.786 303.697 cv
243.95 303.679 244.132 303.652 244.308 303.626 cv
244.489 303.599 244.669 303.572 244.833 303.554 cv
244.896 303.547 li
244.926 303.602 li
245.069 303.851 245.22 304.091 245.374 304.314 cv
245.409 304.365 li
245.376 304.418 li
245.287 304.561 245.184 304.714 245.08 304.867 cv
244.982 305.013 244.88 305.164 244.794 305.302 cv
244.9 305.441 245.016 305.585 245.154 305.749 cv
245.308 305.695 245.477 305.63 245.641 305.566 cv
245.812 305.499 245.984 305.432 246.142 305.378 cv
246.201 305.358 li
246.243 305.404 li
246.433 305.61 246.633 305.81 246.838 305.999 cv
246.884 306.041 li
246.864 306.1 li
246.809 306.258 246.743 306.429 246.676 306.6 cv
246.612 306.764 246.546 306.933 246.493 307.087 cv
246.658 307.227 246.802 307.343 246.94 307.448 cv
247.078 307.362 247.228 307.261 247.374 307.162 cv
247.527 307.059 247.681 306.955 247.824 306.866 cv
247.877 306.833 li
247.928 306.868 li
248.155 307.025 248.394 307.175 248.64 307.315 cv
248.694 307.346 li
248.688 307.408 li
248.669 307.575 248.642 307.757 248.616 307.939 cv
248.59 308.113 248.563 308.293 248.545 308.455 cv
248.711 308.541 248.885 308.625 249.063 308.705 cv
249.177 308.591 249.3 308.46 249.419 308.333 cv
249.546 308.197 249.673 308.061 249.793 307.942 cv
249.838 307.898 li
249.896 307.921 li
250.165 308.029 250.432 308.123 250.689 308.2 cv
250.749 308.218 li
250.756 308.28 li
250.775 308.445 250.789 308.628 250.804 308.81 cv
250.818 308.987 250.832 309.17 250.851 309.333 cv
251.027 309.378 251.211 309.42 251.411 309.459 cv
251.496 309.323 251.586 309.169 251.673 309.019 cv
251.767 308.858 251.86 308.697 251.951 308.553 cv
251.984 308.501 li
252.046 308.51 li
252.306 308.551 252.579 308.581 252.882 308.602 cv
252.944 308.606 li
252.965 308.665 li
253.02 308.82 253.074 308.993 253.129 309.166 cv
253.182 309.337 253.237 309.513 253.293 309.669 cv
253.3 309.669 li
253.489 309.676 253.679 309.676 253.868 309.669 cv
253.875 309.669 li
253.93 309.513 253.986 309.337 254.039 309.166 cv
254.093 308.993 254.147 308.82 254.202 308.665 cv
254.223 308.606 li
254.285 308.602 li
254.588 308.581 254.862 308.551 255.122 308.51 cv
255.183 308.501 li
255.217 308.553 li
255.307 308.697 255.401 308.858 255.495 309.02 cv
255.582 309.169 255.671 309.324 255.757 309.459 cv
255.956 309.42 256.14 309.378 256.316 309.333 cv
256.335 309.17 256.349 308.987 256.363 308.81 cv
256.378 308.628 256.392 308.446 256.411 308.281 cv
256.419 308.219 li
256.478 308.201 li
256.735 308.123 257.002 308.029 257.272 307.921 cv
257.33 307.898 li
257.374 307.942 li
257.494 308.061 257.622 308.197 257.749 308.333 cv
257.868 308.46 257.99 308.591 258.105 308.705 cv
258.28 308.626 258.453 308.543 258.622 308.456 cv
258.604 308.293 258.578 308.114 258.552 307.94 cv
258.525 307.757 258.498 307.575 258.48 307.409 cv
258.473 307.347 li
258.527 307.316 li
258.777 307.172 259.017 307.022 259.239 306.869 cv
259.29 306.833 li
259.343 306.866 li
259.487 306.955 259.641 307.059 259.795 307.163 cv
259.94 307.261 260.09 307.362 260.227 307.448 cv
260.366 307.343 260.51 307.227 260.674 307.088 cv
260.621 306.934 260.555 306.765 260.491 306.601 cv
260.425 306.429 260.358 306.258 260.304 306.101 cv
260.283 306.042 li
260.329 305.999 li
260.533 305.812 260.733 305.612 260.924 305.404 cv
260.967 305.358 li
261.025 305.378 li
261.183 305.433 261.355 305.5 261.526 305.566 cv
261.69 305.63 261.859 305.696 262.013 305.749 cv
262.152 305.585 262.268 305.441 262.374 305.302 cv
262.288 305.164 262.187 305.015 262.089 304.87 cv
261.985 304.716 261.881 304.561 261.792 304.418 cv
261.759 304.365 li
261.794 304.314 li
261.949 304.089 262.099 303.85 262.241 303.602 cv
262.272 303.548 li
262.334 303.555 li
262.499 303.573 262.68 303.599 262.861 303.626 cv
263.037 303.652 263.218 303.679 263.381 303.697 cv
263.468 303.529 263.551 303.355 263.631 303.18 cv
263.517 303.065 263.385 302.942 263.258 302.823 cv
263.122 302.696 262.986 302.569 262.868 302.449 cv
262.824 302.404 li
262.847 302.347 li
262.954 302.077 263.048 301.81 263.126 301.553 cv
263.144 301.493 li
263.206 301.486 li
263.371 301.467 263.554 301.452 263.736 301.438 cv
263.913 301.424 264.096 301.41 264.259 301.391 cv
264.304 301.212 264.346 301.028 264.385 300.831 cv
264.249 300.746 264.094 300.656 263.945 300.569 cv
263.783 300.475 263.622 300.382 263.479 300.291 cv
263.426 300.258 li
263.436 300.196 li
263.476 299.937 263.506 299.663 263.527 299.36 cv
263.531 299.298 li
263.59 299.277 li
263.746 299.222 263.919 299.167 264.092 299.113 cv
264.263 299.06 264.439 299.005 264.595 298.949 cv
264.595 298.936 li
264.598 298.844 264.601 298.751 264.601 298.658 cv
264.601 298.565 264.598 298.474 264.595 298.382 cv
264.595 298.367 li
cp
f
206.816 225.286 mo
203.839 226.206 200.829 226.756 197.869 226.92 cv
197.675 226.931 li
197.631 226.741 li
197.459 225.985 197.163 225.262 196.752 224.594 cv
196.648 224.425 li
196.799 224.297 li
199.099 222.351 201.613 220.612 204.272 219.131 cv
204.459 219.026 li
204.577 219.206 li
205.749 220.988 206.555 222.944 206.975 225.02 cv
207.016 225.224 li
206.816 225.286 li
cp
206.959 231.722 mo
206.53 233.797 205.714 235.75 204.536 237.525 cv
204.421 237.699 li
204.236 237.602 li
201.481 236.148 198.964 234.408 196.754 232.431 cv
196.609 232.301 li
196.713 232.136 li
197.131 231.472 197.435 230.748 197.616 229.985 cv
197.662 229.792 li
197.859 229.809 li
200.821 230.056 203.828 230.609 206.796 231.454 cv
207.003 231.512 li
206.959 231.722 li
cp
199.786 242.252 mo
198.003 243.423 196.047 244.23 193.972 244.648 cv
193.768 244.69 li
193.706 244.49 li
192.786 241.514 192.236 238.503 192.072 235.543 cv
192.061 235.348 li
192.251 235.305 li
193.005 235.134 193.728 234.838 194.398 234.426 cv
194.567 234.322 li
194.695 234.474 li
196.644 236.777 198.382 239.292 199.861 241.947 cv
199.966 242.134 li
199.786 242.252 li
cp
190.659 233.489 mo
189.282 233.489 187.987 232.953 187.014 231.979 cv
186.04 231.005 185.504 229.71 185.504 228.333 cv
185.504 226.956 186.04 225.661 187.013 224.688 cv
187.987 223.715 189.282 223.179 190.659 223.179 cv
192.036 223.179 193.331 223.715 194.305 224.688 cv
196.314 226.698 196.314 229.969 194.304 231.979 cv
193.331 232.953 192.036 233.489 190.659 233.489 cv
cp
189.183 235.533 mo
188.937 238.496 188.383 241.503 187.539 244.47 cv
187.48 244.677 li
187.27 244.633 li
185.194 244.203 183.241 243.388 181.467 242.21 cv
181.293 242.094 li
181.39 241.91 li
182.846 239.154 184.585 236.637 186.561 234.429 cv
186.691 234.284 li
186.856 234.387 li
187.52 234.805 188.243 235.108 189.007 235.289 cv
189.2 235.335 li
189.183 235.533 li
cp
177.046 237.536 mo
176.858 237.64 li
176.74 237.461 li
175.569 235.678 174.763 233.722 174.344 231.646 cv
174.302 231.442 li
174.502 231.38 li
177.479 230.46 180.489 229.91 183.449 229.746 cv
183.643 229.735 li
183.687 229.925 li
183.858 230.68 184.154 231.402 184.566 232.073 cv
184.67 232.241 li
184.518 232.37 li
182.216 234.318 179.701 236.057 177.046 237.536 cv
cp
174.359 224.945 mo
174.788 222.871 175.603 220.918 176.782 219.141 cv
176.898 218.967 li
177.082 219.064 li
179.838 220.52 182.355 222.26 184.563 224.236 cv
184.709 224.366 li
184.605 224.531 li
184.187 225.195 183.883 225.918 183.702 226.682 cv
183.656 226.875 li
183.459 226.858 li
180.494 226.61 177.488 226.057 174.522 225.213 cv
174.316 225.154 li
174.359 224.945 li
cp
181.531 214.415 mo
183.315 213.244 185.271 212.437 187.345 212.018 cv
187.55 211.977 li
187.612 212.177 li
188.531 215.153 189.081 218.164 189.246 221.124 cv
189.257 221.318 li
189.067 221.362 li
188.312 221.533 187.589 221.829 186.92 222.241 cv
186.751 222.345 li
186.623 222.194 li
184.674 219.891 182.936 217.377 181.456 214.721 cv
181.352 214.533 li
181.531 214.415 li
cp
192.134 221.134 mo
192.381 218.172 192.934 215.165 193.779 212.196 cv
193.838 211.99 li
194.047 212.033 li
196.122 212.463 198.075 213.278 199.851 214.456 cv
200.025 214.571 li
199.927 214.756 li
198.474 217.511 196.734 220.028 194.756 222.238 cv
194.626 222.383 li
194.461 222.28 li
193.795 221.86 193.072 221.557 192.311 221.378 cv
192.118 221.332 li
192.134 221.134 li
cp
217.363 227.627 mo
216.984 227.493 216.558 227.36 216.144 227.23 cv
215.723 227.098 215.303 226.967 214.926 226.834 cv
214.784 226.783 li
214.773 226.632 li
214.722 225.896 214.65 225.233 214.553 224.604 cv
214.53 224.454 li
214.657 224.373 li
215.003 224.154 215.393 223.928 215.783 223.701 cv
216.148 223.49 216.523 223.271 216.854 223.064 cv
216.759 222.586 216.658 222.139 216.548 221.707 cv
216.15 221.66 215.705 221.625 215.273 221.591 cv
214.833 221.557 214.393 221.522 213.995 221.475 cv
213.844 221.458 li
213.801 221.313 li
213.612 220.688 213.384 220.04 213.123 219.389 cv
213.067 219.248 li
213.174 219.141 li
213.462 218.85 213.791 218.542 214.119 218.235 cv
214.429 217.945 214.748 217.647 215.025 217.369 cv
214.833 216.942 214.63 216.521 214.42 216.114 cv
214.022 216.158 213.582 216.223 213.155 216.287 cv
212.717 216.351 212.28 216.416 211.881 216.46 cv
211.73 216.476 li
211.655 216.345 li
211.311 215.743 210.946 215.161 210.571 214.618 cv
210.485 214.494 li
210.565 214.365 li
210.78 214.018 211.032 213.645 211.284 213.271 cv
211.523 212.919 211.768 212.556 211.976 212.221 cv
211.72 211.884 211.438 211.534 211.102 211.137 cv
210.731 211.266 210.323 211.425 209.927 211.579 cv
209.51 211.741 209.092 211.903 208.707 212.036 cv
208.564 212.086 li
208.462 211.974 li
208.005 211.478 207.52 210.992 207.018 210.531 cv
206.907 210.429 li
206.956 210.286 li
207.089 209.902 207.251 209.485 207.413 209.068 cv
207.567 208.672 207.726 208.263 207.856 207.891 cv
207.459 207.555 207.109 207.273 206.771 207.016 cv
206.437 207.225 206.074 207.47 205.72 207.709 cv
205.348 207.96 204.975 208.212 204.628 208.428 cv
204.499 208.508 li
204.375 208.422 li
203.834 208.048 203.253 207.684 202.648 207.338 cv
202.517 207.263 li
202.533 207.112 li
202.577 206.71 202.643 206.269 202.708 205.828 cv
202.771 205.404 202.835 204.968 202.879 204.573 cv
202.468 204.361 202.047 204.158 201.624 203.967 cv
201.347 204.243 201.05 204.56 200.762 204.869 cv
200.453 205.199 200.144 205.53 199.852 205.819 cv
199.744 205.925 li
199.604 205.869 li
198.951 205.608 198.303 205.38 197.68 205.192 cv
197.535 205.148 li
197.517 204.997 li
197.471 204.599 197.436 204.159 197.401 203.718 cv
197.367 203.286 197.332 202.842 197.286 202.444 cv
196.858 202.335 196.411 202.234 195.929 202.138 cv
195.721 202.468 195.504 202.843 195.293 203.207 cv
195.066 203.597 194.839 203.988 194.619 204.335 cv
194.538 204.463 li
194.389 204.44 li
193.765 204.343 193.101 204.271 192.361 204.219 cv
192.21 204.208 li
192.159 204.066 li
192.026 203.689 191.894 203.269 191.763 202.848 cv
191.633 202.435 191.5 202.008 191.365 201.63 cv
191.348 201.629 li
190.89 201.613 190.428 201.613 189.971 201.629 cv
189.953 201.63 li
189.818 202.009 189.684 202.437 189.554 202.852 cv
189.423 203.271 189.292 203.69 189.159 204.066 cv
189.109 204.208 li
188.958 204.219 li
188.223 204.27 187.559 204.342 186.93 204.44 cv
186.78 204.463 li
186.699 204.335 li
186.479 203.987 186.251 203.595 186.023 203.203 cv
185.813 202.84 185.596 202.467 185.39 202.138 cv
184.908 202.234 184.462 202.334 184.033 202.444 cv
183.987 202.84 183.952 203.283 183.918 203.713 cv
183.883 204.155 183.848 204.597 183.802 204.997 cv
183.784 205.147 li
183.639 205.191 li
183.017 205.38 182.369 205.608 181.715 205.868 cv
181.574 205.924 li
181.467 205.818 li
181.175 205.529 180.865 205.198 180.556 204.868 cv
180.268 204.56 179.971 204.243 179.695 203.967 cv
179.27 204.158 178.849 204.361 178.44 204.573 cv
178.483 204.967 178.548 205.404 178.611 205.828 cv
178.676 206.268 178.741 206.709 178.785 207.111 cv
178.802 207.262 li
178.67 207.337 li
178.064 207.685 177.483 208.049 176.944 208.422 cv
176.82 208.508 li
176.691 208.428 li
176.345 208.213 175.974 207.962 175.603 207.711 cv
175.249 207.472 174.883 207.225 174.547 207.015 cv
174.212 207.27 173.862 207.553 173.463 207.89 cv
173.593 208.264 173.752 208.673 173.907 209.071 cv
174.068 209.487 174.229 209.902 174.362 210.285 cv
174.411 210.427 li
174.3 210.53 li
173.8 210.99 173.315 211.476 172.856 211.974 cv
172.754 212.086 li
172.611 212.036 li
172.229 211.904 171.815 211.743 171.401 211.582 cv
171.002 211.427 170.591 211.267 170.216 211.137 cv
169.881 211.534 169.598 211.884 169.342 212.221 cv
169.551 212.557 169.798 212.922 170.038 213.276 cv
170.288 213.647 170.539 214.019 170.754 214.365 cv
170.834 214.493 li
170.748 214.617 li
170.374 215.158 170.009 215.739 169.663 216.344 cv
169.588 216.475 li
169.438 216.459 li
169.037 216.415 168.599 216.35 168.16 216.285 cv
167.734 216.222 167.295 216.157 166.899 216.113 cv
166.687 216.525 166.483 216.946 166.293 217.369 cv
166.57 217.647 166.889 217.945 167.198 218.234 cv
167.527 218.542 167.856 218.85 168.144 219.141 cv
168.251 219.248 li
168.194 219.389 li
167.935 220.04 167.706 220.687 167.517 221.313 cv
167.473 221.458 li
167.323 221.475 li
166.925 221.522 166.485 221.557 166.045 221.591 cv
165.613 221.625 165.168 221.66 164.77 221.707 cv
164.66 222.137 164.56 222.583 164.464 223.064 cv
164.794 223.271 165.169 223.488 165.533 223.7 cv
165.923 223.927 166.314 224.154 166.66 224.373 cv
166.788 224.454 li
166.765 224.604 li
166.668 225.233 166.595 225.896 166.545 226.632 cv
166.534 226.783 li
166.392 226.833 li
166.014 226.967 165.594 227.098 165.173 227.23 cv
164.76 227.36 164.333 227.493 163.955 227.627 cv
163.954 227.671 li
163.947 227.891 163.939 228.111 163.939 228.333 cv
163.939 228.555 163.947 228.775 163.954 228.996 cv
163.955 229.04 li
164.335 229.174 164.763 229.308 165.178 229.438 cv
165.597 229.569 166.015 229.7 166.391 229.833 cv
166.534 229.883 li
166.545 230.034 li
166.595 230.77 166.668 231.433 166.765 232.062 cv
166.788 232.212 li
166.66 232.293 li
166.314 232.512 165.924 232.739 165.534 232.966 cv
165.17 233.177 164.795 233.395 164.464 233.603 cv
164.56 234.084 164.66 234.53 164.77 234.96 cv
165.165 235.006 165.607 235.041 166.036 235.075 cv
166.479 235.11 166.922 235.145 167.323 235.191 cv
167.473 235.209 li
167.517 235.354 li
167.706 235.978 167.934 236.625 168.194 237.278 cv
168.25 237.419 li
168.144 237.526 li
167.855 237.818 167.525 238.126 167.195 238.435 cv
166.887 238.723 166.569 239.02 166.293 239.297 cv
166.485 239.724 166.688 240.145 166.898 240.552 cv
167.295 240.509 167.736 240.443 168.163 240.38 cv
168.601 240.316 169.038 240.251 169.437 240.207 cv
169.588 240.191 li
169.663 240.322 li
170.009 240.927 170.374 241.508 170.747 242.049 cv
170.833 242.173 li
170.753 242.301 li
170.538 242.648 170.287 243.02 170.035 243.392 cv
169.797 243.746 169.55 244.11 169.342 244.445 cv
169.598 244.783 169.88 245.133 170.216 245.53 cv
170.589 245.4 170.998 245.241 171.395 245.086 cv
171.811 244.924 172.227 244.762 172.61 244.63 cv
172.753 244.581 li
172.855 244.692 li
173.316 245.193 173.802 245.679 174.299 246.136 cv
174.41 246.238 li
174.361 246.381 li
174.229 246.763 174.068 247.178 173.906 247.594 cv
173.751 247.992 173.592 248.402 173.462 248.776 cv
173.862 249.114 174.212 249.397 174.546 249.651 cv
174.881 249.442 175.245 249.196 175.598 248.957 cv
175.971 248.706 176.343 248.454 176.69 248.239 cv
176.818 248.159 li
176.942 248.245 li
177.492 248.623 178.073 248.988 178.67 249.329 cv
178.801 249.404 li
178.785 249.554 li
178.741 249.957 178.675 250.399 178.61 250.84 cv
178.547 251.264 178.482 251.7 178.439 252.093 cv
178.842 252.302 179.263 252.505 179.694 252.699 cv
179.972 252.423 180.269 252.105 180.558 251.796 cv
180.866 251.466 181.175 251.137 181.466 250.848 cv
181.574 250.742 li
181.714 250.798 li
182.368 251.059 183.015 251.287 183.638 251.475 cv
183.783 251.519 li
183.801 251.669 li
183.847 252.069 183.882 252.511 183.917 252.953 cv
183.951 253.383 183.986 253.826 184.032 254.223 cv
184.458 254.331 184.905 254.432 185.389 254.528 cv
185.596 254.198 185.814 253.824 186.025 253.46 cv
186.252 253.069 186.479 252.678 186.699 252.331 cv
186.78 252.204 li
186.929 252.227 li
187.559 252.325 188.222 252.397 188.957 252.448 cv
189.108 252.458 li
189.159 252.601 li
189.292 252.978 189.423 253.397 189.555 253.817 cv
189.685 254.231 189.818 254.658 189.953 255.037 cv
189.971 255.038 li
190.428 255.053 190.89 255.053 191.348 255.038 cv
191.365 255.037 li
191.5 254.658 191.633 254.231 191.763 253.817 cv
191.894 253.397 192.026 252.978 192.159 252.601 cv
192.209 252.458 li
192.36 252.448 li
193.095 252.397 193.759 252.325 194.388 252.227 cv
194.538 252.204 li
194.619 252.331 li
194.839 252.679 195.066 253.071 195.293 253.462 cv
195.504 253.825 195.721 254.199 195.928 254.528 cv
196.412 254.432 196.859 254.331 197.285 254.223 cv
197.331 253.827 197.366 253.384 197.4 252.954 cv
197.435 252.512 197.47 252.07 197.516 251.67 cv
197.534 251.52 li
197.679 251.476 li
198.302 251.287 198.95 251.059 199.604 250.798 cv
199.744 250.742 li
199.851 250.849 li
200.143 251.137 200.452 251.467 200.761 251.797 cv
201.049 252.106 201.346 252.424 201.623 252.699 cv
202.047 252.509 202.468 252.305 202.879 252.094 cv
202.835 251.701 202.77 251.265 202.708 250.843 cv
202.642 250.4 202.577 249.959 202.533 249.555 cv
202.516 249.405 li
202.648 249.33 li
203.254 248.982 203.835 248.617 204.374 248.245 cv
204.499 248.16 li
204.627 248.239 li
204.975 248.455 205.348 248.707 205.722 248.96 cv
206.074 249.198 206.437 249.443 206.771 249.651 cv
207.106 249.396 207.456 249.114 207.855 248.777 cv
207.725 248.404 207.566 247.993 207.411 247.595 cv
207.249 247.18 207.088 246.765 206.956 246.383 cv
206.906 246.24 li
207.018 246.137 li
207.512 245.683 207.998 245.197 208.461 244.693 cv
208.564 244.582 li
208.707 244.631 li
209.09 244.764 209.505 244.925 209.921 245.087 cv
210.319 245.242 210.728 245.401 211.101 245.531 cv
211.438 245.133 211.72 244.782 211.976 244.446 cv
211.768 244.112 211.523 243.749 211.285 243.397 cv
211.033 243.024 210.78 242.65 210.565 242.302 cv
210.485 242.173 li
210.571 242.049 li
210.946 241.505 211.311 240.924 211.655 240.323 cv
211.73 240.191 li
211.88 240.208 li
212.281 240.252 212.719 240.317 213.158 240.382 cv
213.585 240.445 214.023 240.51 214.419 240.553 cv
214.63 240.146 214.833 239.725 215.025 239.298 cv
214.748 239.02 214.43 238.722 214.12 238.433 cv
213.791 238.125 213.462 237.817 213.174 237.526 cv
213.068 237.419 li
213.124 237.278 li
213.384 236.625 213.612 235.977 213.801 235.354 cv
213.844 235.209 li
213.995 235.191 li
214.396 235.145 214.839 235.11 215.281 235.075 cv
215.711 235.041 216.153 235.006 216.548 234.96 cv
216.658 234.528 216.759 234.081 216.854 233.603 cv
216.524 233.396 216.15 233.178 215.786 232.967 cv
215.395 232.74 215.004 232.513 214.657 232.293 cv
214.53 232.212 li
214.553 232.062 li
214.65 231.435 214.722 230.771 214.773 230.035 cv
214.784 229.884 li
214.926 229.834 li
215.304 229.7 215.724 229.568 216.144 229.437 cv
216.558 229.307 216.984 229.174 217.363 229.04 cv
217.363 229.006 li
217.371 228.783 217.379 228.558 217.379 228.333 cv
217.379 228.108 217.371 227.885 217.363 227.662 cv
217.363 227.627 li
cp
f
293.472 216.3 mo
292.12 216.718 290.752 216.968 289.407 217.042 cv
289.319 217.047 li
289.299 216.961 li
289.221 216.617 289.087 216.289 288.9 215.986 cv
288.853 215.909 li
288.921 215.851 li
289.966 214.966 291.108 214.177 292.316 213.504 cv
292.401 213.456 li
292.455 213.538 li
292.987 214.347 293.353 215.236 293.544 216.179 cv
293.563 216.272 li
293.472 216.3 li
cp
293.537 219.224 mo
293.342 220.167 292.972 221.054 292.436 221.86 cv
292.384 221.939 li
292.3 221.895 li
291.048 221.234 289.905 220.444 288.901 219.546 cv
288.835 219.487 li
288.882 219.412 li
289.072 219.11 289.21 218.782 289.292 218.435 cv
289.313 218.347 li
289.403 218.355 li
290.749 218.467 292.115 218.718 293.463 219.102 cv
293.557 219.129 li
293.537 219.224 li
cp
290.278 224.008 mo
289.468 224.54 288.58 224.906 287.637 225.096 cv
287.544 225.115 li
287.516 225.024 li
287.098 223.672 286.849 222.305 286.774 220.96 cv
286.769 220.871 li
286.855 220.852 li
287.198 220.774 287.526 220.639 287.831 220.452 cv
287.907 220.405 li
287.966 220.474 li
288.851 221.52 289.641 222.663 290.313 223.869 cv
290.36 223.954 li
290.278 224.008 li
cp
286.132 220.027 mo
285.506 220.027 284.918 219.783 284.476 219.341 cv
284.034 218.898 283.79 218.31 283.79 217.684 cv
283.79 217.059 284.033 216.471 284.476 216.029 cv
284.918 215.586 285.506 215.343 286.132 215.343 cv
286.758 215.343 287.346 215.586 287.788 216.029 cv
288.701 216.942 288.701 218.428 287.788 219.341 cv
287.346 219.783 286.758 220.027 286.132 220.027 cv
cp
285.461 220.955 mo
285.35 222.301 285.098 223.667 284.715 225.015 cv
284.688 225.109 li
284.592 225.089 li
283.649 224.894 282.762 224.524 281.956 223.988 cv
281.877 223.936 li
281.921 223.852 li
282.582 222.6 283.373 221.457 284.27 220.454 cv
284.329 220.388 li
284.404 220.435 li
284.706 220.624 285.035 220.762 285.381 220.844 cv
285.469 220.865 li
285.461 220.955 li
cp
279.947 221.865 mo
279.862 221.913 li
279.809 221.831 li
279.277 221.021 278.91 220.132 278.72 219.189 cv
278.701 219.097 li
278.792 219.069 li
280.144 218.651 281.512 218.401 282.856 218.326 cv
282.945 218.321 li
282.965 218.408 li
283.042 218.75 283.177 219.079 283.364 219.383 cv
283.411 219.46 li
283.342 219.518 li
282.296 220.403 281.154 221.193 279.947 221.865 cv
cp
278.727 216.145 mo
278.922 215.203 279.292 214.316 279.828 213.508 cv
279.88 213.429 li
279.964 213.474 li
281.216 214.135 282.36 214.925 283.363 215.823 cv
283.429 215.882 li
283.382 215.957 li
283.192 216.258 283.054 216.587 282.972 216.934 cv
282.951 217.022 li
282.861 217.014 li
281.514 216.902 280.148 216.65 278.801 216.267 cv
278.707 216.24 li
278.727 216.145 li
cp
281.985 211.361 mo
282.796 210.829 283.684 210.463 284.627 210.273 cv
284.72 210.254 li
284.748 210.344 li
285.165 211.697 285.415 213.064 285.49 214.409 cv
285.495 214.498 li
285.409 214.517 li
285.066 214.595 284.737 214.729 284.433 214.917 cv
284.356 214.964 li
284.298 214.895 li
283.413 213.849 282.623 212.707 281.951 211.5 cv
281.904 211.415 li
281.985 211.361 li
cp
286.802 214.414 mo
286.914 213.068 287.166 211.702 287.549 210.353 cv
287.576 210.26 li
287.671 210.279 li
288.614 210.474 289.501 210.845 290.308 211.38 cv
290.387 211.432 li
290.342 211.516 li
289.682 212.768 288.892 213.911 287.993 214.915 cv
287.934 214.981 li
287.859 214.934 li
287.557 214.744 287.228 214.606 286.883 214.524 cv
286.795 214.504 li
286.802 214.414 li
cp
298.263 217.364 mo
298.091 217.303 297.898 217.242 297.71 217.183 cv
297.519 217.123 297.328 217.064 297.156 217.003 cv
297.092 216.98 li
297.087 216.911 li
297.064 216.577 297.031 216.276 296.987 215.99 cv
296.976 215.922 li
297.034 215.885 li
297.191 215.786 297.369 215.683 297.546 215.58 cv
297.711 215.484 297.882 215.385 298.032 215.29 cv
297.989 215.073 297.943 214.87 297.893 214.674 cv
297.713 214.653 297.51 214.637 297.314 214.621 cv
297.114 214.606 296.914 214.59 296.733 214.569 cv
296.665 214.561 li
296.645 214.495 li
296.559 214.211 296.456 213.917 296.337 213.621 cv
296.312 213.557 li
296.36 213.508 li
296.491 213.376 296.641 213.236 296.79 213.097 cv
296.931 212.965 297.076 212.83 297.201 212.703 cv
297.114 212.509 297.022 212.318 296.926 212.133 cv
296.746 212.153 296.546 212.183 296.352 212.212 cv
296.153 212.241 295.954 212.27 295.773 212.29 cv
295.704 212.298 li
295.67 212.238 li
295.514 211.964 295.348 211.7 295.178 211.454 cv
295.139 211.397 li
295.175 211.339 li
295.273 211.181 295.387 211.011 295.502 210.842 cv
295.61 210.682 295.722 210.517 295.816 210.365 cv
295.7 210.212 295.572 210.053 295.419 209.872 cv
295.25 209.931 295.065 210.003 294.885 210.073 cv
294.696 210.147 294.506 210.22 294.331 210.281 cv
294.266 210.303 li
294.22 210.253 li
294.012 210.027 293.792 209.806 293.564 209.597 cv
293.513 209.55 li
293.536 209.485 li
293.596 209.311 293.67 209.122 293.743 208.932 cv
293.813 208.752 293.886 208.566 293.944 208.397 cv
293.764 208.245 293.605 208.117 293.452 208 cv
293.3 208.095 293.135 208.206 292.974 208.315 cv
292.805 208.429 292.635 208.544 292.478 208.641 cv
292.42 208.678 li
292.363 208.639 li
292.117 208.469 291.853 208.303 291.579 208.146 cv
291.519 208.112 li
291.526 208.044 li
291.546 207.861 291.576 207.661 291.606 207.461 cv
291.634 207.268 291.664 207.069 291.684 206.89 cv
291.497 206.794 291.305 206.702 291.113 206.615 cv
290.987 206.74 290.853 206.884 290.722 207.024 cv
290.581 207.175 290.441 207.325 290.308 207.456 cv
290.259 207.504 li
290.196 207.479 li
289.899 207.36 289.605 207.257 289.321 207.171 cv
289.255 207.151 li
289.248 207.083 li
289.227 206.902 289.211 206.702 289.195 206.502 cv
289.18 206.306 289.164 206.104 289.142 205.923 cv
288.948 205.873 288.745 205.828 288.526 205.784 cv
288.432 205.934 288.333 206.104 288.237 206.269 cv
288.134 206.447 288.031 206.625 287.931 206.782 cv
287.894 206.84 li
287.827 206.83 li
287.543 206.786 287.241 206.753 286.905 206.729 cv
286.836 206.725 li
286.814 206.66 li
286.753 206.488 286.693 206.298 286.633 206.107 cv
286.574 205.919 286.514 205.725 286.453 205.553 cv
286.445 205.553 li
286.237 205.546 286.027 205.546 285.819 205.553 cv
285.811 205.553 li
285.75 205.725 285.689 205.92 285.63 206.108 cv
285.571 206.299 285.511 206.489 285.451 206.66 cv
285.428 206.725 li
285.359 206.729 li
285.025 206.752 284.724 206.785 284.438 206.83 cv
284.37 206.84 li
284.333 206.782 li
284.233 206.624 284.129 206.446 284.026 206.268 cv
283.93 206.103 283.832 205.933 283.738 205.784 cv
283.519 205.828 283.317 205.873 283.122 205.923 cv
283.101 206.103 283.085 206.304 283.07 206.499 cv
283.054 206.7 283.038 206.901 283.017 207.083 cv
283.009 207.151 li
282.943 207.171 li
282.66 207.257 282.366 207.36 282.069 207.478 cv
282.005 207.504 li
281.956 207.456 li
281.823 207.324 281.683 207.174 281.542 207.024 cv
281.411 206.884 281.277 206.74 281.151 206.615 cv
280.958 206.702 280.767 206.794 280.581 206.89 cv
280.601 207.069 280.63 207.268 280.658 207.46 cv
280.688 207.66 280.718 207.861 280.738 208.043 cv
280.745 208.112 li
280.686 208.146 li
280.41 208.304 280.146 208.47 279.901 208.639 cv
279.845 208.678 li
279.786 208.641 li
279.629 208.544 279.461 208.43 279.292 208.316 cv
279.131 208.207 278.965 208.095 278.813 208 cv
278.66 208.116 278.501 208.244 278.32 208.397 cv
278.379 208.567 278.451 208.753 278.521 208.934 cv
278.595 209.122 278.668 209.311 278.728 209.485 cv
278.751 209.55 li
278.7 209.596 li
278.473 209.805 278.253 210.026 278.044 210.253 cv
277.998 210.303 li
277.933 210.281 li
277.759 210.221 277.571 210.147 277.383 210.074 cv
277.202 210.004 277.015 209.931 276.845 209.872 cv
276.692 210.052 276.564 210.211 276.448 210.365 cv
276.543 210.517 276.655 210.683 276.764 210.844 cv
276.878 211.013 276.992 211.181 277.089 211.338 cv
277.125 211.397 li
277.086 211.453 li
276.917 211.699 276.751 211.963 276.594 212.238 cv
276.56 212.297 li
276.491 212.29 li
276.309 212.27 276.11 212.24 275.911 212.211 cv
275.717 212.182 275.518 212.153 275.338 212.133 cv
275.241 212.32 275.149 212.511 275.063 212.703 cv
275.188 212.829 275.333 212.965 275.474 213.097 cv
275.623 213.236 275.773 213.376 275.904 213.508 cv
275.952 213.557 li
275.926 213.621 li
275.808 213.917 275.705 214.211 275.619 214.495 cv
275.599 214.561 li
275.53 214.569 li
275.35 214.59 275.15 214.606 274.95 214.621 cv
274.754 214.637 274.551 214.653 274.371 214.674 cv
274.321 214.869 274.275 215.072 274.232 215.29 cv
274.382 215.385 274.552 215.483 274.717 215.579 cv
274.894 215.682 275.072 215.786 275.23 215.885 cv
275.288 215.922 li
275.277 215.99 li
275.233 216.276 275.2 216.577 275.177 216.911 cv
275.172 216.98 li
275.107 217.003 li
274.936 217.064 274.745 217.123 274.554 217.183 cv
274.366 217.242 274.172 217.303 274.001 217.363 cv
274 217.384 li
273.997 217.484 273.993 217.584 273.993 217.684 cv
273.993 217.785 273.997 217.885 274 217.985 cv
274.001 218.005 li
274.173 218.066 274.367 218.127 274.556 218.186 cv
274.747 218.246 274.936 218.305 275.107 218.366 cv
275.172 218.389 li
275.177 218.457 li
275.2 218.791 275.233 219.093 275.277 219.378 cv
275.288 219.446 li
275.23 219.483 li
275.072 219.583 274.895 219.686 274.718 219.789 cv
274.552 219.885 274.382 219.984 274.232 220.079 cv
274.275 220.297 274.321 220.5 274.371 220.695 cv
274.55 220.716 274.751 220.732 274.946 220.747 cv
275.147 220.763 275.348 220.779 275.531 220.8 cv
275.599 220.808 li
275.619 220.874 li
275.705 221.157 275.808 221.451 275.926 221.748 cv
275.952 221.812 li
275.903 221.861 li
275.772 221.993 275.622 222.133 275.473 222.273 cv
275.332 222.404 275.188 222.539 275.063 222.665 cv
275.15 222.859 275.242 223.05 275.338 223.235 cv
275.518 223.216 275.718 223.186 275.912 223.157 cv
276.111 223.128 276.31 223.098 276.491 223.079 cv
276.56 223.071 li
276.594 223.131 li
276.751 223.406 276.916 223.67 277.086 223.915 cv
277.125 223.972 li
277.089 224.03 li
276.991 224.187 276.877 224.356 276.763 224.525 cv
276.654 224.686 276.542 224.852 276.448 225.004 cv
276.564 225.157 276.692 225.316 276.845 225.497 cv
277.014 225.438 277.2 225.365 277.38 225.295 cv
277.569 225.222 277.758 225.148 277.932 225.088 cv
277.997 225.065 li
278.044 225.116 li
278.253 225.344 278.474 225.564 278.7 225.772 cv
278.75 225.818 li
278.728 225.883 li
278.668 226.057 278.595 226.246 278.521 226.434 cv
278.451 226.615 278.378 226.801 278.319 226.971 cv
278.501 227.125 278.66 227.253 278.812 227.369 cv
278.964 227.274 279.129 227.162 279.29 227.054 cv
279.459 226.939 279.628 226.825 279.786 226.727 cv
279.844 226.691 li
279.901 226.73 li
280.15 226.902 280.414 227.068 280.685 227.223 cv
280.745 227.257 li
280.738 227.325 li
280.717 227.508 280.688 227.708 280.658 227.909 cv
280.63 228.101 280.6 228.3 280.58 228.478 cv
280.764 228.573 280.955 228.665 281.151 228.754 cv
281.277 228.628 281.412 228.484 281.543 228.343 cv
281.683 228.194 281.823 228.044 281.956 227.913 cv
282.005 227.864 li
282.068 227.89 li
282.365 228.008 282.659 228.112 282.942 228.198 cv
283.008 228.217 li
283.016 228.286 li
283.037 228.467 283.053 228.668 283.069 228.869 cv
283.085 229.064 283.1 229.266 283.121 229.446 cv
283.315 229.495 283.518 229.541 283.738 229.585 cv
283.832 229.435 283.931 229.264 284.027 229.099 cv
284.13 228.922 284.233 228.744 284.333 228.587 cv
284.37 228.529 li
284.437 228.539 li
284.724 228.583 285.025 228.616 285.359 228.639 cv
285.428 228.644 li
285.45 228.709 li
285.511 228.88 285.571 229.071 285.63 229.261 cv
285.689 229.45 285.75 229.644 285.811 229.816 cv
285.819 229.816 li
286.027 229.823 286.237 229.823 286.445 229.816 cv
286.453 229.816 li
286.514 229.644 286.575 229.45 286.634 229.261 cv
286.693 229.07 286.753 228.88 286.813 228.709 cv
286.836 228.644 li
286.905 228.639 li
287.239 228.616 287.54 228.583 287.826 228.539 cv
287.894 228.529 li
287.931 228.587 li
288.031 228.744 288.134 228.922 288.237 229.1 cv
288.333 229.265 288.432 229.435 288.526 229.585 cv
288.746 229.541 288.949 229.495 289.142 229.446 cv
289.163 229.266 289.179 229.065 289.194 228.869 cv
289.21 228.669 289.226 228.468 289.247 228.286 cv
289.255 228.218 li
289.321 228.198 li
289.604 228.112 289.898 228.008 290.196 227.89 cv
290.259 227.865 li
290.308 227.913 li
290.44 228.044 290.581 228.194 290.721 228.344 cv
290.852 228.484 290.987 228.628 291.113 228.754 cv
291.306 228.667 291.497 228.575 291.683 228.479 cv
291.663 228.3 291.634 228.102 291.606 227.91 cv
291.576 227.709 291.546 227.509 291.526 227.325 cv
291.519 227.257 li
291.578 227.223 li
291.854 227.065 292.118 226.899 292.363 226.73 cv
292.419 226.691 li
292.478 226.728 li
292.635 226.826 292.805 226.94 292.975 227.055 cv
293.135 227.163 293.3 227.274 293.451 227.369 cv
293.604 227.253 293.763 227.125 293.944 226.972 cv
293.885 226.802 293.813 226.616 293.742 226.435 cv
293.669 226.246 293.596 226.058 293.536 225.884 cv
293.513 225.819 li
293.564 225.773 li
293.788 225.566 294.009 225.345 294.219 225.117 cv
294.266 225.066 li
294.331 225.088 li
294.505 225.149 294.694 225.222 294.883 225.296 cv
295.063 225.366 295.249 225.438 295.419 225.497 cv
295.572 225.316 295.7 225.157 295.816 225.004 cv
295.722 224.853 295.61 224.688 295.502 224.528 cv
295.388 224.358 295.273 224.188 295.175 224.03 cv
295.139 223.972 li
295.178 223.915 li
295.348 223.668 295.514 223.404 295.67 223.131 cv
295.704 223.071 li
295.773 223.079 li
295.955 223.099 296.154 223.128 296.353 223.158 cv
296.547 223.186 296.746 223.216 296.926 223.236 cv
297.022 223.051 297.114 222.86 297.201 222.666 cv
297.076 222.539 296.931 222.404 296.79 222.273 cv
296.641 222.133 296.491 221.993 296.36 221.861 cv
296.312 221.812 li
296.338 221.748 li
296.456 221.451 296.559 221.157 296.645 220.874 cv
296.665 220.808 li
296.733 220.8 li
296.915 220.779 297.117 220.763 297.318 220.747 cv
297.513 220.732 297.714 220.716 297.893 220.695 cv
297.943 220.499 297.989 220.296 298.032 220.079 cv
297.882 219.984 297.712 219.885 297.547 219.79 cv
297.37 219.686 297.192 219.583 297.034 219.483 cv
296.976 219.446 li
296.987 219.378 li
297.031 219.093 297.064 218.792 297.087 218.457 cv
297.092 218.389 li
297.156 218.366 li
297.328 218.305 297.519 218.245 297.71 218.186 cv
297.898 218.127 298.091 218.066 298.263 218.005 cv
298.264 217.99 li
298.267 217.888 298.271 217.787 298.271 217.684 cv
298.271 217.582 298.267 217.481 298.264 217.38 cv
298.263 217.364 li
cp
f
270.666 240.696 mo
270.646 241.28 li
270.258 240.984 li
267.072 238.551 260.668 236.975 256.316 236.857 cv
256.161 236.853 li
256.095 236.712 li
255.606 235.666 254.886 234.731 254.013 234.006 cv
253.746 233.784 li
254.04 233.599 li
257.017 231.731 260.793 230.659 264.4 230.659 cv
266.035 230.659 267.548 230.887 268.775 231.317 cv
268.879 231.354 li
268.923 231.455 li
270.09 234.166 270.682 237.045 270.682 240.011 cv
270.682 240.241 270.674 240.468 270.666 240.696 cv
cp
269.144 248.024 mo
267.966 250.978 266.108 253.688 263.773 255.862 cv
263.416 256.193 li
263.352 255.711 li
262.821 251.737 259.407 246.094 256.412 242.933 cv
256.306 242.82 li
256.359 242.674 li
256.675 241.803 256.835 240.907 256.835 240.011 cv
256.835 239.79 256.823 239.561 256.798 239.288 cv
256.766 238.942 li
257.105 239.02 li
262.858 240.335 267.512 244.443 269.137 247.822 cv
269.185 247.922 li
269.144 248.024 li
cp
257.722 259.756 mo
257.686 259.86 li
257.584 259.904 li
254.874 261.071 251.996 261.662 249.029 261.662 cv
248.789 261.662 248.552 261.654 248.314 261.645 cv
247.761 261.625 li
248.056 261.238 li
250.49 258.053 252.066 251.648 252.183 247.297 cv
252.188 247.142 li
252.329 247.076 li
253.374 246.587 254.31 245.867 255.034 244.994 cv
255.256 244.727 li
255.441 245.021 li
258.58 250.022 258.964 256.219 257.722 259.756 cv
cp
241.218 260.118 mo
241.119 260.165 li
241.016 260.124 li
238.061 258.946 235.351 257.089 233.178 254.754 cv
232.847 254.398 li
233.329 254.333 li
237.304 253.802 242.947 250.387 246.108 247.393 cv
246.221 247.286 li
246.367 247.339 li
247.471 247.741 248.637 247.879 249.753 247.779 cv
250.098 247.748 li
250.021 248.086 li
248.705 253.838 244.597 258.493 241.218 260.118 cv
cp
229.284 248.703 mo
229.18 248.666 li
229.136 248.565 li
227.969 245.856 227.378 242.978 227.378 240.011 cv
227.378 239.781 227.386 239.553 227.394 239.325 cv
227.414 238.741 li
227.801 239.037 li
230.986 241.47 237.391 243.046 241.743 243.165 cv
241.898 243.169 li
241.964 243.31 li
242.453 244.355 243.173 245.29 244.046 246.016 cv
244.314 246.238 li
244.019 246.422 li
241.042 248.291 237.267 249.362 233.661 249.362 cv
232.025 249.362 230.511 249.134 229.284 248.703 cv
cp
228.916 231.997 mo
230.094 229.042 231.951 226.333 234.287 224.16 cv
234.643 223.828 li
234.708 224.311 li
235.238 228.283 238.652 233.927 241.647 237.089 cv
241.754 237.202 li
241.701 237.348 li
241.385 238.218 241.224 239.114 241.224 240.011 cv
241.224 240.254 241.239 240.495 241.261 240.733 cv
241.292 241.079 li
240.954 241.001 li
235.202 239.685 230.547 235.577 228.923 232.199 cv
228.875 232.099 li
228.916 231.997 li
cp
240.337 220.265 mo
240.373 220.161 li
240.474 220.117 li
243.186 218.951 246.064 218.359 249.029 218.359 cv
249.292 218.359 249.553 218.369 249.812 218.379 cv
250.298 218.397 li
250.003 218.783 li
247.569 221.968 245.993 228.373 245.875 232.725 cv
245.871 232.88 li
245.73 232.946 li
244.686 233.434 243.75 234.154 243.025 235.026 cv
242.803 235.294 li
242.618 234.999 li
239.48 230 239.095 223.803 240.337 220.265 cv
cp
252.802 240.011 mo
252.802 241.019 252.41 241.966 251.698 242.678 cv
250.986 243.391 250.038 243.783 249.03 243.783 cv
248.022 243.783 247.075 243.391 246.362 242.678 cv
244.892 241.207 244.892 238.814 246.362 237.343 cv
247.075 236.631 248.022 236.238 249.03 236.238 cv
250.037 236.238 250.985 236.631 251.697 237.343 cv
252.41 238.056 252.802 239.003 252.802 240.011 cv
cp
256.84 219.904 mo
256.94 219.856 li
257.043 219.897 li
259.997 221.074 262.707 222.931 264.881 225.267 cv
265.212 225.624 li
264.73 225.688 li
260.754 226.22 255.11 229.635 251.951 232.629 cv
251.838 232.736 li
251.692 232.682 li
250.823 232.366 249.928 232.206 249.029 232.206 cv
248.809 232.206 248.573 232.218 248.307 232.243 cv
247.961 232.274 li
248.039 231.936 li
249.355 226.182 253.463 221.528 256.84 219.904 cv
cp
276.77 238.454 mo
275.871 238.182 274.941 237.901 274.255 237.605 cv
274.119 237.547 li
274.104 237.4 li
274.041 236.789 273.946 236.145 273.815 235.43 cv
273.788 235.285 li
273.901 235.191 li
274.492 234.697 275.332 234.148 276.145 233.617 cv
276.717 233.244 277.306 232.859 277.796 232.501 cv
277.653 231.954 277.482 231.383 277.279 230.764 cv
276.659 230.725 275.935 230.718 275.234 230.713 cv
274.287 230.705 273.306 230.697 272.559 230.605 cv
272.412 230.587 li
272.356 230.451 li
272.108 229.847 271.829 229.239 271.526 228.642 cv
271.459 228.511 li
271.541 228.388 li
271.965 227.753 272.609 226.995 273.232 226.263 cv
273.679 225.737 274.14 225.195 274.511 224.708 cv
274.208 224.204 273.878 223.693 273.528 223.184 cv
272.926 223.32 272.236 223.517 271.568 223.708 cv
270.649 223.97 269.7 224.24 268.951 224.363 cv
268.806 224.387 li
268.714 224.272 li
268.299 223.754 267.86 223.249 267.41 222.769 cv
267.309 222.662 li
267.354 222.521 li
267.581 221.796 267.985 220.892 268.376 220.018 cv
268.658 219.385 268.95 218.732 269.17 218.158 cv
268.725 217.747 268.265 217.348 267.799 216.968 cv
267.262 217.266 266.658 217.647 266.072 218.016 cv
265.26 218.527 264.422 219.055 263.735 219.383 cv
263.602 219.447 li
263.481 219.362 li
262.934 218.978 262.371 218.615 261.808 218.284 cv
261.682 218.209 li
261.685 218.062 li
261.7 217.306 261.833 216.331 261.961 215.388 cv
262.055 214.696 262.152 213.982 262.202 213.365 cv
261.646 213.089 261.093 212.835 260.556 212.608 cv
260.128 213.044 259.659 213.576 259.204 214.092 cv
258.566 214.816 257.906 215.564 257.336 216.075 cv
257.226 216.173 li
257.087 216.126 li
256.417 215.9 255.792 215.715 255.178 215.561 cv
255.035 215.525 li
254.996 215.383 li
254.8 214.658 254.653 213.693 254.51 212.759 cv
254.404 212.064 254.294 211.348 254.166 210.737 cv
253.525 210.624 252.934 210.538 252.369 210.474 cv
252.085 211.008 251.789 211.643 251.501 212.26 cv
251.091 213.141 250.666 214.053 250.259 214.709 cv
250.182 214.834 li
250.036 214.828 li
249.368 214.802 248.692 214.802 248.024 214.828 cv
247.877 214.834 li
247.8 214.709 li
247.393 214.052 246.967 213.14 246.556 212.257 cv
246.27 211.642 245.974 211.007 245.691 210.474 cv
245.125 210.538 244.535 210.625 243.894 210.737 cv
243.765 211.347 243.656 212.064 243.55 212.759 cv
243.407 213.692 243.259 214.658 243.063 215.383 cv
243.025 215.525 li
242.881 215.561 li
242.262 215.717 241.637 215.901 240.972 216.126 cv
240.833 216.173 li
240.723 216.075 li
240.153 215.563 239.493 214.814 238.855 214.091 cv
238.4 213.575 237.931 213.043 237.504 212.607 cv
236.97 212.833 236.429 213.081 235.859 213.364 cv
235.908 213.982 236.005 214.696 236.099 215.388 cv
236.227 216.331 236.36 217.305 236.376 218.062 cv
236.379 218.209 li
236.252 218.284 li
235.685 218.617 235.123 218.98 234.579 219.361 cv
234.459 219.446 li
234.326 219.382 li
233.639 219.054 232.8 218.525 231.988 218.014 cv
231.403 217.646 230.799 217.265 230.262 216.967 cv
229.8 217.343 229.34 217.742 228.891 218.156 cv
229.111 218.73 229.402 219.382 229.684 220.015 cv
230.075 220.889 230.478 221.794 230.706 222.52 cv
230.75 222.66 li
230.65 222.768 li
230.193 223.256 229.754 223.762 229.346 224.272 cv
229.254 224.387 li
229.109 224.363 li
228.359 224.24 227.409 223.969 226.49 223.706 cv
225.822 223.516 225.133 223.32 224.532 223.183 cv
224.183 223.689 223.853 224.201 223.548 224.707 cv
223.919 225.195 224.38 225.737 224.828 226.263 cv
225.45 226.995 226.095 227.752 226.518 228.387 cv
226.6 228.51 li
226.533 228.641 li
226.228 229.243 225.949 229.851 225.704 230.45 cv
225.648 230.587 li
225.502 230.605 li
224.753 230.697 223.772 230.705 222.823 230.713 cv
222.122 230.718 221.4 230.725 220.779 230.764 cv
220.577 231.38 220.408 231.951 220.264 232.501 cv
220.755 232.86 221.347 233.247 221.921 233.622 cv
222.731 234.151 223.569 234.698 224.158 235.191 cv
224.271 235.285 li
224.244 235.43 li
224.113 236.145 224.019 236.789 223.956 237.4 cv
223.941 237.547 li
223.805 237.605 li
223.118 237.901 222.189 238.182 221.29 238.454 cv
220.613 238.66 219.915 238.871 219.326 239.087 cv
219.314 239.409 219.305 239.709 219.305 240.011 cv
219.305 240.32 219.315 240.627 219.326 240.934 cv
219.916 241.15 220.615 241.362 221.293 241.568 cv
222.191 241.84 223.119 242.121 223.805 242.416 cv
223.941 242.474 li
223.956 242.621 li
224.019 243.232 224.113 243.877 224.244 244.592 cv
224.271 244.736 li
224.158 244.83 li
223.569 245.323 222.73 245.87 221.92 246.4 cv
221.346 246.775 220.755 247.161 220.264 247.52 cv
220.406 248.066 220.576 248.636 220.779 249.256 cv
221.4 249.296 222.122 249.302 222.823 249.308 cv
223.771 249.316 224.752 249.324 225.5 249.416 cv
225.647 249.434 li
225.703 249.57 li
225.947 250.165 226.227 250.774 226.533 251.38 cv
226.599 251.511 li
226.518 251.633 li
226.093 252.269 225.448 253.028 224.825 253.761 cv
224.378 254.286 223.918 254.827 223.548 255.314 cv
223.852 255.82 224.182 256.331 224.531 256.837 cv
225.132 256.701 225.821 256.504 226.489 256.313 cv
227.408 256.051 228.358 255.78 229.108 255.657 cv
229.253 255.634 li
229.345 255.749 li
229.755 256.261 230.194 256.767 230.649 257.253 cv
230.749 257.36 li
230.705 257.5 li
230.477 258.226 230.074 259.131 229.683 260.006 cv
229.401 260.638 229.11 261.29 228.89 261.864 cv
229.338 262.277 229.798 262.676 230.261 263.054 cv
230.797 262.755 231.401 262.375 231.986 262.007 cv
232.797 261.496 233.637 260.967 234.324 260.638 cv
234.457 260.574 li
234.577 260.659 li
235.125 261.042 235.688 261.405 236.251 261.737 cv
236.378 261.812 li
236.375 261.959 li
236.359 262.715 236.226 263.69 236.098 264.633 cv
236.004 265.325 235.907 266.039 235.857 266.657 cv
236.42 266.936 236.961 267.185 237.503 267.413 cv
237.931 266.977 238.401 266.445 238.857 265.928 cv
239.494 265.205 240.154 264.458 240.723 263.946 cv
240.833 263.848 li
240.972 263.895 li
241.644 264.122 242.268 264.306 242.881 264.46 cv
243.024 264.496 li
243.062 264.638 li
243.259 265.364 243.407 266.331 243.55 267.267 cv
243.656 267.96 243.765 268.675 243.894 269.284 cv
244.533 269.397 245.124 269.483 245.691 269.547 cv
245.974 269.014 246.27 268.379 246.557 267.763 cv
246.968 266.881 247.393 265.969 247.8 265.312 cv
247.877 265.187 li
248.024 265.193 li
248.692 265.22 249.368 265.22 250.035 265.193 cv
250.182 265.187 li
250.26 265.312 li
250.666 265.968 251.091 266.879 251.501 267.76 cv
251.788 268.377 252.085 269.013 252.369 269.547 cv
252.936 269.483 253.527 269.396 254.165 269.284 cv
254.294 268.674 254.403 267.958 254.509 267.263 cv
254.652 266.329 254.8 265.363 254.996 264.638 cv
255.035 264.496 li
255.178 264.46 li
255.797 264.305 256.421 264.12 257.087 263.895 cv
257.226 263.848 li
257.335 263.946 li
257.906 264.458 258.566 265.207 259.204 265.93 cv
259.659 266.446 260.128 266.978 260.555 267.414 cv
261.093 267.187 261.634 266.938 262.201 266.657 cv
262.152 266.04 262.055 265.327 261.961 264.636 cv
261.833 263.692 261.7 262.716 261.685 261.96 cv
261.682 261.813 li
261.808 261.738 li
262.378 261.401 262.941 261.038 263.481 260.659 cv
263.602 260.574 li
263.735 260.638 li
264.422 260.967 265.26 261.496 266.072 262.006 cv
266.657 262.375 267.261 262.756 267.798 263.054 cv
268.26 262.678 268.719 262.279 269.169 261.866 cv
268.948 261.291 268.657 260.639 268.375 260.007 cv
267.984 259.132 267.58 258.228 267.353 257.502 cv
267.308 257.361 li
267.409 257.254 li
267.866 256.767 268.305 256.261 268.714 255.75 cv
268.805 255.635 li
268.951 255.659 li
269.7 255.782 270.649 256.053 271.568 256.315 cv
272.236 256.505 272.926 256.702 273.528 256.838 cv
273.875 256.335 274.205 255.823 274.511 255.314 cv
274.14 254.827 273.679 254.286 273.233 253.761 cv
272.61 253.028 271.965 252.27 271.541 251.634 cv
271.459 251.512 li
271.526 251.381 li
271.829 250.783 272.109 250.174 272.356 249.571 cv
272.412 249.435 li
272.559 249.417 li
273.306 249.325 274.287 249.317 275.234 249.309 cv
275.935 249.303 276.659 249.297 277.279 249.258 cv
277.483 248.638 277.653 248.066 277.796 247.521 cv
277.305 247.162 276.715 246.776 276.141 246.402 cv
275.33 245.872 274.492 245.324 273.901 244.83 cv
273.789 244.736 li
273.815 244.592 li
273.946 243.877 274.041 243.232 274.104 242.621 cv
274.119 242.474 li
274.255 242.416 li
274.94 242.121 275.869 241.84 276.767 241.568 cv
277.445 241.362 278.143 241.15 278.733 240.934 cv
278.744 240.627 278.755 240.32 278.755 240.011 cv
278.755 239.701 278.744 239.394 278.733 239.087 cv
278.144 238.871 277.446 238.66 276.77 238.454 cv
cp
f
239.852 163.49 mo
239.858 163.68 li
239.726 163.592 li
238.643 162.869 236.534 162.491 235.122 162.543 cv
235.071 162.545 li
235.047 162.5 li
234.867 162.172 234.614 161.883 234.316 161.666 cv
234.225 161.6 li
234.316 161.534 li
235.242 160.867 236.444 160.441 237.613 160.367 cv
238.143 160.333 238.638 160.375 239.045 160.489 cv
239.079 160.499 li
239.096 160.531 li
239.53 161.385 239.781 162.306 239.843 163.267 cv
239.848 163.342 239.85 163.416 239.852 163.49 cv
cp
239.511 165.896 mo
239.19 166.878 238.644 167.795 237.932 168.548 cv
237.824 168.663 li
237.793 168.507 li
237.538 167.231 236.315 165.472 235.279 164.51 cv
235.242 164.476 li
235.256 164.427 li
235.34 164.139 235.374 163.845 235.355 163.554 cv
235.351 163.483 235.342 163.409 235.328 163.321 cv
235.311 163.209 li
235.422 163.227 li
237.314 163.534 238.908 164.77 239.504 165.831 cv
239.522 165.862 li
239.511 165.896 li
cp
236.052 169.935 mo
236.042 169.97 li
236.01 169.986 li
235.156 170.42 234.235 170.672 233.274 170.733 cv
233.196 170.738 233.119 170.74 233.042 170.742 cv
232.862 170.747 li
232.95 170.616 li
233.673 169.533 234.051 167.425 233.999 166.012 cv
233.997 165.962 li
234.041 165.937 li
234.37 165.757 234.658 165.504 234.875 165.207 cv
234.941 165.115 li
235.007 165.207 li
236.128 166.763 236.381 168.763 236.052 169.935 cv
cp
230.71 170.395 mo
230.679 170.412 li
230.645 170.401 li
229.663 170.08 228.746 169.535 227.993 168.823 cv
227.879 168.714 li
228.034 168.683 li
229.311 168.428 231.069 167.205 232.031 166.169 cv
232.066 166.132 li
232.114 166.146 li
232.481 166.254 232.861 166.274 233.221 166.219 cv
233.332 166.201 li
233.314 166.312 li
233.007 168.204 231.772 169.798 230.71 170.395 cv
cp
226.606 166.942 mo
226.571 166.933 li
226.555 166.901 li
226.121 166.047 225.869 165.126 225.808 164.165 cv
225.803 164.09 225.801 164.016 225.799 163.942 cv
225.793 163.752 li
225.925 163.84 li
227.008 164.563 229.116 164.941 230.529 164.889 cv
230.58 164.887 li
230.604 164.932 li
230.784 165.26 231.037 165.548 231.335 165.765 cv
231.426 165.832 li
231.334 165.898 li
230.408 166.565 229.207 166.99 228.038 167.065 cv
227.508 167.099 227.013 167.057 226.606 166.942 cv
cp
226.14 161.535 mo
226.461 160.553 227.007 159.637 227.719 158.884 cv
227.827 158.769 li
227.858 158.924 li
228.112 160.201 229.336 161.959 230.372 162.922 cv
230.409 162.956 li
230.395 163.005 li
230.31 163.293 230.277 163.587 230.296 163.878 cv
230.301 163.957 230.311 164.034 230.322 164.111 cv
230.34 164.222 li
230.229 164.204 li
228.337 163.897 226.743 162.662 226.147 161.601 cv
226.129 161.57 li
226.14 161.535 li
cp
229.599 157.496 mo
229.608 157.462 li
229.64 157.446 li
230.495 157.011 231.416 156.76 232.377 156.699 cv
232.462 156.693 232.546 156.691 232.631 156.689 cv
232.788 156.685 li
232.701 156.816 li
231.978 157.898 231.6 160.007 231.652 161.42 cv
231.654 161.47 li
231.61 161.494 li
231.281 161.674 230.993 161.927 230.776 162.225 cv
230.71 162.316 li
230.644 162.225 li
229.523 160.669 229.27 158.669 229.599 157.496 cv
cp
234.048 163.638 mo
234.069 163.964 233.962 164.28 233.745 164.525 cv
233.529 164.771 233.23 164.918 232.904 164.938 cv
232.577 164.959 232.262 164.852 232.016 164.636 cv
231.509 164.189 231.459 163.414 231.906 162.907 cv
232.122 162.661 232.421 162.514 232.747 162.493 cv
233.074 162.472 233.389 162.58 233.635 162.796 cv
233.88 163.012 234.027 163.311 234.048 163.638 cv
cp
234.94 157.037 mo
234.972 157.02 li
235.006 157.031 li
235.987 157.351 236.904 157.897 237.657 158.609 cv
237.772 158.718 li
237.617 158.749 li
236.339 159.003 234.581 160.227 233.619 161.263 cv
233.585 161.3 li
233.537 161.286 li
233.248 161.201 232.955 161.168 232.664 161.186 cv
232.592 161.191 232.516 161.2 232.43 161.213 cv
232.319 161.231 li
232.337 161.119 li
232.644 159.227 233.879 157.634 234.94 157.037 cv
cp
241.784 162.637 mo
241.487 162.567 241.18 162.495 240.951 162.414 cv
240.906 162.397 li
240.898 162.35 li
240.865 162.154 240.821 161.947 240.763 161.718 cv
240.752 161.671 li
240.786 161.639 li
240.968 161.466 241.229 161.271 241.481 161.082 cv
241.659 160.949 241.842 160.812 241.993 160.686 cv
241.935 160.511 241.868 160.33 241.79 160.134 cv
241.588 160.134 241.353 160.147 241.126 160.159 cv
240.818 160.176 240.501 160.194 240.256 160.18 cv
240.208 160.177 li
240.187 160.134 li
240.095 159.944 239.992 159.752 239.881 159.565 cv
239.857 159.524 li
239.881 159.482 li
240.005 159.268 240.198 159.009 240.385 158.759 cv
240.519 158.579 240.657 158.394 240.767 158.228 cv
240.658 158.071 240.541 157.912 240.417 157.755 cv
240.224 157.811 240.005 157.889 239.792 157.965 cv
239.5 158.069 239.198 158.176 238.958 158.232 cv
238.911 158.242 li
238.879 158.207 li
238.734 158.048 238.581 157.893 238.425 157.747 cv
238.39 157.714 li
238.402 157.668 li
238.461 157.428 238.573 157.127 238.681 156.835 cv
238.76 156.624 238.841 156.407 238.9 156.216 cv
238.747 156.092 238.59 155.972 238.431 155.859 cv
238.263 155.967 238.075 156.102 237.893 156.234 cv
237.641 156.416 237.38 156.605 237.164 156.726 cv
237.122 156.749 li
237.081 156.724 li
236.896 156.611 236.706 156.505 236.517 156.409 cv
236.474 156.388 li
236.472 156.34 li
236.461 156.095 236.484 155.776 236.506 155.468 cv
236.522 155.241 236.539 155.008 236.542 154.807 cv
236.356 154.729 236.172 154.658 235.993 154.596 cv
235.863 154.746 235.722 154.928 235.586 155.105 cv
235.394 155.352 235.196 155.609 235.021 155.786 cv
234.988 155.82 li
234.942 155.808 li
234.72 155.748 234.514 155.701 234.311 155.664 cv
234.264 155.656 li
234.249 155.61 li
234.17 155.379 234.102 155.07 234.037 154.77 cv
233.988 154.547 233.938 154.317 233.883 154.122 cv
233.673 154.098 233.48 154.083 233.296 154.074 cv
233.215 154.253 233.132 154.465 233.051 154.671 cv
232.937 154.965 232.818 155.269 232.7 155.49 cv
232.677 155.532 li
232.63 155.533 li
232.413 155.539 232.194 155.553 231.977 155.575 cv
231.93 155.58 li
231.903 155.541 li
231.757 155.336 231.6 155.05 231.449 154.772 cv
231.343 154.579 231.234 154.379 231.131 154.212 cv
230.949 154.245 230.76 154.285 230.554 154.335 cv
230.525 154.535 230.505 154.77 230.485 154.997 cv
230.458 155.303 230.43 155.618 230.381 155.857 cv
230.372 155.904 li
230.326 155.919 li
230.128 155.982 229.93 156.055 229.719 156.142 cv
229.675 156.16 li
229.637 156.13 li
229.442 155.976 229.212 155.747 228.991 155.526 cv
228.833 155.368 228.67 155.206 228.522 155.073 cv
228.353 155.157 228.183 155.249 228.004 155.353 cv
228.033 155.552 228.079 155.781 228.124 156.003 cv
228.185 156.306 228.249 156.62 228.269 156.864 cv
228.273 156.912 li
228.234 156.939 li
228.057 157.059 227.882 157.188 227.714 157.323 cv
227.677 157.353 li
227.632 157.335 li
227.403 157.243 227.12 157.089 226.846 156.94 cv
226.649 156.833 226.445 156.722 226.265 156.636 cv
226.123 156.768 225.983 156.906 225.845 157.05 cv
225.929 157.232 226.036 157.437 226.141 157.636 cv
226.286 157.911 226.435 158.196 226.524 158.427 cv
226.541 158.471 li
226.511 158.508 li
226.373 158.676 226.241 158.849 226.12 159.023 cv
226.092 159.062 li
226.045 159.057 li
225.799 159.033 225.486 158.965 225.182 158.899 cv
224.962 158.851 224.735 158.801 224.537 158.77 cv
224.434 158.941 224.338 159.113 224.25 159.284 cv
224.38 159.434 224.541 159.6 224.697 159.762 cv
224.914 159.986 225.138 160.218 225.289 160.415 cv
225.318 160.453 li
225.299 160.497 li
225.212 160.698 225.134 160.902 225.067 161.101 cv
225.052 161.146 li
225.005 161.155 li
224.764 161.2 224.446 161.223 224.139 161.245 cv
223.912 161.262 223.678 161.279 223.478 161.304 cv
223.425 161.508 223.382 161.697 223.347 161.878 cv
223.513 161.984 223.713 162.097 223.907 162.207 cv
224.18 162.362 224.463 162.522 224.665 162.669 cv
224.703 162.697 li
224.697 162.745 li
224.67 162.979 224.653 163.19 224.645 163.389 cv
224.643 163.437 li
224.6 163.459 li
224.384 163.569 224.088 163.68 223.803 163.786 cv
223.587 163.867 223.366 163.95 223.179 164.032 cv
223.182 164.137 223.185 164.234 223.191 164.332 cv
223.198 164.432 223.207 164.531 223.218 164.631 cv
223.413 164.688 223.644 164.743 223.868 164.795 cv
224.165 164.865 224.471 164.937 224.7 165.018 cv
224.745 165.034 li
224.753 165.082 li
224.786 165.278 224.83 165.485 224.887 165.714 cv
224.899 165.76 li
224.864 165.793 li
224.683 165.965 224.423 166.16 224.171 166.348 cv
223.993 166.482 223.81 166.619 223.658 166.746 cv
223.715 166.92 223.782 167.101 223.861 167.298 cv
224.063 167.298 224.297 167.285 224.524 167.272 cv
224.832 167.255 225.15 167.237 225.394 167.252 cv
225.442 167.255 li
225.463 167.298 li
225.555 167.485 225.658 167.677 225.77 167.867 cv
225.794 167.908 li
225.77 167.949 li
225.646 168.164 225.452 168.423 225.265 168.674 cv
225.132 168.853 224.994 169.038 224.884 169.204 cv
224.993 169.361 225.11 169.52 225.234 169.677 cv
225.426 169.62 225.645 169.542 225.858 169.467 cv
226.15 169.363 226.453 169.255 226.693 169.2 cv
226.739 169.189 li
226.772 169.225 li
226.915 169.382 227.068 169.537 227.225 169.685 cv
227.26 169.718 li
227.249 169.764 li
227.19 170.004 227.078 170.306 226.969 170.597 cv
226.891 170.808 226.81 171.025 226.751 171.216 cv
226.905 171.341 227.062 171.46 227.22 171.573 cv
227.388 171.465 227.575 171.33 227.757 171.198 cv
228.01 171.016 228.271 170.827 228.487 170.706 cv
228.529 170.683 li
228.569 170.708 li
228.755 170.82 228.945 170.926 229.134 171.022 cv
229.177 171.044 li
229.179 171.092 li
229.189 171.337 229.166 171.656 229.144 171.964 cv
229.128 172.19 229.112 172.424 229.108 172.625 cv
229.297 172.704 229.477 172.773 229.657 172.836 cv
229.787 172.686 229.929 172.503 230.065 172.327 cv
230.257 172.079 230.455 171.823 230.629 171.646 cv
230.663 171.612 li
230.709 171.624 li
230.931 171.683 231.137 171.73 231.339 171.767 cv
231.386 171.776 li
231.402 171.821 li
231.481 172.053 231.549 172.363 231.614 172.663 cv
231.663 172.886 231.713 173.115 231.767 173.31 cv
231.977 173.333 232.17 173.349 232.355 173.358 cv
232.436 173.179 232.519 172.967 232.599 172.762 cv
232.714 172.467 232.833 172.163 232.951 171.942 cv
232.974 171.899 li
233.021 171.898 li
233.238 171.893 233.457 171.879 233.673 171.857 cv
233.721 171.852 li
233.748 171.891 li
233.894 172.095 234.05 172.381 234.201 172.658 cv
234.307 172.852 234.417 173.052 234.52 173.22 cv
234.702 173.187 234.892 173.147 235.096 173.097 cv
235.126 172.897 235.146 172.662 235.166 172.435 cv
235.193 172.129 235.221 171.813 235.27 171.574 cv
235.279 171.527 li
235.325 171.512 li
235.522 171.449 235.721 171.377 235.932 171.29 cv
235.976 171.272 li
236.013 171.301 li
236.209 171.456 236.438 171.684 236.66 171.906 cv
236.818 172.063 236.981 172.226 237.129 172.358 cv
237.298 172.274 237.469 172.182 237.647 172.079 cv
237.618 171.88 237.571 171.651 237.527 171.429 cv
237.466 171.126 237.402 170.812 237.382 170.567 cv
237.378 170.52 li
237.417 170.493 li
237.595 170.372 237.77 170.243 237.937 170.109 cv
237.974 170.079 li
238.019 170.096 li
238.248 170.189 238.531 170.343 238.805 170.492 cv
239.002 170.599 239.206 170.71 239.386 170.796 cv
239.528 170.664 239.668 170.525 239.805 170.382 cv
239.722 170.2 239.614 169.995 239.51 169.796 cv
239.365 169.52 239.215 169.236 239.126 169.005 cv
239.109 168.961 li
239.14 168.924 li
239.277 168.756 239.409 168.583 239.531 168.409 cv
239.559 168.37 li
239.606 168.375 li
239.851 168.399 240.165 168.467 240.468 168.533 cv
240.688 168.581 240.916 168.63 241.114 168.662 cv
241.216 168.492 241.312 168.319 241.401 168.148 cv
241.271 167.998 241.11 167.832 240.955 167.671 cv
240.738 167.446 240.513 167.214 240.362 167.016 cv
240.333 166.979 li
240.352 166.935 li
240.438 166.735 240.516 166.531 240.584 166.331 cv
240.599 166.286 li
240.646 166.277 li
240.887 166.232 241.204 166.209 241.511 166.186 cv
241.738 166.17 241.972 166.153 242.173 166.128 cv
242.226 165.922 242.269 165.734 242.304 165.554 cv
242.138 165.448 241.938 165.335 241.745 165.225 cv
241.471 165.071 241.188 164.91 240.986 164.762 cv
240.948 164.734 li
240.953 164.687 li
240.981 164.452 240.998 164.242 241.006 164.042 cv
241.008 163.994 li
241.051 163.973 li
241.267 163.863 241.562 163.753 241.847 163.646 cv
242.063 163.565 242.285 163.482 242.471 163.4 cv
242.469 163.3 242.466 163.2 242.459 163.1 cv
242.453 163 242.443 162.9 242.433 162.801 cv
242.238 162.743 242.007 162.689 241.784 162.637 cv
cp
f
184.789 112.648 mo
184.793 112.806 li
184.683 112.733 li
183.78 112.13 182.021 111.815 180.843 111.858 cv
180.801 111.86 li
180.78 111.823 li
180.63 111.548 180.419 111.308 180.171 111.127 cv
180.094 111.071 li
180.171 111.016 li
180.943 110.46 181.946 110.105 182.921 110.042 cv
183.363 110.014 183.776 110.05 184.115 110.145 cv
184.144 110.153 li
184.158 110.18 li
184.52 110.892 184.73 111.66 184.781 112.462 cv
184.785 112.524 184.787 112.586 184.789 112.648 cv
cp
184.504 114.656 mo
184.236 115.475 183.781 116.239 183.187 116.867 cv
183.097 116.963 li
183.071 116.834 li
182.859 115.769 181.838 114.302 180.974 113.499 cv
180.943 113.47 li
180.954 113.43 li
181.025 113.189 181.053 112.944 181.037 112.702 cv
181.034 112.642 181.026 112.58 181.015 112.507 cv
181 112.414 li
181.093 112.429 li
182.671 112.685 184.001 113.716 184.498 114.601 cv
184.513 114.627 li
184.504 114.656 li
cp
181.619 118.025 mo
181.611 118.054 li
181.584 118.067 li
180.871 118.43 180.103 118.639 179.301 118.691 cv
179.236 118.695 179.172 118.697 179.107 118.698 cv
178.957 118.703 li
179.031 118.593 li
179.634 117.69 179.949 115.931 179.906 114.752 cv
179.904 114.71 li
179.941 114.69 li
180.215 114.539 180.456 114.329 180.637 114.08 cv
180.692 114.004 li
180.747 114.081 li
181.682 115.378 181.893 117.047 181.619 118.025 cv
cp
177.163 118.408 mo
177.136 118.423 li
177.108 118.413 li
176.289 118.146 175.524 117.691 174.896 117.097 cv
174.8 117.006 li
174.93 116.98 li
175.995 116.768 177.462 115.747 178.265 114.883 cv
178.293 114.852 li
178.334 114.864 li
178.639 114.954 178.957 114.971 179.257 114.924 cv
179.35 114.91 li
179.334 115.003 li
179.078 116.581 178.048 117.91 177.163 118.408 cv
cp
173.738 115.528 mo
173.71 115.52 li
173.696 115.493 li
173.334 114.781 173.124 114.013 173.073 113.211 cv
173.069 113.149 173.067 113.087 173.065 113.025 cv
173.061 112.867 li
173.17 112.94 li
174.074 113.543 175.832 113.859 177.011 113.815 cv
177.053 113.814 li
177.074 113.851 li
177.224 114.125 177.435 114.365 177.683 114.546 cv
177.759 114.602 li
177.683 114.657 li
176.91 115.213 175.908 115.568 174.933 115.631 cv
174.491 115.659 174.078 115.624 173.738 115.528 cv
cp
173.35 111.018 mo
173.618 110.198 174.073 109.434 174.667 108.806 cv
174.757 108.71 li
174.783 108.839 li
174.995 109.904 176.016 111.371 176.88 112.174 cv
176.911 112.203 li
176.899 112.243 li
176.829 112.484 176.801 112.729 176.817 112.972 cv
176.821 113.037 176.829 113.102 176.839 113.166 cv
176.853 113.259 li
176.761 113.244 li
175.183 112.988 173.853 111.958 173.355 111.072 cv
173.341 111.046 li
173.35 111.018 li
cp
176.235 107.648 mo
176.243 107.619 li
176.27 107.606 li
176.983 107.243 177.751 107.034 178.553 106.982 cv
178.624 106.978 178.694 106.976 178.765 106.974 cv
178.896 106.971 li
178.823 107.08 li
178.22 107.983 177.905 109.742 177.948 110.921 cv
177.95 110.963 li
177.913 110.983 li
177.639 111.134 177.398 111.344 177.217 111.593 cv
177.162 111.669 li
177.107 111.592 li
176.172 110.295 175.961 108.626 176.235 107.648 cv
cp
179.947 112.772 mo
179.964 113.044 179.875 113.307 179.694 113.512 cv
179.514 113.717 179.265 113.839 178.992 113.857 cv
178.72 113.874 178.457 113.784 178.252 113.604 cv
177.829 113.232 177.787 112.585 178.16 112.161 cv
178.34 111.956 178.589 111.834 178.862 111.817 cv
179.134 111.799 179.397 111.889 179.602 112.069 cv
179.807 112.25 179.929 112.499 179.947 112.772 cv
cp
180.691 107.265 mo
180.717 107.25 li
180.746 107.26 li
181.565 107.527 182.33 107.982 182.958 108.576 cv
183.054 108.667 li
182.924 108.693 li
181.858 108.905 180.392 109.926 179.589 110.79 cv
179.561 110.821 li
179.52 110.809 li
179.28 110.739 179.035 110.711 178.792 110.726 cv
178.732 110.73 178.669 110.738 178.597 110.749 cv
178.504 110.763 li
178.519 110.67 li
178.776 109.092 179.806 107.763 180.691 107.265 cv
cp
186.4 111.936 mo
186.152 111.878 185.896 111.818 185.706 111.75 cv
185.668 111.737 li
185.661 111.697 li
185.634 111.533 185.597 111.361 185.549 111.17 cv
185.539 111.131 li
185.568 111.104 li
185.72 110.96 185.937 110.797 186.148 110.639 cv
186.296 110.528 186.449 110.414 186.575 110.309 cv
186.527 110.163 186.471 110.012 186.405 109.848 cv
186.237 109.848 186.041 109.859 185.851 109.87 cv
185.595 109.884 185.33 109.899 185.126 109.887 cv
185.086 109.885 li
185.069 109.849 li
184.991 109.69 184.905 109.53 184.813 109.374 cv
184.793 109.34 li
184.813 109.305 li
184.916 109.126 185.077 108.91 185.233 108.701 cv
185.345 108.551 185.46 108.397 185.552 108.258 cv
185.461 108.127 185.363 107.995 185.26 107.864 cv
185.099 107.911 184.916 107.976 184.739 108.039 cv
184.495 108.126 184.243 108.215 184.043 108.261 cv
184.004 108.271 li
183.977 108.241 li
183.856 108.108 183.729 107.979 183.599 107.857 cv
183.569 107.83 li
183.579 107.791 li
183.628 107.591 183.721 107.34 183.812 107.097 cv
183.877 106.92 183.945 106.739 183.995 106.58 cv
183.867 106.477 183.736 106.377 183.603 106.282 cv
183.463 106.372 183.307 106.485 183.154 106.595 cv
182.944 106.747 182.726 106.904 182.546 107.005 cv
182.511 107.025 li
182.477 107.004 li
182.323 106.909 182.164 106.821 182.006 106.741 cv
181.971 106.723 li
181.969 106.683 li
181.96 106.479 181.979 106.213 181.998 105.956 cv
182.011 105.767 182.025 105.572 182.028 105.404 cv
181.873 105.339 181.719 105.28 181.57 105.228 cv
181.461 105.354 181.344 105.506 181.23 105.653 cv
181.07 105.86 180.904 106.073 180.759 106.221 cv
180.731 106.25 li
180.693 106.239 li
180.507 106.19 180.335 106.151 180.167 106.12 cv
180.127 106.112 li
180.114 106.075 li
180.049 105.882 179.992 105.624 179.938 105.374 cv
179.897 105.188 179.855 104.996 179.81 104.833 cv
179.634 104.813 179.473 104.8 179.319 104.793 cv
179.252 104.942 179.183 105.119 179.115 105.291 cv
179.02 105.536 178.921 105.79 178.822 105.974 cv
178.803 106.009 li
178.764 106.01 li
178.583 106.015 178.4 106.027 178.22 106.045 cv
178.18 106.049 li
178.157 106.017 li
178.036 105.846 177.905 105.607 177.778 105.375 cv
177.69 105.214 177.599 105.047 177.513 104.908 cv
177.362 104.935 177.204 104.969 177.032 105.01 cv
177.008 105.178 176.991 105.373 176.974 105.563 cv
176.952 105.818 176.928 106.082 176.888 106.281 cv
176.88 106.32 li
176.842 106.332 li
176.677 106.385 176.511 106.446 176.335 106.518 cv
176.299 106.533 li
176.267 106.508 li
176.104 106.38 175.913 106.189 175.728 106.004 cv
175.596 105.873 175.46 105.737 175.337 105.627 cv
175.196 105.697 175.054 105.773 174.905 105.86 cv
174.929 106.026 174.968 106.217 175.005 106.403 cv
175.056 106.655 175.109 106.917 175.126 107.121 cv
175.129 107.161 li
175.097 107.183 li
174.949 107.283 174.803 107.391 174.663 107.503 cv
174.632 107.528 li
174.595 107.513 li
174.403 107.436 174.167 107.308 173.939 107.184 cv
173.774 107.094 173.605 107.002 173.454 106.931 cv
173.336 107.04 173.218 107.156 173.104 107.276 cv
173.173 107.427 173.263 107.598 173.351 107.765 cv
173.471 107.994 173.596 108.232 173.67 108.424 cv
173.685 108.461 li
173.659 108.492 li
173.544 108.632 173.434 108.777 173.333 108.921 cv
173.31 108.954 li
173.27 108.95 li
173.065 108.93 172.804 108.873 172.551 108.818 cv
172.367 108.778 172.177 108.737 172.012 108.71 cv
171.927 108.853 171.847 108.997 171.773 109.139 cv
171.882 109.265 172.016 109.403 172.146 109.538 cv
172.327 109.725 172.514 109.919 172.639 110.083 cv
172.664 110.115 li
172.648 110.151 li
172.576 110.319 172.511 110.489 172.455 110.655 cv
172.442 110.693 li
172.403 110.7 li
172.202 110.738 171.937 110.757 171.68 110.776 cv
171.491 110.789 171.296 110.804 171.129 110.825 cv
171.085 110.995 171.049 111.152 171.019 111.303 cv
171.158 111.392 171.325 111.486 171.487 111.578 cv
171.715 111.707 171.951 111.84 172.119 111.964 cv
172.151 111.987 li
172.146 112.026 li
172.123 112.222 172.109 112.398 172.102 112.564 cv
172.101 112.604 li
172.065 112.622 li
171.885 112.714 171.638 112.806 171.4 112.895 cv
171.22 112.963 171.035 113.032 170.88 113.1 cv
170.882 113.188 170.885 113.269 170.89 113.35 cv
170.895 113.434 170.903 113.517 170.912 113.6 cv
171.075 113.648 171.268 113.693 171.454 113.737 cv
171.702 113.795 171.958 113.855 172.148 113.923 cv
172.186 113.936 li
172.193 113.976 li
172.22 114.14 172.257 114.313 172.305 114.504 cv
172.314 114.542 li
172.286 114.57 li
172.135 114.713 171.918 114.876 171.708 115.033 cv
171.559 115.144 171.406 115.259 171.279 115.364 cv
171.327 115.509 171.383 115.661 171.449 115.825 cv
171.617 115.825 171.812 115.814 172.002 115.803 cv
172.258 115.789 172.524 115.774 172.728 115.786 cv
172.768 115.789 li
172.785 115.825 li
172.861 115.981 172.948 116.141 173.041 116.299 cv
173.061 116.334 li
173.041 116.368 li
172.937 116.548 172.776 116.764 172.62 116.973 cv
172.509 117.122 172.394 117.277 172.302 117.415 cv
172.393 117.546 172.491 117.679 172.594 117.81 cv
172.754 117.762 172.937 117.697 173.114 117.634 cv
173.358 117.547 173.611 117.458 173.811 117.412 cv
173.85 117.403 li
173.877 117.432 li
173.996 117.564 174.124 117.693 174.255 117.816 cv
174.284 117.844 li
174.275 117.882 li
174.226 118.082 174.132 118.334 174.042 118.577 cv
173.976 118.753 173.909 118.934 173.859 119.093 cv
173.988 119.197 174.119 119.297 174.251 119.391 cv
174.391 119.301 174.547 119.188 174.699 119.078 cv
174.91 118.926 175.127 118.769 175.308 118.668 cv
175.342 118.649 li
175.376 118.669 li
175.531 118.763 175.689 118.852 175.847 118.932 cv
175.883 118.95 li
175.885 118.99 li
175.894 119.194 175.875 119.46 175.856 119.718 cv
175.843 119.906 175.829 120.101 175.826 120.269 cv
175.983 120.335 176.134 120.393 176.284 120.445 cv
176.392 120.32 176.51 120.168 176.625 120.02 cv
176.784 119.813 176.95 119.6 177.095 119.452 cv
177.123 119.423 li
177.161 119.434 li
177.347 119.483 177.519 119.523 177.687 119.553 cv
177.726 119.561 li
177.739 119.598 li
177.805 119.791 177.862 120.05 177.917 120.301 cv
177.957 120.486 177.999 120.678 178.044 120.84 cv
178.219 120.86 178.38 120.873 178.535 120.88 cv
178.602 120.731 178.671 120.555 178.738 120.383 cv
178.834 120.137 178.933 119.883 179.032 119.699 cv
179.051 119.664 li
179.09 119.663 li
179.271 119.658 179.454 119.647 179.634 119.628 cv
179.674 119.624 li
179.697 119.656 li
179.818 119.827 179.949 120.066 180.075 120.297 cv
180.163 120.459 180.254 120.625 180.34 120.765 cv
180.493 120.738 180.651 120.704 180.822 120.663 cv
180.846 120.496 180.863 120.3 180.88 120.11 cv
180.902 119.855 180.925 119.592 180.966 119.392 cv
180.974 119.353 li
181.012 119.341 li
181.177 119.288 181.342 119.227 181.518 119.155 cv
181.555 119.14 li
181.586 119.165 li
181.75 119.293 181.941 119.484 182.126 119.669 cv
182.258 119.8 182.394 119.936 182.517 120.046 cv
182.658 119.976 182.8 119.899 182.949 119.813 cv
182.925 119.648 182.886 119.456 182.849 119.271 cv
182.798 119.018 182.745 118.757 182.728 118.552 cv
182.725 118.513 li
182.758 118.49 li
182.906 118.389 183.052 118.282 183.191 118.17 cv
183.222 118.145 li
183.259 118.16 li
183.451 118.237 183.687 118.365 183.915 118.489 cv
184.08 118.579 184.25 118.671 184.4 118.743 cv
184.518 118.633 184.636 118.517 184.75 118.398 cv
184.68 118.246 184.59 118.075 184.503 117.909 cv
184.382 117.679 184.257 117.441 184.183 117.249 cv
184.169 117.212 li
184.194 117.181 li
184.309 117.041 184.419 116.897 184.521 116.752 cv
184.544 116.719 li
184.584 116.723 li
184.788 116.743 185.05 116.8 185.303 116.855 cv
185.487 116.895 185.676 116.936 185.842 116.963 cv
185.927 116.821 186.007 116.677 186.081 116.534 cv
185.972 116.409 185.838 116.27 185.709 116.136 cv
185.528 115.949 185.34 115.755 185.214 115.59 cv
185.19 115.558 li
185.206 115.522 li
185.278 115.355 185.343 115.185 185.399 115.018 cv
185.412 114.98 li
185.451 114.973 li
185.652 114.935 185.917 114.916 186.173 114.898 cv
186.362 114.884 186.558 114.87 186.725 114.848 cv
186.769 114.677 186.805 114.52 186.834 114.37 cv
186.696 114.281 186.529 114.187 186.368 114.096 cv
186.139 113.967 185.903 113.833 185.735 113.71 cv
185.703 113.686 li
185.707 113.647 li
185.731 113.451 185.745 113.275 185.751 113.109 cv
185.753 113.069 li
185.789 113.051 li
185.969 112.959 186.215 112.867 186.453 112.778 cv
186.633 112.711 186.818 112.641 186.974 112.573 cv
186.972 112.49 186.969 112.406 186.964 112.323 cv
186.959 112.239 186.95 112.156 186.942 112.073 cv
186.779 112.025 186.587 111.98 186.4 111.936 cv
cp
f
253.087 97.2045 mo
253.091 97.3396 li
252.998 97.2771 li
252.227 96.7627 250.727 96.4937 249.721 96.5308 cv
249.686 96.5321 li
249.668 96.5006 li
249.54 96.2666 249.36 96.0615 249.148 95.9071 cv
249.083 95.8598 li
249.148 95.8129 li
249.807 95.3381 250.662 95.0353 251.494 94.9821 cv
251.871 94.958 252.224 94.9882 252.513 95.0694 cv
252.538 95.0764 li
252.549 95.0991 li
252.858 95.7071 253.037 96.3623 253.081 97.0462 cv
253.084 97.0992 253.086 97.1518 253.087 97.2045 cv
cp
252.844 98.917 mo
252.616 99.6157 252.228 100.268 251.721 100.804 cv
251.644 100.885 li
251.622 100.775 li
251.441 99.8666 250.57 98.6154 249.833 97.9305 cv
249.807 97.9061 li
249.817 97.8716 li
249.877 97.6662 249.901 97.4572 249.888 97.2504 cv
249.884 97.1996 249.878 97.1468 249.868 97.0843 cv
249.856 97.005 li
249.935 97.0178 li
251.281 97.2364 252.415 98.1152 252.84 98.8705 cv
252.852 98.8928 li
252.844 98.917 li
cp
250.383 101.791 mo
250.376 101.816 li
250.354 101.827 li
249.746 102.136 249.091 102.315 248.407 102.359 cv
248.351 102.362 248.296 102.364 248.241 102.365 cv
248.113 102.369 li
248.176 102.275 li
248.69 101.505 248.959 100.005 248.922 98.9994 cv
248.921 98.9636 li
248.952 98.9463 li
249.186 98.818 249.391 98.6382 249.546 98.4263 cv
249.593 98.3614 li
249.64 98.4265 li
250.438 99.5336 250.618 100.957 250.383 101.791 cv
cp
246.582 102.118 mo
246.56 102.13 li
246.536 102.122 li
245.837 101.894 245.185 101.506 244.649 100.999 cv
244.567 100.922 li
244.678 100.9 li
245.586 100.719 246.838 99.8482 247.522 99.1111 cv
247.547 99.0847 li
247.581 99.0948 li
247.842 99.1713 248.113 99.186 248.369 99.1464 cv
248.448 99.1341 li
248.435 99.2131 li
248.216 100.559 247.338 101.693 246.582 102.118 cv
cp
243.662 99.6613 mo
243.637 99.6544 li
243.626 99.6317 li
243.317 99.0241 243.138 98.369 243.094 97.6848 cv
243.091 97.6318 243.089 97.5791 243.087 97.5265 cv
243.083 97.3914 li
243.177 97.4539 li
243.948 97.9681 245.448 98.2372 246.453 98.2003 cv
246.489 98.1991 li
246.507 98.2305 li
246.635 98.4643 246.814 98.6695 247.027 98.8238 cv
247.092 98.8711 li
247.026 98.918 li
246.367 99.3928 245.513 99.6956 244.681 99.7488 cv
244.304 99.7729 243.951 99.7427 243.662 99.6613 cv
cp
243.33 95.8139 mo
243.559 95.1151 243.947 94.4628 244.454 93.9272 cv
244.531 93.8455 li
244.553 93.9559 li
244.734 94.8642 245.604 96.1155 246.342 96.8006 cv
246.368 96.825 li
246.358 96.8595 li
246.298 97.0647 246.274 97.2737 246.287 97.4806 cv
246.291 97.5368 246.298 97.592 246.306 97.6467 cv
246.319 97.7259 li
246.24 97.713 li
244.894 97.4944 243.759 96.6156 243.335 95.8604 cv
243.322 95.8382 li
243.33 95.8139 li
cp
245.791 92.9398 mo
245.798 92.9153 li
245.821 92.9037 li
246.429 92.5947 247.084 92.4158 247.768 92.3721 cv
247.829 92.3682 247.889 92.3666 247.949 92.3651 cv
248.061 92.3622 li
247.999 92.4555 li
247.485 93.2259 247.216 94.7263 247.252 95.7317 cv
247.254 95.7676 li
247.222 95.7848 li
246.989 95.9128 246.783 96.0926 246.629 96.3045 cv
246.582 96.3695 li
246.535 96.3043 li
245.737 95.1975 245.557 93.7739 245.791 92.9398 cv
cp
248.957 97.31 mo
248.972 97.5424 248.896 97.7666 248.742 97.9414 cv
248.588 98.1162 248.376 98.2207 248.143 98.2355 cv
247.911 98.2504 247.686 98.1739 247.511 98.02 cv
247.151 97.7024 247.115 97.1505 247.433 96.7896 cv
247.587 96.6148 247.799 96.5104 248.032 96.4955 cv
248.264 96.4807 248.488 96.5572 248.663 96.711 cv
248.838 96.8648 248.943 97.0775 248.957 97.31 cv
cp
249.592 92.6132 mo
249.615 92.6006 li
249.639 92.6086 li
250.337 92.8365 250.99 93.2249 251.526 93.7315 cv
251.607 93.8088 li
251.497 93.8309 li
250.588 94.0123 249.337 94.8829 248.652 95.6199 cv
248.628 95.6463 li
248.593 95.6362 li
248.388 95.5761 248.179 95.5523 247.972 95.5656 cv
247.921 95.5688 247.867 95.575 247.806 95.5846 cv
247.727 95.597 li
247.74 95.5178 li
247.958 94.1715 248.837 93.0375 249.592 92.6132 cv
cp
254.462 96.5976 mo
254.251 96.548 254.032 96.4968 253.869 96.4388 cv
253.837 96.4274 li
253.832 96.3937 li
253.808 96.2537 253.777 96.1065 253.736 95.9436 cv
253.728 95.9107 li
253.752 95.8873 li
253.881 95.7645 254.067 95.6255 254.247 95.4911 cv
254.373 95.3966 254.503 95.2991 254.611 95.2093 cv
254.57 95.0853 254.522 94.9561 254.466 94.8164 cv
254.322 94.8164 254.156 94.8257 253.994 94.8347 cv
253.775 94.8469 253.549 94.8595 253.375 94.8494 cv
253.341 94.8474 li
253.326 94.8168 li
253.26 94.6813 253.187 94.545 253.108 94.4118 cv
253.091 94.3826 li
253.108 94.3531 li
253.196 94.2003 253.333 94.0162 253.466 93.8381 cv
253.562 93.7102 253.66 93.5783 253.738 93.4604 cv
253.661 93.3487 253.577 93.2357 253.489 93.1236 cv
253.352 93.1639 253.196 93.2195 253.045 93.2734 cv
252.837 93.3472 252.622 93.4236 252.451 93.463 cv
252.418 93.4707 li
252.395 93.4456 li
252.292 93.3322 252.183 93.2221 252.072 93.1182 cv
252.047 93.0949 li
252.055 93.0618 li
252.097 92.8911 252.177 92.6768 252.254 92.4694 cv
252.31 92.3192 252.368 92.1644 252.41 92.0287 cv
252.301 91.9405 252.189 91.8552 252.076 91.7744 cv
251.957 91.8513 251.823 91.9479 251.693 92.0417 cv
251.514 92.1713 251.328 92.3055 251.175 92.3915 cv
251.145 92.4081 li
251.116 92.3904 li
250.984 92.3098 250.849 92.2345 250.714 92.1663 cv
250.684 92.1509 li
250.682 92.1169 li
250.675 91.9423 250.691 91.7156 250.707 91.4963 cv
250.718 91.3352 250.73 91.1692 250.732 91.026 cv
250.6 90.9705 250.469 90.9202 250.342 90.8758 cv
250.249 90.9826 250.149 91.1123 250.052 91.238 cv
249.915 91.4143 249.774 91.5965 249.65 91.7228 cv
249.626 91.747 li
249.593 91.7383 li
249.435 91.696 249.289 91.6626 249.145 91.6361 cv
249.111 91.63 li
249.1 91.5977 li
249.044 91.4334 248.996 91.2131 248.95 90.9999 cv
248.915 90.8411 248.879 90.6774 248.84 90.5385 cv
248.691 90.522 248.553 90.5108 248.422 90.5043 cv
248.364 90.6316 248.305 90.7826 248.248 90.9291 cv
248.167 91.1383 248.082 91.3547 247.998 91.5121 cv
247.982 91.5421 li
247.948 91.5429 li
247.794 91.5467 247.638 91.5567 247.484 91.5725 cv
247.45 91.5761 li
247.431 91.5484 li
247.327 91.4028 247.216 91.1987 247.108 91.0013 cv
247.033 90.8636 246.955 90.7216 246.882 90.6028 cv
246.752 90.6259 246.617 90.6546 246.471 90.6899 cv
246.451 90.8326 246.436 90.9995 246.422 91.1613 cv
246.403 91.3788 246.383 91.6036 246.348 91.7736 cv
246.341 91.8071 li
246.309 91.8175 li
246.168 91.8624 246.027 91.9143 245.877 91.9759 cv
245.845 91.9888 li
245.819 91.9678 li
245.68 91.8581 245.516 91.6952 245.359 91.5377 cv
245.246 91.4255 245.13 91.3097 245.025 91.2155 cv
244.905 91.2754 244.784 91.3407 244.657 91.4144 cv
244.677 91.5562 244.71 91.7193 244.742 91.8774 cv
244.786 92.0931 244.831 92.3159 244.845 92.4901 cv
244.848 92.524 li
244.82 92.5431 li
244.694 92.6284 244.57 92.7204 244.45 92.8163 cv
244.424 92.8376 li
244.392 92.8249 li
244.229 92.7592 244.028 92.6498 243.833 92.5439 cv
243.692 92.4675 243.548 92.3886 243.419 92.3277 cv
243.318 92.4212 243.218 92.5201 243.121 92.6223 cv
243.18 92.7515 243.257 92.8975 243.331 93.0392 cv
243.434 93.2351 243.54 93.4378 243.604 93.6019 cv
243.616 93.6336 li
243.594 93.6598 li
243.496 93.7792 243.402 93.9025 243.316 94.0259 cv
243.296 94.0538 li
243.262 94.0504 li
243.088 94.0331 242.865 93.9846 242.649 93.9377 cv
242.492 93.9036 242.33 93.8684 242.189 93.8458 cv
242.117 93.9677 242.048 94.0905 241.985 94.2119 cv
242.078 94.3188 242.192 94.4371 242.303 94.5518 cv
242.458 94.7115 242.617 94.8766 242.724 95.0168 cv
242.745 95.0438 li
242.732 95.0751 li
242.67 95.2183 242.615 95.3628 242.567 95.5045 cv
242.556 95.5368 li
242.523 95.5432 li
242.351 95.5755 242.125 95.5918 241.906 95.6076 cv
241.745 95.6192 241.578 95.6313 241.436 95.6495 cv
241.398 95.7945 241.368 95.9287 241.343 96.0576 cv
241.461 96.1334 241.603 96.2138 241.741 96.2918 cv
241.936 96.4019 242.137 96.5157 242.28 96.6208 cv
242.308 96.6408 li
242.304 96.6745 li
242.284 96.8413 242.272 96.9914 242.266 97.1332 cv
242.265 97.1673 li
242.234 97.1828 li
242.081 97.261 241.87 97.3396 241.667 97.4157 cv
241.514 97.473 241.356 97.532 241.223 97.5904 cv
241.225 97.6649 241.228 97.7342 241.232 97.8038 cv
241.237 97.8751 241.243 97.9459 241.251 98.0165 cv
241.39 98.0576 241.554 98.0962 241.713 98.1335 cv
241.925 98.183 242.143 98.2343 242.305 98.2921 cv
242.338 98.3036 li
242.343 98.3373 li
242.367 98.4772 242.398 98.6245 242.439 98.7875 cv
242.447 98.8204 li
242.423 98.8437 li
242.294 98.9661 242.109 99.1047 241.929 99.2387 cv
241.803 99.3336 241.672 99.4314 241.564 99.5216 cv
241.605 99.6453 241.652 99.7744 241.708 99.9143 cv
241.852 99.9143 242.019 99.9051 242.18 99.8961 cv
242.399 99.8839 242.626 99.8713 242.8 99.8815 cv
242.834 99.8835 li
242.849 99.9141 li
242.914 100.048 242.987 100.184 243.067 100.319 cv
243.084 100.348 li
243.067 100.378 li
242.978 100.531 242.841 100.715 242.708 100.894 cv
242.613 101.021 242.515 101.153 242.436 101.271 cv
242.514 101.383 242.598 101.496 242.686 101.607 cv
242.822 101.567 242.978 101.512 243.129 101.458 cv
243.337 101.384 243.553 101.307 243.724 101.268 cv
243.757 101.26 li
243.78 101.285 li
243.882 101.397 243.99 101.508 244.103 101.613 cv
244.127 101.636 li
244.119 101.669 li
244.077 101.84 243.998 102.055 243.92 102.262 cv
243.865 102.412 243.807 102.567 243.765 102.702 cv
243.874 102.791 243.986 102.876 244.099 102.957 cv
244.218 102.88 244.351 102.783 244.481 102.69 cv
244.661 102.56 244.846 102.425 245 102.34 cv
245.03 102.323 li
245.059 102.341 li
245.191 102.421 245.326 102.496 245.461 102.565 cv
245.491 102.58 li
245.493 102.614 li
245.5 102.789 245.484 103.015 245.468 103.235 cv
245.457 103.396 245.445 103.562 245.442 103.705 cv
245.576 103.761 245.705 103.811 245.833 103.855 cv
245.926 103.748 246.026 103.619 246.123 103.493 cv
246.26 103.317 246.401 103.134 246.525 103.008 cv
246.549 102.984 li
246.581 102.993 li
246.74 103.035 246.886 103.068 247.03 103.095 cv
247.063 103.101 li
247.074 103.133 li
247.13 103.298 247.179 103.519 247.226 103.732 cv
247.26 103.891 247.296 104.054 247.335 104.192 cv
247.484 104.209 247.621 104.22 247.753 104.227 cv
247.81 104.099 247.869 103.949 247.926 103.802 cv
248.008 103.593 248.093 103.376 248.177 103.219 cv
248.193 103.189 li
248.227 103.188 li
248.381 103.184 248.537 103.174 248.691 103.158 cv
248.724 103.155 li
248.744 103.182 li
248.848 103.328 248.959 103.532 249.067 103.729 cv
249.142 103.867 249.22 104.009 249.293 104.128 cv
249.423 104.105 249.558 104.076 249.703 104.041 cv
249.724 103.898 249.739 103.732 249.753 103.57 cv
249.772 103.352 249.792 103.127 249.827 102.957 cv
249.833 102.924 li
249.866 102.913 li
250.006 102.869 250.148 102.817 250.298 102.755 cv
250.329 102.742 li
250.356 102.763 li
250.495 102.873 250.658 103.036 250.816 103.193 cv
250.929 103.305 251.045 103.421 251.15 103.515 cv
251.27 103.455 251.391 103.39 251.518 103.317 cv
251.497 103.175 251.465 103.012 251.433 102.854 cv
251.389 102.638 251.344 102.415 251.33 102.241 cv
251.327 102.207 li
251.355 102.188 li
251.481 102.102 251.606 102.01 251.725 101.914 cv
251.751 101.893 li
251.783 101.906 li
251.946 101.972 252.147 102.081 252.342 102.187 cv
252.483 102.263 252.627 102.342 252.756 102.403 cv
252.857 102.31 252.957 102.211 253.054 102.109 cv
252.995 101.98 252.918 101.834 252.844 101.692 cv
252.741 101.496 252.634 101.293 252.571 101.129 cv
252.559 101.098 li
252.58 101.071 li
252.679 100.952 252.772 100.829 252.859 100.705 cv
252.879 100.677 li
252.912 100.681 li
253.087 100.698 253.31 100.746 253.526 100.793 cv
253.683 100.827 253.845 100.863 253.985 100.885 cv
254.058 100.764 254.127 100.641 254.19 100.519 cv
254.097 100.412 253.983 100.294 253.872 100.18 cv
253.718 100.02 253.558 99.8547 253.45 99.7141 cv
253.43 99.6871 li
253.443 99.6559 li
253.504 99.5135 253.56 99.369 253.608 99.2264 cv
253.619 99.194 li
253.652 99.1879 li
253.824 99.1556 254.049 99.1393 254.268 99.1235 cv
254.43 99.1119 254.596 99.0998 254.739 99.0816 cv
254.777 98.9355 254.807 98.8013 254.832 98.6735 cv
254.714 98.5978 254.572 98.5175 254.434 98.4397 cv
254.239 98.3295 254.038 98.2155 253.894 98.1102 cv
253.867 98.0901 li
253.871 98.0564 li
253.891 97.8897 253.903 97.7396 253.909 97.5978 cv
253.91 97.5637 li
253.94 97.5482 li
254.094 97.4701 254.304 97.3915 254.507 97.3156 cv
254.661 97.2581 254.818 97.199 254.951 97.1405 cv
254.949 97.0696 254.947 96.9985 254.943 96.9272 cv
254.938 96.8559 254.931 96.7851 254.924 96.7144 cv
254.785 96.6733 254.621 96.6349 254.462 96.5976 cv
cp
f
183.996 260.985 mo
184 261.12 li
183.906 261.057 li
183.135 260.543 181.635 260.274 180.63 260.311 cv
180.594 260.312 li
180.577 260.281 li
180.449 260.047 180.269 259.842 180.057 259.688 cv
179.992 259.64 li
180.057 259.593 li
180.716 259.119 181.571 258.816 182.403 258.763 cv
182.78 258.738 183.132 258.769 183.422 258.85 cv
183.446 258.857 li
183.458 258.879 li
183.767 259.487 183.946 260.143 183.989 260.827 cv
183.993 260.88 183.994 260.932 183.996 260.985 cv
cp
183.753 262.697 mo
183.525 263.396 183.136 264.048 182.63 264.584 cv
182.553 264.666 li
182.531 264.555 li
182.349 263.647 181.479 262.396 180.742 261.711 cv
180.715 261.686 li
180.725 261.652 li
180.786 261.447 180.809 261.238 180.796 261.031 cv
180.793 260.98 180.787 260.927 180.777 260.865 cv
180.764 260.785 li
180.844 260.798 li
182.19 261.017 183.324 261.896 183.748 262.651 cv
183.761 262.673 li
183.753 262.697 li
cp
181.292 265.571 mo
181.285 265.596 li
181.262 265.608 li
180.654 265.917 179.999 266.096 179.315 266.139 cv
179.26 266.143 179.205 266.144 179.15 266.146 cv
179.022 266.149 li
179.084 266.056 li
179.599 265.285 179.868 263.785 179.831 262.78 cv
179.829 262.744 li
179.861 262.727 li
180.095 262.598 180.3 262.419 180.454 262.207 cv
180.502 262.142 li
180.548 262.207 li
181.346 263.314 181.526 264.737 181.292 265.571 cv
cp
177.491 265.898 mo
177.469 265.911 li
177.444 265.903 li
176.746 265.675 176.093 265.286 175.558 264.78 cv
175.476 264.702 li
175.586 264.681 li
176.495 264.499 177.746 263.629 178.431 262.891 cv
178.455 262.865 li
178.49 262.875 li
178.751 262.952 179.021 262.966 179.277 262.927 cv
179.356 262.915 li
179.343 262.993 li
179.125 264.34 178.246 265.474 177.491 265.898 cv
cp
174.57 263.442 mo
174.546 263.435 li
174.534 263.412 li
174.225 262.804 174.046 262.149 174.002 261.465 cv
173.999 261.412 173.997 261.359 173.996 261.307 cv
173.992 261.172 li
174.086 261.234 li
174.856 261.748 176.356 262.018 177.362 261.981 cv
177.398 261.979 li
177.415 262.011 li
177.543 262.245 177.723 262.45 177.935 262.604 cv
178 262.652 li
177.935 262.698 li
177.276 263.173 176.421 263.476 175.589 263.529 cv
175.212 263.553 174.86 263.523 174.57 263.442 cv
cp
174.239 259.594 mo
174.467 258.896 174.855 258.243 175.362 257.708 cv
175.439 257.626 li
175.461 257.736 li
175.642 258.645 176.513 259.896 177.25 260.581 cv
177.277 260.605 li
177.266 260.64 li
177.206 260.845 177.183 261.054 177.196 261.261 cv
177.199 261.317 177.206 261.372 177.215 261.427 cv
177.227 261.506 li
177.148 261.493 li
175.802 261.275 174.668 260.396 174.244 259.641 cv
174.231 259.619 li
174.239 259.594 li
cp
176.7 256.72 mo
176.707 256.696 li
176.73 256.684 li
177.338 256.375 177.993 256.196 178.677 256.152 cv
178.737 256.149 178.797 256.147 178.857 256.145 cv
178.97 256.143 li
178.907 256.236 li
178.393 257.006 178.124 258.507 178.161 259.512 cv
178.162 259.548 li
178.131 259.565 li
177.897 259.693 177.692 259.873 177.538 260.085 cv
177.49 260.15 li
177.443 260.085 li
176.646 258.978 176.466 257.554 176.7 256.72 cv
cp
179.866 261.09 mo
179.881 261.323 179.804 261.547 179.651 261.722 cv
179.497 261.897 179.284 262.001 179.052 262.016 cv
178.819 262.031 178.595 261.954 178.42 261.8 cv
178.059 261.483 178.024 260.931 178.341 260.57 cv
178.495 260.395 178.708 260.291 178.94 260.276 cv
179.173 260.261 179.397 260.338 179.572 260.491 cv
179.747 260.645 179.851 260.858 179.866 261.09 cv
cp
180.501 256.394 mo
180.523 256.381 li
180.547 256.389 li
181.246 256.617 181.898 257.005 182.434 257.512 cv
182.516 257.589 li
182.406 257.611 li
181.496 257.793 180.245 258.663 179.561 259.4 cv
179.536 259.427 li
179.502 259.417 li
179.297 259.356 179.088 259.333 178.881 259.346 cv
178.83 259.349 178.776 259.355 178.715 259.365 cv
178.635 259.377 li
178.648 259.298 li
178.867 257.952 179.746 256.818 180.501 256.394 cv
cp
185.37 260.378 mo
185.159 260.328 184.941 260.277 184.778 260.219 cv
184.746 260.208 li
184.74 260.174 li
184.717 260.034 184.685 259.887 184.644 259.724 cv
184.636 259.691 li
184.661 259.668 li
184.79 259.545 184.975 259.406 185.155 259.272 cv
185.281 259.177 185.412 259.079 185.519 258.99 cv
185.478 258.866 185.431 258.736 185.375 258.597 cv
185.231 258.597 185.064 258.606 184.902 258.615 cv
184.684 258.627 184.457 258.64 184.284 258.63 cv
184.25 258.628 li
184.235 258.597 li
184.169 258.462 184.095 258.325 184.016 258.192 cv
183.999 258.163 li
184.016 258.133 li
184.105 257.981 184.242 257.797 184.375 257.618 cv
184.47 257.491 184.569 257.359 184.647 257.241 cv
184.57 257.129 184.486 257.016 184.398 256.904 cv
184.261 256.944 184.105 257 183.953 257.054 cv
183.745 257.128 183.53 257.204 183.36 257.243 cv
183.326 257.251 li
183.304 257.226 li
183.2 257.113 183.092 257.002 182.981 256.899 cv
182.956 256.875 li
182.964 256.842 li
183.006 256.671 183.086 256.457 183.163 256.25 cv
183.219 256.1 183.276 255.945 183.318 255.809 cv
183.21 255.721 183.098 255.636 182.985 255.555 cv
182.865 255.632 182.732 255.728 182.602 255.822 cv
182.422 255.952 182.237 256.086 182.083 256.172 cv
182.053 256.188 li
182.024 256.171 li
181.892 256.09 181.757 256.015 181.623 255.947 cv
181.592 255.931 li
181.591 255.897 li
181.583 255.723 181.599 255.496 181.615 255.277 cv
181.627 255.116 181.638 254.95 181.641 254.806 cv
181.508 254.751 181.377 254.701 181.25 254.656 cv
181.158 254.763 181.057 254.893 180.96 255.018 cv
180.824 255.195 180.683 255.377 180.559 255.503 cv
180.535 255.527 li
180.502 255.519 li
180.344 255.476 180.197 255.443 180.053 255.416 cv
180.02 255.41 li
180.009 255.378 li
179.953 255.214 179.905 254.993 179.858 254.78 cv
179.823 254.621 179.787 254.458 179.749 254.319 cv
179.599 254.302 179.462 254.291 179.33 254.285 cv
179.273 254.412 179.214 254.563 179.157 254.709 cv
179.075 254.919 178.991 255.135 178.906 255.293 cv
178.891 255.322 li
178.857 255.323 li
178.702 255.327 178.546 255.337 178.393 255.353 cv
178.359 255.356 li
178.339 255.329 li
178.236 255.183 178.124 254.979 178.016 254.782 cv
177.941 254.644 177.863 254.502 177.79 254.383 cv
177.661 254.406 177.526 254.435 177.38 254.47 cv
177.359 254.613 177.344 254.78 177.33 254.942 cv
177.311 255.159 177.291 255.384 177.257 255.554 cv
177.25 255.587 li
177.217 255.598 li
177.077 255.643 176.936 255.695 176.785 255.756 cv
176.754 255.769 li
176.727 255.748 li
176.588 255.638 176.425 255.476 176.267 255.318 cv
176.155 255.206 176.039 255.09 175.934 254.996 cv
175.814 255.056 175.693 255.121 175.565 255.195 cv
175.586 255.337 175.619 255.5 175.651 255.658 cv
175.694 255.873 175.739 256.096 175.754 256.271 cv
175.757 256.304 li
175.729 256.324 li
175.603 256.409 175.478 256.501 175.359 256.597 cv
175.332 256.618 li
175.301 256.605 li
175.137 256.54 174.936 256.43 174.741 256.324 cv
174.601 256.248 174.456 256.169 174.328 256.108 cv
174.227 256.202 174.127 256.3 174.029 256.403 cv
174.088 256.532 174.165 256.678 174.239 256.82 cv
174.342 257.016 174.449 257.218 174.512 257.382 cv
174.524 257.414 li
174.503 257.44 li
174.404 257.56 174.311 257.683 174.224 257.806 cv
174.205 257.834 li
174.171 257.831 li
173.996 257.813 173.773 257.765 173.557 257.718 cv
173.4 257.684 173.239 257.649 173.098 257.626 cv
173.025 257.748 172.956 257.871 172.894 257.992 cv
172.986 258.099 173.101 258.217 173.212 258.332 cv
173.366 258.492 173.526 258.657 173.633 258.797 cv
173.654 258.824 li
173.64 258.855 li
173.579 258.999 173.523 259.143 173.475 259.285 cv
173.465 259.317 li
173.431 259.324 li
173.26 259.356 173.033 259.372 172.815 259.388 cv
172.653 259.4 172.487 259.412 172.344 259.43 cv
172.307 259.575 172.276 259.709 172.251 259.838 cv
172.37 259.914 172.512 259.994 172.65 260.072 cv
172.844 260.182 173.046 260.296 173.189 260.401 cv
173.216 260.421 li
173.212 260.455 li
173.193 260.622 173.18 260.772 173.175 260.914 cv
173.173 260.948 li
173.143 260.963 li
172.989 261.041 172.779 261.12 172.576 261.196 cv
172.422 261.253 172.265 261.312 172.132 261.371 cv
172.134 261.445 172.136 261.515 172.141 261.584 cv
172.145 261.656 172.152 261.726 172.159 261.797 cv
172.298 261.838 172.463 261.877 172.622 261.914 cv
172.833 261.963 173.051 262.015 173.214 262.073 cv
173.246 262.084 li
173.252 262.118 li
173.275 262.258 173.307 262.405 173.347 262.568 cv
173.356 262.601 li
173.331 262.624 li
173.202 262.746 173.017 262.885 172.838 263.019 cv
172.711 263.114 172.58 263.212 172.472 263.302 cv
172.513 263.426 172.561 263.555 172.617 263.695 cv
172.761 263.695 172.927 263.685 173.089 263.676 cv
173.308 263.664 173.534 263.652 173.708 263.662 cv
173.742 263.664 li
173.757 263.694 li
173.822 263.828 173.896 263.964 173.975 264.1 cv
173.992 264.129 li
173.975 264.158 li
173.887 264.311 173.749 264.496 173.616 264.674 cv
173.521 264.802 173.423 264.933 173.345 265.051 cv
173.422 265.163 173.506 265.276 173.594 265.388 cv
173.731 265.347 173.887 265.292 174.038 265.238 cv
174.246 265.164 174.461 265.088 174.632 265.048 cv
174.665 265.041 li
174.688 265.066 li
174.79 265.178 174.899 265.288 175.011 265.393 cv
175.036 265.417 li
175.028 265.45 li
174.986 265.62 174.906 265.835 174.829 266.043 cv
174.773 266.192 174.716 266.347 174.673 266.483 cv
174.783 266.571 174.895 266.657 175.007 266.737 cv
175.126 266.66 175.26 266.564 175.39 266.47 cv
175.569 266.34 175.755 266.206 175.909 266.12 cv
175.938 266.103 li
175.967 266.121 li
176.099 266.201 176.234 266.277 176.369 266.345 cv
176.4 266.36 li
176.401 266.394 li
176.409 266.569 176.392 266.796 176.377 267.015 cv
176.365 267.176 176.353 267.342 176.351 267.485 cv
176.485 267.541 176.613 267.591 176.742 267.636 cv
176.834 267.529 176.935 267.399 177.032 267.273 cv
177.168 267.097 177.309 266.915 177.433 266.788 cv
177.457 266.764 li
177.49 266.773 li
177.648 266.815 177.795 266.849 177.938 266.875 cv
177.972 266.881 li
177.983 266.914 li
178.039 267.078 178.087 267.299 178.134 267.513 cv
178.169 267.671 178.205 267.834 178.243 267.973 cv
178.392 267.989 178.53 268.001 178.661 268.007 cv
178.719 267.88 178.778 267.729 178.835 267.583 cv
178.917 267.373 179.001 267.157 179.085 266.999 cv
179.101 266.969 li
179.135 266.968 li
179.29 266.965 179.446 266.955 179.599 266.939 cv
179.633 266.935 li
179.653 266.963 li
179.756 267.108 179.867 267.312 179.975 267.509 cv
180.05 267.647 180.128 267.79 180.202 267.909 cv
180.331 267.885 180.466 267.857 180.612 267.821 cv
180.633 267.679 180.647 267.512 180.661 267.35 cv
180.681 267.133 180.7 266.908 180.735 266.738 cv
180.742 266.704 li
180.774 266.694 li
180.915 266.649 181.056 266.597 181.206 266.535 cv
181.238 266.522 li
181.264 266.544 li
181.404 266.653 181.567 266.816 181.725 266.974 cv
181.837 267.086 181.953 267.202 182.058 267.296 cv
182.179 267.235 182.3 267.17 182.427 267.097 cv
182.406 266.955 182.373 266.792 182.341 266.634 cv
182.298 266.419 182.253 266.195 182.238 266.021 cv
182.235 265.987 li
182.263 265.968 li
182.39 265.882 182.514 265.79 182.633 265.695 cv
182.66 265.674 li
182.691 265.686 li
182.855 265.752 183.056 265.862 183.251 265.967 cv
183.391 266.044 183.536 266.123 183.664 266.184 cv
183.765 266.09 183.865 265.991 183.963 265.889 cv
183.903 265.76 183.827 265.614 183.752 265.472 cv
183.649 265.276 183.543 265.074 183.48 264.91 cv
183.467 264.878 li
183.489 264.852 li
183.587 264.733 183.681 264.609 183.768 264.486 cv
183.787 264.458 li
183.821 264.461 li
183.995 264.478 184.219 264.527 184.434 264.574 cv
184.591 264.608 184.753 264.643 184.894 264.665 cv
184.967 264.544 185.035 264.421 185.098 264.3 cv
185.005 264.193 184.891 264.075 184.781 263.96 cv
184.626 263.8 184.466 263.635 184.359 263.495 cv
184.338 263.467 li
184.352 263.436 li
184.413 263.294 184.468 263.149 184.517 263.007 cv
184.527 262.974 li
184.561 262.968 li
184.732 262.936 184.958 262.92 185.176 262.904 cv
185.338 262.892 185.505 262.88 185.647 262.862 cv
185.685 262.716 185.716 262.582 185.741 262.454 cv
185.622 262.378 185.48 262.298 185.343 262.22 cv
185.148 262.11 184.946 261.996 184.803 261.891 cv
184.776 261.87 li
184.78 261.837 li
184.799 261.67 184.812 261.52 184.817 261.378 cv
184.818 261.344 li
184.849 261.329 li
185.003 261.25 185.213 261.172 185.416 261.096 cv
185.569 261.039 185.727 260.979 185.86 260.921 cv
185.858 260.85 185.856 260.779 185.851 260.708 cv
185.847 260.636 185.84 260.565 185.833 260.495 cv
185.694 260.454 185.53 260.415 185.37 260.378 cv
cp
f
266.681 276.718 mo
266.686 276.878 li
266.575 276.804 li
265.66 276.194 263.88 275.874 262.688 275.918 cv
262.645 275.92 li
262.625 275.883 li
262.473 275.605 262.259 275.362 262.008 275.178 cv
261.931 275.122 li
262.008 275.067 li
262.79 274.503 263.804 274.144 264.791 274.081 cv
265.239 274.052 265.657 274.088 266 274.185 cv
266.029 274.193 li
266.043 274.22 li
266.409 274.941 266.622 275.718 266.674 276.53 cv
266.678 276.593 266.679 276.655 266.681 276.718 cv
cp
266.393 278.749 mo
266.122 279.578 265.661 280.352 265.06 280.988 cv
264.969 281.085 li
264.943 280.954 li
264.728 279.876 263.695 278.392 262.82 277.579 cv
262.789 277.55 li
262.801 277.509 li
262.872 277.265 262.901 277.017 262.885 276.772 cv
262.881 276.712 262.874 276.649 262.862 276.575 cv
262.847 276.481 li
262.941 276.496 li
264.538 276.755 265.884 277.798 266.387 278.694 cv
266.402 278.721 li
266.393 278.749 li
cp
263.473 282.159 mo
263.465 282.188 li
263.438 282.202 li
262.717 282.569 261.94 282.781 261.128 282.833 cv
261.062 282.837 260.997 282.839 260.932 282.841 cv
260.78 282.845 li
260.854 282.734 li
261.464 281.82 261.784 280.04 261.74 278.847 cv
261.738 278.805 li
261.775 278.784 li
262.053 278.632 262.296 278.419 262.479 278.167 cv
262.535 278.09 li
262.591 278.168 li
263.537 279.481 263.751 281.17 263.473 282.159 cv
cp
258.964 282.547 mo
258.937 282.562 li
258.909 282.552 li
258.079 282.282 257.305 281.821 256.67 281.22 cv
256.573 281.128 li
256.704 281.102 li
257.782 280.887 259.267 279.854 260.079 278.98 cv
260.108 278.948 li
260.149 278.96 li
260.458 279.051 260.779 279.069 261.083 279.022 cv
261.177 279.007 li
261.162 279.101 li
260.902 280.698 259.86 282.043 258.964 282.547 cv
cp
255.499 279.632 mo
255.469 279.624 li
255.456 279.597 li
255.089 278.876 254.877 278.099 254.825 277.287 cv
254.821 277.225 254.819 277.162 254.817 277.1 cv
254.813 276.939 li
254.924 277.014 li
255.838 277.624 257.618 277.943 258.811 277.899 cv
258.853 277.898 li
258.874 277.935 li
259.026 278.212 259.239 278.456 259.491 278.639 cv
259.568 278.695 li
259.49 278.751 li
258.709 279.314 257.694 279.673 256.708 279.736 cv
256.26 279.765 255.842 279.729 255.499 279.632 cv
cp
255.105 275.068 mo
255.376 274.239 255.837 273.465 256.438 272.829 cv
256.53 272.733 li
256.556 272.863 li
256.77 273.941 257.803 275.426 258.678 276.238 cv
258.709 276.267 li
258.697 276.308 li
258.626 276.552 258.598 276.8 258.614 277.045 cv
258.618 277.112 258.626 277.177 258.636 277.242 cv
258.651 277.336 li
258.557 277.321 li
256.96 277.062 255.615 276.019 255.111 275.123 cv
255.096 275.097 li
255.105 275.068 li
cp
258.025 271.658 mo
258.033 271.629 li
258.06 271.615 li
258.782 271.249 259.559 271.036 260.37 270.984 cv
260.442 270.98 260.514 270.978 260.585 270.976 cv
260.718 270.973 li
260.644 271.083 li
260.034 271.997 259.715 273.777 259.759 274.97 cv
259.76 275.013 li
259.723 275.033 li
259.446 275.185 259.202 275.398 259.019 275.65 cv
258.963 275.727 li
258.907 275.65 li
257.961 274.336 257.747 272.648 258.025 271.658 cv
cp
261.781 276.843 mo
261.799 277.119 261.708 277.385 261.526 277.592 cv
261.344 277.799 261.091 277.923 260.815 277.941 cv
260.54 277.958 260.273 277.868 260.066 277.685 cv
259.638 277.308 259.596 276.654 259.973 276.225 cv
260.155 276.018 260.408 275.894 260.683 275.877 cv
260.959 275.859 261.225 275.95 261.432 276.132 cv
261.64 276.315 261.764 276.567 261.781 276.843 cv
cp
262.535 271.27 mo
262.561 271.256 li
262.59 271.265 li
263.419 271.535 264.193 271.996 264.828 272.597 cv
264.925 272.689 li
264.795 272.715 li
263.716 272.93 262.231 273.963 261.419 274.838 cv
261.39 274.869 li
261.35 274.857 li
261.106 274.786 260.858 274.758 260.613 274.773 cv
260.552 274.777 260.488 274.784 260.416 274.796 cv
260.322 274.811 li
260.337 274.717 li
260.596 273.119 261.639 271.774 262.535 271.27 cv
cp
268.312 275.998 mo
268.061 275.939 267.802 275.878 267.609 275.809 cv
267.571 275.796 li
267.564 275.756 li
267.536 275.59 267.499 275.415 267.451 275.222 cv
267.441 275.183 li
267.47 275.155 li
267.623 275.009 267.843 274.844 268.057 274.685 cv
268.206 274.573 268.361 274.457 268.489 274.351 cv
268.44 274.203 268.383 274.05 268.317 273.884 cv
268.146 273.884 267.948 273.895 267.757 273.906 cv
267.497 273.921 267.229 273.935 267.023 273.923 cv
266.982 273.921 li
266.964 273.885 li
266.886 273.724 266.799 273.562 266.706 273.404 cv
266.685 273.37 li
266.705 273.335 li
266.81 273.154 266.973 272.935 267.131 272.724 cv
267.244 272.572 267.361 272.416 267.454 272.276 cv
267.362 272.143 267.263 272.009 267.158 271.876 cv
266.996 271.924 266.81 271.99 266.631 272.054 cv
266.384 272.141 266.129 272.232 265.926 272.279 cv
265.887 272.288 li
265.86 272.258 li
265.737 272.124 265.608 271.993 265.477 271.87 cv
265.447 271.842 li
265.457 271.803 li
265.507 271.6 265.601 271.346 265.693 271.1 cv
265.759 270.922 265.827 270.738 265.878 270.577 cv
265.749 270.472 265.616 270.371 265.482 270.275 cv
265.34 270.367 265.181 270.481 265.027 270.592 cv
264.814 270.746 264.594 270.905 264.412 271.007 cv
264.377 271.027 li
264.342 271.006 li
264.186 270.911 264.025 270.821 263.866 270.74 cv
263.83 270.722 li
263.828 270.682 li
263.819 270.475 263.838 270.206 263.857 269.945 cv
263.87 269.754 263.884 269.557 263.887 269.387 cv
263.73 269.322 263.575 269.262 263.424 269.209 cv
263.314 269.336 263.195 269.49 263.079 269.639 cv
262.918 269.848 262.75 270.064 262.603 270.214 cv
262.575 270.243 li
262.536 270.232 li
262.349 270.182 262.175 270.143 262.004 270.111 cv
261.964 270.104 li
261.951 270.066 li
261.885 269.871 261.827 269.609 261.772 269.356 cv
261.731 269.168 261.688 268.974 261.642 268.809 cv
261.465 268.789 261.302 268.776 261.146 268.768 cv
261.078 268.92 261.008 269.099 260.94 269.272 cv
260.843 269.521 260.743 269.777 260.643 269.964 cv
260.624 270 li
260.584 270.001 li
260.401 270.005 260.216 270.017 260.033 270.036 cv
259.993 270.04 li
259.97 270.007 li
259.847 269.835 259.715 269.592 259.587 269.358 cv
259.498 269.195 259.406 269.026 259.319 268.885 cv
259.165 268.913 259.005 268.947 258.832 268.989 cv
258.807 269.158 258.79 269.356 258.773 269.548 cv
258.75 269.806 258.727 270.073 258.686 270.274 cv
258.678 270.314 li
258.639 270.326 li
258.472 270.38 258.305 270.441 258.127 270.514 cv
258.089 270.53 li
258.058 270.505 li
257.893 270.375 257.699 270.181 257.512 269.994 cv
257.378 269.861 257.241 269.724 257.116 269.612 cv
256.974 269.683 256.83 269.761 256.679 269.848 cv
256.704 270.016 256.743 270.21 256.78 270.398 cv
256.832 270.653 256.885 270.918 256.903 271.124 cv
256.906 271.165 li
256.873 271.187 li
256.724 271.289 256.576 271.398 256.434 271.511 cv
256.403 271.537 li
256.365 271.522 li
256.171 271.444 255.933 271.314 255.702 271.188 cv
255.535 271.098 255.363 271.004 255.211 270.932 cv
255.091 271.043 254.972 271.16 254.857 271.281 cv
254.927 271.435 255.018 271.608 255.106 271.776 cv
255.228 272.008 255.355 272.249 255.43 272.444 cv
255.444 272.481 li
255.419 272.512 li
255.302 272.654 255.191 272.8 255.088 272.947 cv
255.065 272.98 li
255.025 272.976 li
254.818 272.955 254.553 272.898 254.297 272.842 cv
254.111 272.801 253.919 272.76 253.752 272.733 cv
253.665 272.878 253.584 273.023 253.509 273.167 cv
253.619 273.294 253.755 273.434 253.887 273.57 cv
254.07 273.76 254.259 273.956 254.386 274.122 cv
254.411 274.154 li
254.395 274.191 li
254.322 274.361 254.256 274.533 254.2 274.701 cv
254.187 274.739 li
254.147 274.747 li
253.944 274.785 253.675 274.804 253.416 274.823 cv
253.224 274.837 253.027 274.851 252.858 274.873 cv
252.813 275.045 252.777 275.204 252.747 275.357 cv
252.888 275.447 253.056 275.542 253.22 275.635 cv
253.451 275.765 253.69 275.9 253.86 276.025 cv
253.892 276.049 li
253.887 276.089 li
253.864 276.287 253.85 276.465 253.843 276.633 cv
253.841 276.673 li
253.805 276.692 li
253.623 276.785 253.373 276.878 253.132 276.968 cv
252.95 277.036 252.763 277.106 252.606 277.175 cv
252.608 277.264 252.611 277.346 252.616 277.429 cv
252.621 277.513 252.63 277.597 252.638 277.681 cv
252.803 277.73 252.998 277.776 253.187 277.82 cv
253.438 277.879 253.697 277.939 253.889 278.008 cv
253.928 278.022 li
253.934 278.062 li
253.962 278.228 253.999 278.402 254.048 278.596 cv
254.058 278.635 li
254.028 278.662 li
253.876 278.808 253.656 278.972 253.443 279.131 cv
253.293 279.244 253.138 279.36 253.01 279.467 cv
253.058 279.613 253.115 279.767 253.181 279.933 cv
253.352 279.933 253.549 279.922 253.741 279.911 cv
254.001 279.896 254.269 279.882 254.476 279.894 cv
254.516 279.896 li
254.534 279.932 li
254.611 280.091 254.698 280.253 254.793 280.413 cv
254.813 280.448 li
254.793 280.483 li
254.688 280.664 254.525 280.883 254.367 281.095 cv
254.254 281.246 254.138 281.402 254.045 281.542 cv
254.137 281.675 254.236 281.809 254.34 281.941 cv
254.503 281.893 254.688 281.828 254.867 281.764 cv
255.114 281.676 255.369 281.585 255.572 281.538 cv
255.611 281.529 li
255.639 281.559 li
255.76 281.692 255.889 281.823 256.022 281.948 cv
256.051 281.976 li
256.041 282.015 li
255.992 282.217 255.897 282.472 255.806 282.718 cv
255.739 282.896 255.671 283.079 255.621 283.24 cv
255.751 283.346 255.884 283.447 256.017 283.542 cv
256.158 283.451 256.317 283.336 256.471 283.225 cv
256.684 283.071 256.904 282.912 257.086 282.81 cv
257.122 282.79 li
257.156 282.811 li
257.313 282.907 257.473 282.996 257.633 283.077 cv
257.669 283.095 li
257.671 283.135 li
257.68 283.343 257.66 283.612 257.642 283.872 cv
257.628 284.063 257.614 284.26 257.611 284.43 cv
257.77 284.496 257.922 284.555 258.075 284.608 cv
258.184 284.481 258.304 284.327 258.419 284.178 cv
258.581 283.969 258.748 283.753 258.895 283.603 cv
258.923 283.574 li
258.962 283.585 li
259.15 283.635 259.324 283.675 259.495 283.706 cv
259.534 283.713 li
259.547 283.752 li
259.614 283.947 259.671 284.209 259.727 284.462 cv
259.768 284.65 259.81 284.844 259.856 285.008 cv
260.033 285.028 260.196 285.041 260.352 285.049 cv
260.421 284.898 260.49 284.719 260.558 284.545 cv
260.655 284.297 260.755 284.04 260.855 283.853 cv
260.874 283.817 li
260.915 283.816 li
261.098 283.812 261.283 283.8 261.465 283.781 cv
261.505 283.777 li
261.528 283.81 li
261.651 283.982 261.783 284.224 261.911 284.458 cv
262 284.622 262.093 284.791 262.18 284.932 cv
262.334 284.904 262.494 284.87 262.667 284.829 cv
262.691 284.659 262.708 284.461 262.725 284.27 cv
262.748 284.011 262.772 283.745 262.813 283.543 cv
262.821 283.503 li
262.859 283.491 li
263.026 283.438 263.193 283.376 263.372 283.303 cv
263.409 283.288 li
263.441 283.313 li
263.606 283.443 263.799 283.636 263.987 283.823 cv
264.12 283.956 264.258 284.093 264.382 284.205 cv
264.525 284.133 264.669 284.056 264.819 283.969 cv
264.795 283.801 264.756 283.608 264.718 283.42 cv
264.667 283.164 264.613 282.9 264.596 282.693 cv
264.592 282.653 li
264.626 282.63 li
264.776 282.528 264.923 282.419 265.065 282.306 cv
265.096 282.28 li
265.134 282.295 li
265.327 282.373 265.566 282.503 265.797 282.629 cv
265.964 282.72 266.136 282.813 266.288 282.885 cv
266.407 282.774 266.526 282.657 266.642 282.536 cv
266.572 282.383 266.481 282.21 266.392 282.041 cv
266.27 281.809 266.144 281.569 266.069 281.374 cv
266.054 281.336 li
266.08 281.305 li
266.196 281.164 266.307 281.018 266.41 280.871 cv
266.434 280.838 li
266.474 280.842 li
266.681 280.862 266.945 280.92 267.201 280.975 cv
267.387 281.016 267.58 281.058 267.747 281.084 cv
267.833 280.941 267.914 280.795 267.989 280.65 cv
267.879 280.523 267.743 280.383 267.612 280.248 cv
267.429 280.058 267.239 279.862 267.112 279.695 cv
267.088 279.663 li
267.103 279.626 li
267.176 279.457 267.242 279.286 267.299 279.116 cv
267.312 279.078 li
267.352 279.071 li
267.555 279.033 267.823 279.013 268.082 278.994 cv
268.274 278.981 268.471 278.966 268.641 278.945 cv
268.685 278.771 268.722 278.612 268.751 278.46 cv
268.611 278.371 268.443 278.275 268.279 278.183 cv
268.048 278.052 267.809 277.917 267.639 277.792 cv
267.606 277.768 li
267.611 277.728 li
267.634 277.531 267.649 277.352 267.656 277.184 cv
267.657 277.144 li
267.693 277.125 li
267.876 277.033 268.125 276.94 268.366 276.849 cv
268.548 276.781 268.735 276.711 268.893 276.642 cv
268.89 276.558 268.888 276.473 268.882 276.389 cv
268.877 276.304 268.869 276.22 268.86 276.136 cv
268.695 276.087 268.501 276.042 268.312 275.998 cv
cp
f
288.408 127.74 mo
288.415 127.976 li
288.252 127.867 li
286.909 126.97 284.293 126.501 282.541 126.566 cv
282.479 126.568 li
282.448 126.513 li
282.225 126.106 281.912 125.748 281.542 125.479 cv
281.429 125.396 li
281.542 125.315 li
282.691 124.487 284.181 123.959 285.631 123.867 cv
286.289 123.824 286.903 123.877 287.407 124.019 cv
287.45 124.031 li
287.47 124.07 li
288.009 125.13 288.321 126.272 288.397 127.464 cv
288.403 127.557 288.406 127.649 288.408 127.74 cv
cp
287.985 130.726 mo
287.587 131.943 286.91 133.08 286.027 134.014 cv
285.892 134.157 li
285.854 133.964 li
285.539 132.381 284.021 130.2 282.736 129.006 cv
282.69 128.963 li
282.708 128.903 li
282.812 128.545 282.854 128.181 282.831 127.82 cv
282.825 127.732 282.814 127.64 282.797 127.531 cv
282.776 127.393 li
282.914 127.415 li
285.26 127.796 287.237 129.328 287.977 130.644 cv
287.999 130.683 li
287.985 130.726 li
cp
283.695 135.735 mo
283.683 135.778 li
283.643 135.798 li
282.584 136.337 281.442 136.649 280.249 136.725 cv
280.153 136.731 280.057 136.734 279.961 136.737 cv
279.738 136.743 li
279.847 136.58 li
280.744 135.237 281.213 132.621 281.148 130.869 cv
281.146 130.807 li
281.201 130.777 li
281.608 130.553 281.966 130.239 282.235 129.87 cv
282.317 129.757 li
282.399 129.871 li
283.789 131.8 284.103 134.282 283.695 135.735 cv
cp
277.07 136.305 mo
277.031 136.327 li
276.988 136.313 li
275.77 135.915 274.633 135.238 273.699 134.355 cv
273.557 134.221 li
273.749 134.182 li
275.333 133.866 277.514 132.349 278.708 131.064 cv
278.751 131.018 li
278.811 131.035 li
279.265 131.169 279.737 131.194 280.183 131.125 cv
280.321 131.104 li
280.299 131.242 li
279.918 133.588 278.386 135.565 277.07 136.305 cv
cp
271.978 132.023 mo
271.935 132.011 li
271.915 131.971 li
271.377 130.912 271.065 129.77 270.988 128.578 cv
270.983 128.485 270.98 128.393 270.977 128.302 cv
270.97 128.066 li
271.134 128.175 li
272.477 129.071 275.092 129.54 276.845 129.476 cv
276.907 129.474 li
276.937 129.529 li
277.161 129.936 277.474 130.294 277.844 130.563 cv
277.957 130.646 li
277.843 130.727 li
276.695 131.555 275.205 132.083 273.755 132.175 cv
273.097 132.217 272.483 132.165 271.978 132.023 cv
cp
271.401 125.316 mo
271.799 124.098 272.476 122.961 273.359 122.028 cv
273.493 121.885 li
273.532 122.078 li
273.847 123.661 275.365 125.842 276.65 127.036 cv
276.696 127.079 li
276.678 127.139 li
276.573 127.497 276.532 127.861 276.555 128.222 cv
276.561 128.32 276.574 128.416 276.588 128.511 cv
276.61 128.649 li
276.472 128.627 li
274.126 128.246 272.149 126.714 271.409 125.398 cv
271.387 125.359 li
271.401 125.316 li
cp
275.691 120.307 mo
275.703 120.264 li
275.742 120.244 li
276.802 119.705 277.944 119.393 279.136 119.317 cv
279.242 119.31 279.347 119.307 279.451 119.305 cv
279.647 119.3 li
279.538 119.462 li
278.642 120.805 278.173 123.421 278.237 125.173 cv
278.24 125.236 li
278.185 125.266 li
277.778 125.489 277.42 125.802 277.151 126.172 cv
277.068 126.285 li
276.987 126.171 li
275.597 124.242 275.282 121.761 275.691 120.307 cv
cp
281.21 127.924 mo
281.235 128.329 281.102 128.72 280.834 129.025 cv
280.566 129.33 280.195 129.512 279.79 129.538 cv
279.385 129.563 278.994 129.43 278.689 129.162 cv
278.06 128.608 277.999 127.646 278.552 127.017 cv
278.82 126.712 279.191 126.53 279.596 126.505 cv
280.001 126.479 280.392 126.612 280.697 126.88 cv
281.001 127.148 281.184 127.519 281.21 127.924 cv
cp
282.316 119.737 mo
282.355 119.715 li
282.397 119.729 li
283.615 120.126 284.752 120.803 285.686 121.687 cv
285.829 121.821 li
285.636 121.86 li
284.052 122.176 281.871 123.694 280.678 124.978 cv
280.635 125.024 li
280.575 125.007 li
280.217 124.902 279.853 124.86 279.492 124.884 cv
279.404 124.889 279.309 124.9 279.203 124.917 cv
279.065 124.938 li
279.087 124.8 li
279.468 122.454 281 120.477 282.316 119.737 cv
cp
290.805 126.682 mo
290.436 126.596 290.055 126.507 289.772 126.406 cv
289.716 126.386 li
289.706 126.327 li
289.665 126.083 289.61 125.826 289.539 125.542 cv
289.524 125.485 li
289.568 125.444 li
289.792 125.23 290.116 124.988 290.429 124.754 cv
290.649 124.589 290.876 124.419 291.064 124.262 cv
290.992 124.046 290.909 123.821 290.812 123.578 cv
290.561 123.578 290.27 123.594 289.988 123.61 cv
289.607 123.631 289.213 123.653 288.91 123.635 cv
288.851 123.632 li
288.825 123.578 li
288.709 123.342 288.582 123.105 288.444 122.872 cv
288.414 122.821 li
288.444 122.77 li
288.598 122.504 288.837 122.183 289.069 121.872 cv
289.235 121.649 289.407 121.42 289.543 121.214 cv
289.408 121.019 289.263 120.822 289.109 120.627 cv
288.87 120.697 288.598 120.794 288.334 120.888 cv
287.972 121.017 287.597 121.15 287.299 121.218 cv
287.242 121.232 li
287.202 121.188 li
287.021 120.99 286.832 120.798 286.639 120.617 cv
286.595 120.577 li
286.61 120.519 li
286.683 120.222 286.822 119.848 286.956 119.487 cv
287.054 119.225 287.154 118.955 287.228 118.718 cv
287.038 118.565 286.843 118.416 286.646 118.275 cv
286.438 118.409 286.205 118.577 285.979 118.741 cv
285.666 118.967 285.342 119.201 285.074 119.351 cv
285.022 119.38 li
284.972 119.349 li
284.742 119.208 284.506 119.077 284.272 118.958 cv
284.219 118.931 li
284.216 118.872 li
284.203 118.568 284.231 118.172 284.259 117.79 cv
284.279 117.51 284.299 117.22 284.303 116.97 cv
284.073 116.874 283.844 116.786 283.622 116.709 cv
283.461 116.895 283.286 117.121 283.117 117.34 cv
282.879 117.647 282.633 117.965 282.417 118.185 cv
282.375 118.227 li
282.318 118.212 li
282.043 118.138 281.787 118.08 281.536 118.034 cv
281.478 118.023 li
281.458 117.967 li
281.361 117.681 281.277 117.297 281.196 116.925 cv
281.135 116.648 281.073 116.363 281.005 116.121 cv
280.745 116.092 280.505 116.072 280.276 116.061 cv
280.176 116.283 280.073 116.546 279.973 116.802 cv
279.831 117.166 279.684 117.544 279.537 117.818 cv
279.509 117.87 li
279.45 117.871 li
279.181 117.878 278.909 117.896 278.641 117.923 cv
278.582 117.929 li
278.548 117.881 li
278.367 117.627 278.173 117.272 277.985 116.927 cv
277.854 116.687 277.719 116.44 277.591 116.233 cv
277.366 116.273 277.13 116.323 276.876 116.385 cv
276.84 116.633 276.814 116.924 276.789 117.206 cv
276.756 117.585 276.721 117.977 276.661 118.274 cv
276.649 118.332 li
276.593 118.35 li
276.348 118.429 276.101 118.519 275.84 118.626 cv
275.785 118.649 li
275.738 118.612 li
275.496 118.421 275.211 118.137 274.936 117.862 cv
274.74 117.667 274.538 117.465 274.355 117.301 cv
274.146 117.405 273.935 117.519 273.713 117.647 cv
273.749 117.895 273.806 118.179 273.862 118.455 cv
273.938 118.831 274.016 119.219 274.042 119.523 cv
274.047 119.582 li
273.998 119.615 li
273.778 119.764 273.562 119.924 273.353 120.091 cv
273.307 120.128 li
273.252 120.106 li
272.967 119.992 272.616 119.801 272.277 119.616 cv
272.032 119.483 271.779 119.346 271.556 119.24 cv
271.38 119.403 271.205 119.575 271.035 119.753 cv
271.138 119.978 271.272 120.233 271.402 120.48 cv
271.581 120.821 271.767 121.175 271.877 121.461 cv
271.898 121.516 li
271.861 121.562 li
271.689 121.77 271.526 121.985 271.375 122.2 cv
271.341 122.248 li
271.282 122.242 li
270.978 122.212 270.589 122.128 270.213 122.046 cv
269.939 121.987 269.657 121.925 269.412 121.886 cv
269.285 122.098 269.165 122.312 269.056 122.524 cv
269.217 122.71 269.417 122.916 269.61 123.116 cv
269.879 123.395 270.158 123.683 270.344 123.927 cv
270.38 123.974 li
270.357 124.029 li
270.25 124.278 270.153 124.53 270.07 124.777 cv
270.051 124.833 li
269.993 124.844 li
269.694 124.901 269.3 124.929 268.918 124.957 cv
268.637 124.977 268.347 124.998 268.098 125.03 cv
268.033 125.283 267.979 125.516 267.936 125.741 cv
268.142 125.873 268.39 126.014 268.631 126.149 cv
268.97 126.341 269.321 126.54 269.571 126.723 cv
269.618 126.758 li
269.611 126.817 li
269.577 127.107 269.556 127.369 269.546 127.616 cv
269.544 127.675 li
269.49 127.703 li
269.222 127.839 268.856 127.976 268.501 128.108 cv
268.234 128.208 267.959 128.311 267.728 128.413 cv
267.732 128.543 267.735 128.664 267.743 128.785 cv
267.751 128.909 267.763 129.033 267.776 129.156 cv
268.018 129.227 268.305 129.295 268.582 129.36 cv
268.95 129.446 269.331 129.535 269.614 129.636 cv
269.67 129.656 li
269.68 129.715 li
269.721 129.959 269.776 130.216 269.847 130.5 cv
269.861 130.557 li
269.818 130.598 li
269.594 130.811 269.271 131.053 268.959 131.286 cv
268.738 131.452 268.51 131.622 268.322 131.779 cv
268.393 131.995 268.476 132.22 268.574 132.464 cv
268.824 132.464 269.115 132.448 269.396 132.432 cv
269.778 132.411 270.172 132.389 270.476 132.407 cv
270.535 132.41 li
270.561 132.464 li
270.674 132.697 270.802 132.934 270.941 133.17 cv
270.971 133.221 li
270.942 133.272 li
270.787 133.539 270.548 133.86 270.316 134.171 cv
270.15 134.393 269.979 134.623 269.842 134.828 cv
269.978 135.023 270.123 135.22 270.277 135.415 cv
270.515 135.345 270.787 135.248 271.05 135.154 cv
271.413 135.025 271.788 134.892 272.086 134.823 cv
272.144 134.81 li
272.184 134.854 li
272.362 135.049 272.551 135.241 272.747 135.425 cv
272.79 135.465 li
272.776 135.523 li
272.703 135.821 272.564 136.195 272.429 136.557 cv
272.332 136.818 272.232 137.087 272.158 137.324 cv
272.349 137.479 272.544 137.627 272.74 137.767 cv
272.948 137.633 273.181 137.465 273.406 137.302 cv
273.72 137.075 274.043 136.841 274.311 136.691 cv
274.363 136.662 li
274.414 136.693 li
274.644 136.833 274.879 136.965 275.114 137.084 cv
275.167 137.11 li
275.17 137.17 li
275.183 137.474 275.154 137.87 275.127 138.252 cv
275.107 138.533 275.086 138.822 275.082 139.072 cv
275.316 139.169 275.54 139.256 275.763 139.333 cv
275.924 139.147 276.1 138.921 276.27 138.702 cv
276.507 138.395 276.753 138.077 276.969 137.857 cv
277.01 137.815 li
277.068 137.83 li
277.343 137.904 277.599 137.962 277.849 138.008 cv
277.908 138.019 li
277.927 138.075 li
278.025 138.362 278.109 138.747 278.191 139.119 cv
278.251 139.395 278.313 139.68 278.38 139.921 cv
278.641 139.95 278.88 139.97 279.11 139.981 cv
279.21 139.759 279.313 139.496 279.412 139.241 cv
279.555 138.876 279.702 138.499 279.849 138.224 cv
279.877 138.172 li
279.936 138.17 li
280.205 138.164 280.477 138.147 280.744 138.119 cv
280.803 138.112 li
280.838 138.161 li
281.018 138.414 281.212 138.769 281.4 139.113 cv
281.531 139.354 281.666 139.602 281.794 139.809 cv
282.021 139.769 282.256 139.719 282.51 139.657 cv
282.546 139.409 282.571 139.118 282.596 138.836 cv
282.63 138.457 282.664 138.065 282.725 137.768 cv
282.736 137.71 li
282.793 137.692 li
283.038 137.614 283.284 137.523 283.546 137.416 cv
283.6 137.393 li
283.647 137.43 li
283.89 137.621 284.174 137.905 284.449 138.179 cv
284.645 138.375 284.848 138.577 285.031 138.741 cv
285.241 138.636 285.452 138.522 285.673 138.395 cv
285.637 138.148 285.58 137.864 285.524 137.588 cv
285.448 137.212 285.37 136.823 285.344 136.519 cv
285.339 136.46 li
285.388 136.427 li
285.609 136.277 285.826 136.117 286.033 135.95 cv
286.079 135.913 li
286.135 135.935 li
286.419 136.05 286.77 136.241 287.109 136.425 cv
287.354 136.559 287.607 136.696 287.83 136.802 cv
288.006 136.639 288.181 136.467 288.351 136.289 cv
288.247 136.064 288.114 135.809 287.984 135.562 cv
287.804 135.221 287.619 134.868 287.508 134.582 cv
287.487 134.526 li
287.525 134.481 li
287.696 134.273 287.859 134.058 288.01 133.842 cv
288.044 133.794 li
288.104 133.8 li
288.408 133.83 288.797 133.914 289.172 133.996 cv
289.446 134.056 289.728 134.117 289.974 134.156 cv
290.1 133.945 290.22 133.731 290.33 133.518 cv
290.168 133.332 289.969 133.126 289.776 132.927 cv
289.507 132.648 289.228 132.36 289.041 132.115 cv
289.005 132.068 li
289.029 132.014 li
289.135 131.765 289.232 131.513 289.316 131.265 cv
289.335 131.208 li
289.393 131.198 li
289.692 131.141 290.086 131.113 290.466 131.085 cv
290.748 131.065 291.039 131.044 291.287 131.012 cv
291.353 130.758 291.407 130.524 291.45 130.301 cv
291.244 130.169 290.996 130.029 290.756 129.894 cv
290.417 129.701 290.065 129.503 289.815 129.319 cv
289.768 129.284 li
289.774 129.225 li
289.809 128.935 289.83 128.673 289.84 128.426 cv
289.842 128.366 li
289.895 128.34 li
290.163 128.203 290.53 128.066 290.883 127.934 cv
291.151 127.834 291.426 127.731 291.658 127.629 cv
291.654 127.505 291.65 127.381 291.643 127.257 cv
291.635 127.133 291.623 127.009 291.61 126.886 cv
291.368 126.815 291.082 126.747 290.805 126.682 cv
cp
f
215.987 108.643 mo
216.005 108.968 li
215.775 108.823 li
213.886 107.63 210.254 107.073 207.834 107.223 cv
207.747 107.228 li
207.704 107.153 li
207.38 106.597 206.935 106.114 206.414 105.755 cv
206.255 105.645 li
206.409 105.528 li
207.968 104.343 210.011 103.562 212.012 103.383 cv
212.92 103.302 213.771 103.354 214.473 103.532 cv
214.533 103.547 li
214.562 103.601 li
215.344 105.048 215.815 106.616 215.962 108.262 cv
215.973 108.389 215.98 108.516 215.987 108.643 cv
cp
215.505 112.785 mo
214.997 114.483 214.101 116.078 212.912 117.4 cv
212.731 117.602 li
212.671 117.337 li
212.18 115.159 210.006 112.196 208.187 110.59 cv
208.123 110.533 li
208.145 110.449 li
208.277 109.95 208.322 109.445 208.277 108.947 cv
208.267 108.825 208.249 108.698 208.221 108.548 cv
208.186 108.358 li
208.378 108.384 li
211.636 108.829 214.422 110.879 215.491 112.673 cv
215.522 112.726 li
215.505 112.785 li
cp
209.747 119.861 mo
209.732 119.921 li
209.678 119.95 li
208.232 120.732 206.664 121.202 205.018 121.349 cv
204.884 121.361 204.752 121.368 204.62 121.375 cv
204.312 121.391 li
204.456 121.162 li
205.649 119.274 206.207 115.642 206.057 113.221 cv
206.052 113.135 li
206.126 113.091 li
206.682 112.768 207.166 112.322 207.525 111.802 cv
207.635 111.643 li
207.752 111.797 li
209.741 114.417 210.261 117.837 209.747 119.861 cv
cp
200.606 120.879 mo
200.553 120.91 li
200.495 120.892 li
198.797 120.385 197.201 119.488 195.879 118.3 cv
195.678 118.119 li
195.942 118.059 li
198.121 117.567 201.084 115.393 202.69 113.575 cv
202.747 113.51 li
202.831 113.532 li
203.464 113.701 204.117 113.72 204.732 113.609 cv
204.922 113.575 li
204.896 113.766 li
204.45 117.023 202.401 119.81 200.606 120.879 cv
cp
193.418 115.135 mo
193.359 115.12 li
193.329 115.066 li
192.548 113.62 192.077 112.052 191.93 110.406 cv
191.919 110.278 191.912 110.151 191.905 110.024 cv
191.887 109.699 li
192.117 109.844 li
194.005 111.037 197.637 111.594 200.058 111.445 cv
200.145 111.439 li
200.188 111.514 li
200.511 112.07 200.957 112.554 201.478 112.913 cv
201.637 113.023 li
201.483 113.14 li
199.923 114.324 197.881 115.105 195.88 115.284 cv
194.972 115.365 194.121 115.313 193.418 115.135 cv
cp
192.387 105.882 mo
192.895 104.184 193.791 102.589 194.98 101.267 cv
195.161 101.065 li
195.221 101.33 li
195.712 103.508 197.886 106.471 199.704 108.078 cv
199.769 108.135 li
199.747 108.219 li
199.615 108.717 199.57 109.222 199.614 109.72 cv
199.626 109.855 199.647 109.988 199.67 110.119 cv
199.705 110.309 li
199.513 110.283 li
196.256 109.838 193.47 107.788 192.401 105.994 cv
192.369 105.941 li
192.387 105.882 li
cp
198.144 98.8063 mo
198.159 98.7467 li
198.214 98.7174 li
199.661 97.9358 201.229 97.465 202.874 97.3182 cv
203.02 97.3052 203.165 97.2978 203.309 97.2905 cv
203.58 97.2767 li
203.435 97.5055 li
202.242 99.3933 201.685 103.026 201.835 105.447 cv
201.84 105.533 li
201.765 105.576 li
201.21 105.899 200.726 106.345 200.367 106.865 cv
200.257 107.024 li
200.14 106.87 li
198.151 104.251 197.63 100.831 198.144 98.8063 cv
cp
206.04 109.147 mo
206.089 109.706 205.919 110.252 205.559 110.682 cv
205.199 111.113 204.692 111.377 204.133 111.427 cv
203.574 111.477 203.028 111.306 202.598 110.946 cv
201.709 110.203 201.59 108.874 202.334 107.985 cv
202.694 107.555 203.2 107.29 203.759 107.24 cv
204.318 107.19 204.863 107.361 205.294 107.721 cv
205.725 108.081 205.989 108.588 206.04 109.147 cv
cp
207.285 97.7888 mo
207.338 97.7573 li
207.397 97.775 li
209.095 98.2821 210.691 99.1787 212.013 100.367 cv
212.214 100.549 li
211.95 100.608 li
209.77 101.101 206.807 103.275 205.202 105.092 cv
205.145 105.158 li
205.061 105.135 li
204.563 105.003 204.058 104.958 203.559 105.003 cv
203.437 105.014 203.307 105.032 203.161 105.059 cv
202.97 105.093 li
202.996 104.902 li
203.442 101.644 205.491 98.8574 207.285 97.7888 cv
cp
219.263 107.097 mo
218.751 106.99 218.221 106.88 217.825 106.75 cv
217.747 106.725 li
217.731 106.644 li
217.666 106.308 217.582 105.955 217.473 105.565 cv
217.452 105.486 li
217.51 105.428 li
217.813 105.124 218.252 104.778 218.677 104.443 cv
218.976 104.208 219.284 103.965 219.538 103.742 cv
219.431 103.446 219.309 103.137 219.165 102.804 cv
218.819 102.813 218.417 102.845 218.028 102.877 cv
217.501 102.919 216.957 102.963 216.538 102.949 cv
216.455 102.947 li
216.418 102.874 li
216.25 102.551 216.065 102.227 215.867 101.911 cv
215.824 101.842 li
215.863 101.77 li
216.067 101.396 216.387 100.944 216.696 100.507 cv
216.918 100.193 217.147 99.8689 217.329 99.58 cv
217.136 99.3154 216.928 99.0481 216.708 98.7831 cv
216.381 98.8886 216.008 99.032 215.646 99.171 cv
215.15 99.3617 214.636 99.5589 214.227 99.6641 cv
214.147 99.6847 li
214.09 99.6254 li
213.835 99.3584 213.566 99.0995 213.293 98.8558 cv
213.231 98.8013 li
213.249 98.7211 li
213.339 98.3072 213.519 97.7857 213.692 97.2813 cv
213.818 96.9159 213.947 96.5393 214.041 96.2095 cv
213.774 96.0037 213.499 95.805 213.221 95.617 cv
212.938 95.8095 212.621 96.0506 212.314 96.2843 cv
211.89 96.6078 211.45 96.9424 211.085 97.1588 cv
211.015 97.2006 li
210.944 97.1596 li
210.621 96.9735 210.29 96.8001 209.962 96.6439 cv
209.888 96.6087 li
209.882 96.5269 li
209.853 96.1066 209.879 95.5591 209.903 95.0295 cv
209.921 94.6407 209.94 94.24 209.937 93.8946 cv
209.614 93.7691 209.295 93.6555 208.986 93.5563 cv
208.77 93.8194 208.536 94.1379 208.309 94.4469 cv
207.991 94.8799 207.662 95.3276 207.371 95.6396 cv
207.315 95.6994 li
207.235 95.6803 li
206.852 95.5879 206.496 95.5163 206.148 95.4612 cv
206.066 95.4483 li
206.038 95.3713 li
205.893 94.9788 205.764 94.4505 205.638 93.9395 cv
205.545 93.559 205.449 93.1667 205.347 92.8341 cv
204.986 92.8035 204.654 92.7849 204.337 92.7772 cv
204.206 93.0876 204.073 93.4549 203.944 93.8114 cv
203.76 94.3207 203.569 94.8474 203.376 95.2319 cv
203.339 95.305 li
203.258 95.3089 li
202.886 95.3274 202.511 95.3609 202.141 95.4085 cv
202.06 95.4191 li
202.011 95.3536 li
201.753 95.009 201.471 94.5239 201.2 94.0545 cv
201.01 93.7272 200.814 93.3896 200.631 93.1078 cv
200.32 93.1714 199.997 93.2486 199.647 93.3425 cv
199.606 93.6877 199.58 94.0909 199.556 94.4818 cv
199.523 95.0069 199.489 95.5499 199.416 95.962 cv
199.401 96.0429 li
199.324 96.0699 li
198.988 96.1869 198.65 96.3204 198.292 96.478 cv
198.217 96.5109 li
198.152 96.4619 li
197.81 96.206 197.406 95.8233 197.016 95.4532 cv
196.739 95.1894 196.452 94.9176 196.193 94.6969 cv
195.908 94.8484 195.62 95.0132 195.318 95.1984 cv
195.376 95.5389 195.465 95.9301 195.551 96.3094 cv
195.669 96.8263 195.791 97.3607 195.837 97.7797 cv
195.846 97.8612 li
195.779 97.909 li
195.482 98.1223 195.187 98.3513 194.904 98.5898 cv
194.842 98.6427 li
194.765 98.614 li
194.367 98.4657 193.876 98.2141 193.4 97.9706 cv
193.057 97.7949 192.703 97.6138 192.39 97.4746 cv
192.153 97.7062 191.917 97.9505 191.688 98.2026 cv
191.839 98.5104 192.032 98.8578 192.22 99.1946 cv
192.48 99.6608 192.749 100.143 192.912 100.534 cv
192.943 100.61 li
192.893 100.674 li
192.663 100.968 192.444 101.271 192.244 101.574 cv
192.198 101.642 li
192.116 101.636 li
191.694 101.605 191.154 101.502 190.631 101.401 cv
190.25 101.329 189.858 101.254 189.518 101.208 cv
189.35 101.506 189.192 101.806 189.048 102.102 cv
189.278 102.355 189.56 102.633 189.835 102.902 cv
190.216 103.278 190.611 103.666 190.878 103.998 cv
190.929 104.062 li
190.899 104.138 li
190.759 104.487 190.635 104.838 190.528 105.183 cv
190.504 105.261 li
190.424 105.278 li
190.013 105.367 189.468 105.42 188.942 105.471 cv
188.554 105.509 188.153 105.548 187.811 105.601 cv
187.729 105.952 187.663 106.278 187.611 106.59 cv
187.901 106.765 188.249 106.951 188.586 107.13 cv
189.062 107.384 189.554 107.646 189.905 107.89 cv
189.972 107.937 li
189.965 108.018 li
189.927 108.422 189.907 108.784 189.902 109.126 cv
189.901 109.208 li
189.828 109.248 li
189.462 109.445 188.96 109.648 188.475 109.843 cv
188.109 109.991 187.733 110.143 187.417 110.291 cv
187.426 110.471 187.435 110.638 187.45 110.805 cv
187.466 110.977 187.486 111.147 187.508 111.316 cv
187.846 111.407 188.244 111.49 188.631 111.571 cv
189.142 111.677 189.671 111.787 190.067 111.917 cv
190.145 111.943 li
190.161 112.024 li
190.226 112.359 190.31 112.713 190.418 113.103 cv
190.44 113.182 li
190.382 113.239 li
190.079 113.542 189.641 113.887 189.218 114.221 cv
188.918 114.458 188.609 114.701 188.354 114.925 cv
188.46 115.221 188.583 115.529 188.726 115.863 cv
189.073 115.854 189.474 115.822 189.863 115.79 cv
190.389 115.748 190.934 115.704 191.354 115.718 cv
191.436 115.72 li
191.474 115.793 li
191.639 116.112 191.824 116.436 192.024 116.757 cv
192.068 116.826 li
192.028 116.898 li
191.824 117.272 191.504 117.725 191.194 118.163 cv
190.973 118.476 190.744 118.799 190.562 119.087 cv
190.756 119.353 190.965 119.62 191.183 119.884 cv
191.51 119.779 191.883 119.635 192.244 119.497 cv
192.741 119.306 193.255 119.108 193.665 119.003 cv
193.744 118.983 li
193.801 119.042 li
194.054 119.306 194.322 119.565 194.599 119.812 cv
194.66 119.867 li
194.643 119.947 li
194.552 120.361 194.373 120.883 194.199 121.387 cv
194.074 121.752 193.945 122.129 193.851 122.458 cv
194.12 122.665 194.395 122.864 194.671 123.05 cv
194.954 122.858 195.27 122.618 195.576 122.384 cv
196.002 122.06 196.441 121.725 196.806 121.509 cv
196.877 121.467 li
196.948 121.508 li
197.271 121.693 197.601 121.867 197.93 122.023 cv
198.004 122.058 li
198.01 122.14 li
198.038 122.561 198.013 123.108 197.988 123.638 cv
197.97 124.027 197.952 124.427 197.955 124.773 cv
198.281 124.9 198.594 125.011 198.906 125.111 cv
199.122 124.848 199.356 124.529 199.584 124.22 cv
199.902 123.787 200.23 123.34 200.521 123.028 cv
200.577 122.968 li
200.657 122.987 li
201.041 123.08 201.396 123.151 201.744 123.206 cv
201.825 123.219 li
201.854 123.296 li
201.999 123.689 202.129 124.218 202.254 124.73 cv
202.348 125.11 202.443 125.501 202.545 125.833 cv
202.905 125.864 203.238 125.883 203.555 125.89 cv
203.686 125.58 203.819 125.213 203.947 124.857 cv
204.132 124.347 204.322 123.82 204.516 123.435 cv
204.553 123.362 li
204.634 123.358 li
205.006 123.34 205.381 123.307 205.751 123.259 cv
205.832 123.248 li
205.881 123.313 li
206.139 123.658 206.42 124.142 206.691 124.611 cv
206.881 124.939 207.077 125.277 207.261 125.56 cv
207.572 125.496 207.896 125.419 208.245 125.325 cv
208.286 124.98 208.311 124.577 208.336 124.186 cv
208.369 123.661 208.403 123.117 208.476 122.705 cv
208.49 122.624 li
208.568 122.597 li
208.904 122.481 209.241 122.347 209.599 122.189 cv
209.674 122.156 li
209.74 122.205 li
210.082 122.461 210.485 122.844 210.875 123.214 cv
211.153 123.478 211.44 123.75 211.698 123.97 cv
211.986 123.818 212.274 123.653 212.574 123.469 cv
212.516 123.129 212.427 122.738 212.341 122.359 cv
212.223 121.842 212.101 121.307 212.055 120.888 cv
212.046 120.806 li
212.113 120.758 li
212.412 120.544 212.707 120.314 212.988 120.077 cv
213.051 120.024 li
213.127 120.053 li
213.525 120.201 214.017 120.453 214.492 120.696 cv
214.835 120.872 215.189 121.053 215.502 121.193 cv
215.74 120.961 215.975 120.717 216.204 120.465 cv
216.053 120.157 215.859 119.81 215.671 119.473 cv
215.411 119.007 215.142 118.525 214.98 118.133 cv
214.948 118.058 li
214.999 117.993 li
215.228 117.7 215.447 117.397 215.648 117.094 cv
215.694 117.025 li
215.776 117.032 li
216.197 117.063 216.738 117.166 217.26 117.266 cv
217.641 117.339 218.033 117.414 218.374 117.459 cv
218.542 117.163 218.699 116.863 218.844 116.565 cv
218.614 116.313 218.332 116.036 218.058 115.766 cv
217.676 115.39 217.281 115.002 217.014 114.67 cv
216.962 114.606 li
216.993 114.53 li
217.132 114.183 217.257 113.831 217.364 113.484 cv
217.388 113.406 li
217.469 113.389 li
217.879 113.301 218.423 113.248 218.948 113.197 cv
219.337 113.159 219.738 113.12 220.081 113.067 cv
220.163 112.713 220.229 112.387 220.281 112.078 cv
219.991 111.903 219.644 111.718 219.308 111.538 cv
218.831 111.285 218.339 111.022 217.987 110.777 cv
217.92 110.73 li
217.927 110.649 li
217.965 110.246 217.985 109.883 217.99 109.541 cv
217.991 109.459 li
218.063 109.42 li
218.429 109.222 218.931 109.02 219.415 108.825 cv
219.781 108.677 220.159 108.525 220.475 108.376 cv
220.466 108.205 220.457 108.034 220.442 107.862 cv
220.426 107.691 220.405 107.521 220.384 107.351 cv
220.046 107.26 219.649 107.177 219.263 107.097 cv
cp
f
242.443 194.009 mo
242.462 194.364 li
242.211 194.206 li
240.146 192.901 236.175 192.292 233.528 192.456 cv
233.434 192.462 li
233.386 192.38 li
233.033 191.772 232.545 191.243 231.976 190.85 cv
231.802 190.73 li
231.971 190.602 li
233.676 189.307 235.909 188.453 238.097 188.258 cv
239.09 188.169 240.02 188.225 240.788 188.42 cv
240.853 188.437 li
240.885 188.496 li
241.74 190.078 242.255 191.792 242.415 193.592 cv
242.428 193.731 242.435 193.87 242.443 194.009 cv
cp
241.916 198.538 mo
241.361 200.394 240.381 202.139 239.081 203.584 cv
238.883 203.804 li
238.818 203.515 li
238.28 201.133 235.903 197.893 233.915 196.137 cv
233.844 196.075 li
233.868 195.983 li
234.013 195.438 234.062 194.885 234.013 194.341 cv
234.002 194.208 233.982 194.069 233.952 193.905 cv
233.914 193.697 li
234.124 193.725 li
237.685 194.212 240.732 196.453 241.901 198.415 cv
241.935 198.473 li
241.916 198.538 li
cp
235.621 206.274 mo
235.604 206.339 li
235.545 206.372 li
233.963 207.226 232.249 207.741 230.449 207.902 cv
230.303 207.915 230.159 207.922 230.014 207.93 cv
229.677 207.948 li
229.836 207.697 li
231.14 205.632 231.75 201.661 231.585 199.014 cv
231.58 198.92 li
231.661 198.872 li
232.269 198.519 232.798 198.031 233.191 197.463 cv
233.311 197.289 li
233.439 197.457 li
235.614 200.322 236.183 204.061 235.621 206.274 cv
cp
225.626 207.387 mo
225.568 207.422 li
225.504 207.402 li
223.647 206.847 221.902 205.867 220.457 204.568 cv
220.237 204.369 li
220.526 204.304 li
222.909 203.766 226.148 201.389 227.904 199.401 cv
227.967 199.33 li
228.058 199.354 li
228.75 199.539 229.465 199.56 230.136 199.438 cv
230.344 199.401 li
230.316 199.61 li
229.829 203.172 227.588 206.218 225.626 207.387 cv
cp
217.766 201.107 mo
217.701 201.09 li
217.669 201.031 li
216.815 199.45 216.3 197.736 216.139 195.936 cv
216.127 195.796 216.119 195.658 216.112 195.519 cv
216.092 195.163 li
216.344 195.322 li
218.408 196.626 222.379 197.236 225.027 197.072 cv
225.121 197.066 li
225.169 197.148 li
225.522 197.756 226.009 198.284 226.578 198.677 cv
226.753 198.797 li
226.584 198.925 li
224.879 200.22 222.646 201.075 220.458 201.27 cv
219.465 201.358 218.534 201.302 217.766 201.107 cv
cp
216.639 190.99 mo
217.194 189.133 218.174 187.388 219.474 185.944 cv
219.672 185.723 li
219.737 186.013 li
220.274 188.394 222.651 191.634 224.639 193.391 cv
224.711 193.453 li
224.686 193.545 li
224.541 194.09 224.493 194.642 224.541 195.186 cv
224.554 195.334 224.577 195.479 224.602 195.623 cv
224.64 195.831 li
224.431 195.802 li
220.869 195.315 217.823 193.074 216.654 191.112 cv
216.619 191.054 li
216.639 190.99 li
cp
222.934 183.253 mo
222.95 183.188 li
223.009 183.156 li
224.592 182.301 226.306 181.786 228.105 181.626 cv
228.265 181.612 228.423 181.604 228.581 181.596 cv
228.877 181.581 li
228.719 181.831 li
227.415 183.895 226.805 187.866 226.969 190.514 cv
226.975 190.608 li
226.893 190.656 li
226.286 191.008 225.757 191.496 225.364 192.064 cv
225.244 192.239 li
225.116 192.07 li
222.941 189.206 222.372 185.467 222.934 183.253 cv
cp
231.567 194.56 mo
231.621 195.171 231.434 195.767 231.041 196.238 cv
230.647 196.709 230.093 196.998 229.482 197.053 cv
228.87 197.107 228.274 196.921 227.803 196.527 cv
226.831 195.714 226.702 194.262 227.514 193.29 cv
227.908 192.819 228.462 192.529 229.073 192.475 cv
229.685 192.42 230.281 192.607 230.751 193.001 cv
231.222 193.395 231.512 193.948 231.567 194.56 cv
cp
232.928 182.14 mo
232.986 182.106 li
233.051 182.125 li
234.907 182.68 236.652 183.66 238.098 184.96 cv
238.318 185.158 li
238.029 185.223 li
235.645 185.762 232.405 188.139 230.651 190.126 cv
230.588 190.197 li
230.496 190.173 li
229.952 190.028 229.4 189.98 228.855 190.028 cv
228.721 190.04 228.578 190.06 228.419 190.089 cv
228.21 190.127 li
228.239 189.918 li
228.726 186.355 230.967 183.309 232.928 182.14 cv
cp
246.025 192.318 mo
245.465 192.202 244.886 192.081 244.453 191.939 cv
244.368 191.911 li
244.35 191.823 li
244.279 191.455 244.187 191.069 244.068 190.643 cv
244.045 190.557 li
244.108 190.493 li
244.44 190.161 244.92 189.783 245.384 189.417 cv
245.711 189.159 246.048 188.894 246.325 188.65 cv
246.209 188.326 246.075 187.988 245.918 187.624 cv
245.539 187.634 245.1 187.669 244.675 187.704 cv
244.099 187.75 243.504 187.798 243.045 187.783 cv
242.955 187.78 li
242.914 187.701 li
242.731 187.348 242.529 186.994 242.312 186.648 cv
242.265 186.572 li
242.308 186.493 li
242.531 186.085 242.88 185.59 243.219 185.112 cv
243.462 184.769 243.712 184.415 243.911 184.099 cv
243.699 183.81 243.472 183.517 243.232 183.228 cv
242.874 183.343 242.466 183.5 242.07 183.652 cv
241.527 183.86 240.966 184.076 240.518 184.191 cv
240.432 184.213 li
240.369 184.149 li
240.09 183.857 239.796 183.574 239.497 183.307 cv
239.43 183.248 li
239.449 183.16 li
239.548 182.707 239.744 182.137 239.934 181.586 cv
240.071 181.186 240.213 180.774 240.315 180.414 cv
240.023 180.189 239.722 179.971 239.419 179.766 cv
239.109 179.976 238.763 180.24 238.428 180.495 cv
237.963 180.849 237.483 181.215 237.083 181.452 cv
237.006 181.497 li
236.929 181.452 li
236.576 181.249 236.214 181.059 235.855 180.889 cv
235.774 180.85 li
235.768 180.761 li
235.737 180.301 235.764 179.702 235.791 179.123 cv
235.811 178.698 235.831 178.26 235.828 177.882 cv
235.475 177.745 235.126 177.621 234.788 177.513 cv
234.552 177.8 234.296 178.149 234.048 178.486 cv
233.7 178.96 233.34 179.449 233.022 179.79 cv
232.961 179.856 li
232.874 179.835 li
232.455 179.734 232.066 179.656 231.685 179.595 cv
231.596 179.581 li
231.565 179.497 li
231.407 179.068 231.265 178.49 231.128 177.932 cv
231.026 177.516 230.921 177.087 230.809 176.723 cv
230.414 176.689 230.051 176.669 229.705 176.661 cv
229.561 177 229.416 177.402 229.275 177.792 cv
229.074 178.348 228.866 178.924 228.654 179.345 cv
228.614 179.425 li
228.525 179.429 li
228.118 179.449 227.708 179.486 227.304 179.538 cv
227.215 179.549 li
227.162 179.478 li
226.879 179.101 226.572 178.571 226.275 178.057 cv
226.067 177.699 225.853 177.33 225.652 177.022 cv
225.313 177.092 224.959 177.176 224.577 177.279 cv
224.532 177.656 224.504 178.097 224.477 178.525 cv
224.441 179.099 224.404 179.692 224.324 180.143 cv
224.308 180.231 li
224.223 180.261 li
223.856 180.389 223.487 180.535 223.095 180.707 cv
223.013 180.743 li
222.942 180.69 li
222.568 180.41 222.127 179.991 221.701 179.587 cv
221.397 179.298 221.084 179.001 220.8 178.76 cv
220.489 178.925 220.174 179.106 219.843 179.308 cv
219.907 179.68 220.004 180.108 220.099 180.523 cv
220.227 181.088 220.361 181.672 220.411 182.13 cv
220.421 182.22 li
220.348 182.272 li
220.022 182.505 219.701 182.755 219.391 183.016 cv
219.323 183.074 li
219.239 183.043 li
218.804 182.881 218.266 182.605 217.746 182.339 cv
217.371 182.147 216.984 181.949 216.642 181.797 cv
216.383 182.05 216.125 182.317 215.875 182.593 cv
216.039 182.929 216.251 183.309 216.456 183.678 cv
216.741 184.187 217.035 184.714 217.212 185.143 cv
217.247 185.225 li
217.192 185.296 li
216.941 185.617 216.701 185.948 216.482 186.279 cv
216.432 186.354 li
216.343 186.347 li
215.881 186.313 215.29 186.2 214.718 186.091 cv
214.302 186.011 213.874 185.929 213.502 185.879 cv
213.318 186.205 213.145 186.533 212.987 186.857 cv
213.239 187.133 213.548 187.437 213.848 187.732 cv
214.265 188.142 214.697 188.567 214.989 188.929 cv
215.045 188.999 li
215.012 189.082 li
214.859 189.464 214.723 189.849 214.606 190.225 cv
214.579 190.311 li
214.492 190.33 li
214.042 190.426 213.447 190.484 212.872 190.54 cv
212.447 190.582 212.009 190.625 211.635 190.682 cv
211.546 191.067 211.474 191.422 211.416 191.764 cv
211.734 191.955 212.114 192.158 212.482 192.354 cv
213.003 192.632 213.541 192.918 213.925 193.186 cv
213.998 193.237 li
213.99 193.326 li
213.949 193.767 213.927 194.163 213.922 194.537 cv
213.921 194.627 li
213.841 194.67 li
213.441 194.886 212.892 195.107 212.361 195.321 cv
211.962 195.482 211.55 195.648 211.204 195.811 cv
211.214 196.007 211.224 196.189 211.241 196.373 cv
211.257 196.56 211.28 196.746 211.304 196.932 cv
211.673 197.031 212.109 197.122 212.531 197.21 cv
213.091 197.326 213.669 197.447 214.101 197.588 cv
214.187 197.617 li
214.204 197.705 li
214.276 198.072 214.368 198.458 214.486 198.885 cv
214.51 198.971 li
214.447 199.034 li
214.116 199.366 213.637 199.743 213.173 200.108 cv
212.846 200.366 212.508 200.633 212.229 200.877 cv
212.345 201.201 212.479 201.538 212.636 201.903 cv
213.015 201.893 213.453 201.858 213.879 201.823 cv
214.455 201.777 215.05 201.729 215.509 201.744 cv
215.599 201.747 li
215.64 201.827 li
215.821 202.175 216.023 202.529 216.242 202.88 cv
216.289 202.956 li
216.247 203.034 li
216.023 203.443 215.673 203.939 215.335 204.417 cv
215.092 204.76 214.842 205.113 214.644 205.429 cv
214.856 205.719 215.084 206.011 215.323 206.3 cv
215.68 206.184 216.087 206.028 216.483 205.876 cv
217.026 205.667 217.588 205.451 218.036 205.336 cv
218.123 205.314 li
218.185 205.379 li
218.461 205.667 218.755 205.951 219.057 206.221 cv
219.124 206.28 li
219.105 206.368 li
219.006 206.821 218.81 207.392 218.62 207.944 cv
218.483 208.342 218.342 208.754 218.24 209.114 cv
218.534 209.34 218.835 209.558 219.136 209.762 cv
219.445 209.552 219.791 209.288 220.126 209.033 cv
220.591 208.679 221.072 208.313 221.471 208.076 cv
221.548 208.03 li
221.626 208.075 li
221.979 208.278 222.34 208.468 222.699 208.639 cv
222.78 208.677 li
222.787 208.767 li
222.818 209.226 222.79 209.825 222.763 210.404 cv
222.744 210.829 222.723 211.268 222.727 211.645 cv
223.083 211.784 223.425 211.906 223.766 212.015 cv
224.003 211.727 224.259 211.379 224.507 211.041 cv
224.855 210.567 225.215 210.078 225.533 209.737 cv
225.594 209.672 li
225.681 209.693 li
226.101 209.794 226.489 209.872 226.87 209.932 cv
226.958 209.946 li
226.99 210.03 li
227.148 210.46 227.29 211.039 227.428 211.599 cv
227.53 212.014 227.635 212.442 227.745 212.804 cv
228.14 212.838 228.503 212.859 228.85 212.867 cv
228.993 212.528 229.138 212.127 229.279 211.737 cv
229.481 211.18 229.689 210.603 229.9 210.183 cv
229.941 210.102 li
230.03 210.098 li
230.437 210.078 230.847 210.042 231.251 209.989 cv
231.339 209.978 li
231.393 210.049 li
231.675 210.426 231.982 210.956 232.279 211.468 cv
232.487 211.827 232.701 212.197 232.902 212.505 cv
233.243 212.436 233.596 212.351 233.978 212.248 cv
234.023 211.871 234.05 211.431 234.077 211.004 cv
234.114 210.429 234.151 209.835 234.231 209.384 cv
234.246 209.296 li
234.332 209.266 li
234.698 209.139 235.067 208.993 235.459 208.82 cv
235.541 208.784 li
235.613 208.838 li
235.987 209.118 236.427 209.536 236.854 209.941 cv
237.158 210.229 237.471 210.526 237.754 210.767 cv
238.068 210.601 238.383 210.421 238.712 210.219 cv
238.648 209.848 238.551 209.42 238.457 209.006 cv
238.328 208.44 238.195 207.855 238.144 207.397 cv
238.134 207.308 li
238.207 207.256 li
238.534 207.021 238.856 206.77 239.164 206.511 cv
239.232 206.453 li
239.316 206.484 li
239.751 206.647 240.289 206.922 240.808 207.188 cv
241.184 207.38 241.571 207.578 241.913 207.73 cv
242.173 207.477 242.43 207.21 242.68 206.935 cv
242.515 206.598 242.303 206.218 242.098 205.85 cv
241.814 205.34 241.52 204.814 241.342 204.385 cv
241.308 204.303 li
241.363 204.232 li
241.614 203.912 241.853 203.581 242.073 203.249 cv
242.123 203.174 li
242.212 203.181 li
242.673 203.215 243.264 203.328 243.835 203.437 cv
244.251 203.516 244.68 203.598 245.053 203.649 cv
245.236 203.324 245.409 202.996 245.567 202.671 cv
245.316 202.395 245.007 202.092 244.708 201.797 cv
244.29 201.386 243.858 200.961 243.566 200.598 cv
243.51 200.528 li
243.543 200.445 li
243.695 200.066 243.831 199.681 243.949 199.302 cv
243.975 199.216 li
244.063 199.198 li
244.512 199.102 245.106 199.044 245.681 198.988 cv
246.106 198.946 246.545 198.903 246.919 198.846 cv
247.009 198.458 247.081 198.103 247.138 197.764 cv
246.821 197.573 246.442 197.371 246.074 197.174 cv
245.553 196.897 245.015 196.61 244.63 196.342 cv
244.556 196.291 li
244.564 196.202 li
244.606 195.761 244.628 195.365 244.633 194.991 cv
244.634 194.901 li
244.714 194.858 li
245.114 194.642 245.662 194.421 246.192 194.207 cv
246.592 194.046 247.005 193.879 247.351 193.717 cv
247.341 193.53 247.331 193.343 247.314 193.155 cv
247.297 192.967 247.274 192.781 247.251 192.595 cv
246.882 192.496 246.447 192.406 246.025 192.318 cv
cp
f
204.956 171.169 mo
204.813 171.505 li
190.759 163.391 li
190.809 163.161 li
190.964 162.449 191.043 161.731 191.043 161.027 cv
191.043 160.321 190.963 159.6 190.807 158.882 cv
190.756 158.652 li
204.808 150.538 li
204.951 150.874 li
206.318 154.09 207.011 157.506 207.011 161.027 cv
207.011 164.545 206.32 167.958 204.956 171.169 cv
cp
204.184 172.807 mo
203.768 173.623 203.307 174.42 202.814 175.178 cv
202.647 175.434 li
188.742 167.406 li
188.967 167.114 li
189.513 166.401 189.957 165.639 190.283 164.849 cv
190.424 164.509 li
204.324 172.534 li
204.184 172.807 li
cp
201.779 176.662 mo
197.551 182.262 191.148 185.959 184.21 186.806 cv
183.848 186.85 li
183.848 170.636 li
184.073 170.565 li
185.439 170.13 186.682 169.407 187.769 168.415 cv
187.944 168.256 li
201.999 176.37 li
201.779 176.662 li
cp
181.035 166.787 mo
178.982 166.787 177.069 165.684 176.043 163.908 cv
175.274 162.575 175.069 161.022 175.467 159.536 cv
175.866 158.051 176.819 156.809 178.152 156.04 cv
179.028 155.534 180.023 155.266 181.028 155.266 cv
183.081 155.266 184.994 156.37 186.019 158.147 cv
187.607 160.897 186.661 164.426 183.911 166.015 cv
183.036 166.52 182.041 166.787 181.035 166.787 cv
cp
182.712 186.954 mo
182.406 186.97 li
181.951 186.993 181.493 187.006 181.032 187.006 cv
180.574 187.006 180.121 186.994 179.67 186.971 cv
179.363 186.955 li
179.363 170.897 li
179.727 170.944 li
180.745 171.075 181.366 171.071 182.347 170.942 cv
182.712 170.894 li
182.712 186.954 li
cp
178.227 186.852 mo
177.865 186.808 li
170.926 185.963 164.521 182.269 160.293 176.672 cv
160.072 176.381 li
174.129 168.265 li
174.304 168.424 li
175.39 169.413 176.634 170.135 178.002 170.569 cv
178.227 170.641 li
178.227 186.852 li
cp
159.255 175.188 mo
158.765 174.435 158.303 173.638 157.884 172.818 cv
157.745 172.545 li
171.644 164.52 li
171.784 164.86 li
172.111 165.651 172.555 166.412 173.103 167.123 cv
173.328 167.415 li
159.422 175.444 li
159.255 175.188 li
cp
157.113 171.181 mo
155.746 167.964 155.052 164.548 155.052 161.027 cv
155.052 157.509 155.744 154.097 157.108 150.885 cv
157.25 150.549 li
171.304 158.663 li
171.254 158.893 li
171.099 159.606 171.021 160.324 171.021 161.027 cv
171.021 161.732 171.1 162.454 171.256 163.173 cv
171.307 163.404 li
157.255 171.516 li
157.113 171.181 li
cp
157.879 149.247 mo
158.296 148.43 158.756 147.632 159.248 146.877 cv
159.415 146.62 li
173.321 154.649 li
173.096 154.941 li
172.55 155.653 172.106 156.415 171.78 157.205 cv
171.639 157.545 li
157.739 149.52 li
157.879 149.247 li
cp
160.284 145.392 mo
164.512 139.793 170.915 136.095 177.853 135.249 cv
178.215 135.204 li
178.215 151.418 li
177.99 151.49 li
176.624 151.924 175.38 152.648 174.294 153.639 cv
174.119 153.798 li
160.064 145.684 li
160.284 145.392 li
cp
179.351 135.1 mo
179.658 135.084 li
180.562 135.039 181.486 135.036 182.394 135.084 cv
182.7 135.1 li
182.7 151.158 li
182.336 151.111 li
181.319 150.98 180.697 150.983 179.716 151.112 cv
179.351 151.16 li
179.351 135.1 li
cp
183.836 135.203 mo
184.198 135.247 li
191.138 136.091 197.543 139.786 201.771 145.382 cv
201.991 145.674 li
187.935 153.789 li
187.76 153.63 li
186.674 152.642 185.429 151.92 184.061 151.485 cv
183.836 151.414 li
183.836 135.203 li
cp
202.808 146.867 mo
203.304 147.627 203.765 148.424 204.179 149.237 cv
204.318 149.51 li
190.42 157.533 li
190.279 157.194 li
189.951 156.404 189.507 155.643 188.96 154.931 cv
188.735 154.639 li
202.641 146.61 li
202.808 146.867 li
cp
216.435 158.222 mo
215.4 157.884 214.329 157.535 213.421 157.178 cv
213.243 157.108 li
213.219 156.918 li
213.028 155.405 212.73 153.902 212.333 152.453 cv
212.283 152.269 li
212.42 152.136 li
213.149 151.426 214.042 150.662 214.904 149.924 cv
216.006 148.981 217.143 148.007 217.918 147.162 cv
217.624 146.381 217.29 145.58 216.899 144.724 cv
215.73 144.671 214.208 144.79 212.734 144.905 cv
211.631 144.992 210.49 145.081 209.498 145.098 cv
209.307 145.101 li
209.213 144.936 li
208.461 143.622 207.608 142.348 206.677 141.148 cv
206.56 140.998 li
206.635 140.823 li
207.032 139.902 207.555 138.872 208.061 137.875 cv
208.725 136.566 209.411 135.214 209.805 134.122 cv
209.206 133.482 208.579 132.855 207.938 132.255 cv
206.847 132.648 205.497 133.333 204.189 133.996 cv
203.191 134.502 202.158 135.026 201.235 135.423 cv
201.061 135.498 li
200.91 135.381 li
199.719 134.456 198.445 133.603 197.123 132.845 cv
196.958 132.751 li
196.961 132.56 li
196.978 131.567 197.067 130.425 197.154 129.32 cv
197.269 127.848 197.388 126.327 197.334 125.16 cv
196.481 124.77 195.68 124.435 194.897 124.14 cv
194.05 124.915 193.076 126.054 192.132 127.157 cv
191.395 128.019 190.632 128.91 189.923 129.639 cv
189.79 129.776 li
189.606 129.725 li
188.156 129.329 186.654 129.031 185.141 128.839 cv
184.951 128.815 li
184.881 128.637 li
184.524 127.73 184.175 126.661 183.838 125.627 cv
183.373 124.202 182.892 122.73 182.384 121.659 cv
181.485 121.624 180.578 121.624 179.678 121.659 cv
179.171 122.73 178.691 124.2 178.226 125.625 cv
177.889 126.66 177.539 127.729 177.182 128.637 cv
177.112 128.815 li
176.922 128.839 li
175.409 129.031 173.907 129.329 172.457 129.725 cv
172.273 129.776 li
172.14 129.639 li
171.431 128.91 170.668 128.019 169.931 127.157 cv
168.987 126.054 168.013 124.915 167.167 124.14 cv
166.383 124.435 165.582 124.77 164.729 125.16 cv
164.675 126.328 164.794 127.85 164.91 129.324 cv
164.996 130.427 165.086 131.568 165.103 132.56 cv
165.106 132.751 li
164.941 132.845 li
163.62 133.602 162.346 134.455 161.153 135.381 cv
161.002 135.498 li
160.827 135.423 li
159.906 135.026 158.874 134.503 157.876 133.997 cv
156.568 133.333 155.218 132.648 154.127 132.254 cv
153.487 132.853 152.86 133.479 152.259 134.121 cv
152.653 135.212 153.337 136.561 154 137.869 cv
154.506 138.867 155.03 139.9 155.427 140.822 cv
155.503 140.997 li
155.386 141.148 li
154.457 142.346 153.603 143.62 152.851 144.935 cv
152.757 145.101 li
152.565 145.098 li
151.572 145.081 150.43 144.991 149.324 144.905 cv
147.853 144.789 146.331 144.671 145.164 144.724 cv
144.774 145.58 144.439 146.381 144.145 147.162 cv
144.92 148.008 146.059 148.982 147.161 149.926 cv
148.024 150.664 148.915 151.426 149.643 152.136 cv
149.78 152.269 li
149.73 152.453 li
149.333 153.902 149.036 155.405 148.844 156.918 cv
148.82 157.108 li
148.642 157.178 li
147.734 157.535 146.663 157.884 145.629 158.222 cv
144.204 158.687 142.734 159.166 141.664 159.674 cv
141.646 160.123 141.631 160.573 141.631 161.027 cv
141.631 161.481 141.646 161.93 141.664 162.38 cv
142.734 162.888 144.203 163.367 145.627 163.832 cv
146.663 164.17 147.733 164.519 148.642 164.877 cv
148.82 164.947 li
148.844 165.137 li
149.035 166.649 149.333 168.151 149.73 169.602 cv
149.78 169.786 li
149.643 169.919 li
148.915 170.629 148.023 171.391 147.16 172.129 cv
146.058 173.073 144.92 174.047 144.144 174.893 cv
144.441 175.68 144.776 176.481 145.164 177.33 cv
146.333 177.384 147.854 177.264 149.327 177.149 cv
150.431 177.062 151.572 176.973 152.564 176.956 cv
152.755 176.953 li
152.85 177.119 li
153.602 178.432 154.455 179.707 155.385 180.907 cv
155.503 181.057 li
155.427 181.232 li
155.03 182.154 154.506 183.186 154 184.185 cv
153.337 185.492 152.652 186.842 152.258 187.932 cv
152.859 188.573 153.486 189.2 154.126 189.799 cv
155.216 189.405 156.567 188.721 157.876 188.058 cv
158.874 187.552 159.905 187.029 160.827 186.632 cv
161.002 186.557 li
161.153 186.674 li
162.351 187.603 163.625 188.456 164.94 189.208 cv
165.106 189.303 li
165.103 189.494 li
165.086 190.486 164.996 191.627 164.91 192.73 cv
164.794 194.205 164.675 195.726 164.729 196.895 cv
165.582 197.284 166.383 197.619 167.167 197.915 cv
168.012 197.139 168.986 196.001 169.929 194.898 cv
170.667 194.036 171.43 193.144 172.139 192.415 cv
172.272 192.279 li
172.456 192.329 li
173.905 192.725 175.408 193.023 176.921 193.215 cv
177.111 193.239 li
177.181 193.417 li
177.539 194.326 177.889 195.397 178.227 196.433 cv
178.691 197.856 179.171 199.326 179.678 200.395 cv
180.578 200.43 181.485 200.43 182.384 200.395 cv
182.892 199.325 183.372 197.853 183.838 196.428 cv
184.175 195.394 184.524 194.324 184.881 193.417 cv
184.951 193.239 li
185.141 193.215 li
186.654 193.023 188.156 192.725 189.606 192.329 cv
189.79 192.279 li
189.923 192.415 li
190.632 193.144 191.395 194.035 192.132 194.897 cv
193.076 196.001 194.05 197.139 194.897 197.915 cv
195.68 197.619 196.481 197.284 197.334 196.895 cv
197.388 195.726 197.269 194.205 197.154 192.73 cv
197.067 191.627 196.978 190.486 196.961 189.494 cv
196.957 189.303 li
197.123 189.208 li
198.443 188.452 199.717 187.6 200.911 186.672 cv
201.062 186.555 li
201.237 186.631 li
202.157 187.028 203.188 187.551 204.185 188.057 cv
205.493 188.721 206.845 189.406 207.936 189.8 cv
208.576 189.202 209.203 188.575 209.805 187.933 cv
209.411 186.843 208.727 185.493 208.064 184.186 cv
207.557 183.187 207.033 182.154 206.637 181.231 cv
206.561 181.056 li
206.678 180.906 li
207.611 179.703 208.463 178.429 209.213 177.119 cv
209.307 176.953 li
209.498 176.956 li
210.49 176.973 211.631 177.062 212.734 177.149 cv
213.955 177.245 215.216 177.344 216.269 177.344 cv
216.269 177.344 li
216.488 177.344 216.699 177.339 216.899 177.33 cv
217.287 176.481 217.623 175.68 217.92 174.893 cv
217.144 174.047 216.006 173.074 214.904 172.131 cv
214.042 171.393 213.149 170.629 212.42 169.919 cv
212.283 169.786 li
212.333 169.602 li
212.73 168.151 213.028 166.649 213.219 165.137 cv
213.243 164.947 li
213.421 164.877 li
214.33 164.519 215.4 164.17 216.436 163.832 cv
217.86 163.367 219.33 162.888 220.4 162.38 cv
220.417 161.93 220.432 161.481 220.432 161.027 cv
220.432 160.573 220.417 160.123 220.4 159.674 cv
219.33 159.166 217.859 158.687 216.435 158.222 cv
cp
f
250.818 136.945 mo
250.739 137.131 li
242.955 132.637 li
242.983 132.509 li
243.068 132.114 243.112 131.717 243.112 131.327 cv
243.112 130.936 243.068 130.536 242.982 130.139 cv
242.954 130.011 li
250.736 125.518 li
250.815 125.704 li
251.573 127.485 251.956 129.377 251.956 131.327 cv
251.956 133.276 251.574 135.166 250.818 136.945 cv
cp
250.391 137.851 mo
250.161 138.304 249.905 138.745 249.632 139.165 cv
249.54 139.307 li
241.838 134.86 li
241.962 134.698 li
242.265 134.304 242.511 133.882 242.692 133.444 cv
242.77 133.256 li
250.468 137.7 li
250.391 137.851 li
cp
249.059 139.987 mo
246.717 143.088 243.17 145.136 239.328 145.605 cv
239.127 145.63 li
239.127 136.649 li
239.252 136.61 li
240.008 136.369 240.697 135.968 241.299 135.419 cv
241.396 135.331 li
249.181 139.825 li
249.059 139.987 li
cp
237.569 134.518 mo
236.432 134.518 235.373 133.906 234.804 132.923 cv
234.378 132.184 234.265 131.324 234.485 130.501 cv
234.706 129.678 235.234 128.991 235.973 128.565 cv
236.458 128.284 237.008 128.136 237.566 128.136 cv
238.702 128.136 239.762 128.748 240.33 129.732 cv
241.209 131.255 240.685 133.21 239.162 134.09 cv
238.677 134.37 238.126 134.518 237.569 134.518 cv
cp
238.498 145.688 mo
238.328 145.696 li
238.077 145.709 237.823 145.716 237.567 145.716 cv
237.314 145.716 237.063 145.709 236.813 145.697 cv
236.643 145.688 li
236.643 136.794 li
236.845 136.82 li
237.408 136.892 237.752 136.89 238.296 136.819 cv
238.498 136.792 li
238.498 145.688 li
cp
236.014 145.631 mo
235.813 145.606 li
231.97 145.138 228.423 143.092 226.08 139.992 cv
225.959 139.831 li
233.744 135.336 li
233.841 135.424 li
234.442 135.972 235.132 136.372 235.889 136.612 cv
236.014 136.652 li
236.014 145.631 li
cp
225.506 139.17 mo
225.234 138.753 224.979 138.312 224.747 137.858 cv
224.669 137.706 li
232.368 133.262 li
232.445 133.45 li
232.627 133.888 232.873 134.31 233.176 134.703 cv
233.301 134.865 li
225.598 139.312 li
225.506 139.17 li
cp
224.319 136.951 mo
223.562 135.169 223.178 133.277 223.178 131.327 cv
223.178 129.379 223.561 127.489 224.316 125.71 cv
224.395 125.524 li
232.18 130.018 li
232.152 130.145 li
232.066 130.54 232.022 130.938 232.022 131.327 cv
232.022 131.718 232.066 132.118 232.153 132.516 cv
232.181 132.643 li
224.398 137.137 li
224.319 136.951 li
cp
224.744 124.802 mo
224.974 124.35 225.23 123.908 225.502 123.49 cv
225.595 123.348 li
233.297 127.794 li
233.172 127.956 li
232.869 128.351 232.624 128.773 232.443 129.21 cv
232.365 129.398 li
224.666 124.954 li
224.744 124.802 li
cp
226.076 122.667 mo
228.417 119.566 231.964 117.518 235.807 117.049 cv
236.007 117.024 li
236.007 126.005 li
235.882 126.045 li
235.126 126.285 234.437 126.686 233.835 127.235 cv
233.739 127.323 li
225.954 122.829 li
226.076 122.667 li
cp
236.637 116.967 mo
236.806 116.958 li
237.307 116.933 237.819 116.932 238.322 116.958 cv
238.491 116.967 li
238.491 125.861 li
238.29 125.835 li
237.727 125.762 237.382 125.764 236.839 125.836 cv
236.637 125.862 li
236.637 116.967 li
cp
239.121 117.024 mo
239.321 117.048 li
243.165 117.516 246.712 119.562 249.054 122.662 cv
249.176 122.823 li
241.391 127.318 li
241.294 127.23 li
240.692 126.683 240.003 126.283 239.245 126.042 cv
239.121 126.002 li
239.121 117.024 li
cp
249.629 123.484 mo
249.904 123.905 250.159 124.347 250.388 124.797 cv
250.465 124.948 li
242.767 129.392 li
242.689 129.204 li
242.508 128.767 242.262 128.345 241.959 127.951 cv
241.834 127.789 li
249.536 123.342 li
249.629 123.484 li
cp
257.176 129.773 mo
256.603 129.586 256.01 129.393 255.507 129.195 cv
255.409 129.156 li
255.395 129.051 li
255.289 128.213 255.124 127.381 254.905 126.578 cv
254.877 126.476 li
254.952 126.403 li
255.356 126.009 255.851 125.586 256.328 125.177 cv
256.939 124.655 257.569 124.116 257.998 123.647 cv
257.835 123.215 257.65 122.772 257.434 122.297 cv
256.786 122.268 255.943 122.334 255.127 122.398 cv
254.515 122.446 253.884 122.495 253.334 122.505 cv
253.228 122.506 li
253.176 122.414 li
252.76 121.687 252.288 120.981 251.772 120.317 cv
251.707 120.233 li
251.749 120.136 li
251.968 119.627 252.258 119.056 252.538 118.504 cv
252.906 117.778 253.286 117.03 253.504 116.425 cv
253.172 116.07 252.825 115.723 252.47 115.391 cv
251.866 115.609 251.118 115.988 250.394 116.355 cv
249.841 116.636 249.269 116.926 248.758 117.146 cv
248.661 117.187 li
248.577 117.123 li
247.918 116.61 247.212 116.138 246.48 115.718 cv
246.389 115.666 li
246.39 115.56 li
246.399 115.01 246.449 114.377 246.497 113.765 cv
246.561 112.95 246.627 112.108 246.597 111.461 cv
246.125 111.245 245.681 111.06 245.247 110.896 cv
244.778 111.326 244.238 111.956 243.716 112.567 cv
243.307 113.045 242.885 113.538 242.492 113.942 cv
242.418 114.018 li
242.317 113.99 li
241.514 113.77 240.681 113.605 239.843 113.499 cv
239.738 113.486 li
239.7 113.387 li
239.501 112.885 239.308 112.293 239.122 111.72 cv
238.864 110.931 238.598 110.115 238.316 109.522 cv
237.818 109.503 237.316 109.503 236.818 109.522 cv
236.537 110.115 236.271 110.93 236.013 111.719 cv
235.827 112.292 235.633 112.884 235.435 113.387 cv
235.396 113.486 li
235.291 113.499 li
234.453 113.605 233.621 113.77 232.818 113.99 cv
232.716 114.018 li
232.643 113.942 li
232.25 113.538 231.827 113.045 231.419 112.567 cv
230.896 111.956 230.356 111.326 229.888 110.896 cv
229.454 111.06 229.01 111.245 228.538 111.461 cv
228.508 112.108 228.574 112.951 228.638 113.767 cv
228.686 114.379 228.735 115.01 228.745 115.56 cv
228.746 115.666 li
228.655 115.718 li
227.924 116.137 227.218 116.61 226.557 117.123 cv
226.473 117.187 li
226.376 117.145 li
225.866 116.926 225.295 116.636 224.742 116.356 cv
224.018 115.988 223.27 115.609 222.665 115.391 cv
222.311 115.722 221.964 116.069 221.631 116.424 cv
221.849 117.029 222.228 117.776 222.595 118.5 cv
222.876 119.053 223.166 119.625 223.386 120.136 cv
223.428 120.233 li
223.363 120.316 li
222.848 120.98 222.376 121.686 221.959 122.414 cv
221.906 122.506 li
221.801 122.504 li
221.251 122.495 220.618 122.445 220.005 122.397 cv
219.19 122.334 218.348 122.268 217.701 122.297 cv
217.485 122.772 217.299 123.215 217.137 123.647 cv
217.566 124.116 218.197 124.656 218.807 125.178 cv
219.285 125.587 219.778 126.01 220.182 126.403 cv
220.258 126.476 li
220.23 126.578 li
220.01 127.381 219.845 128.213 219.739 129.051 cv
219.726 129.156 li
219.628 129.195 li
219.125 129.393 218.532 129.586 217.958 129.773 cv
217.169 130.031 216.355 130.297 215.762 130.578 cv
215.753 130.826 215.744 131.076 215.744 131.327 cv
215.744 131.578 215.753 131.827 215.762 132.076 cv
216.355 132.358 217.169 132.623 217.958 132.881 cv
218.531 133.068 219.124 133.261 219.628 133.46 cv
219.726 133.499 li
219.739 133.603 li
219.845 134.441 220.01 135.273 220.23 136.077 cv
220.258 136.179 li
220.182 136.252 li
219.778 136.645 219.285 137.068 218.807 137.476 cv
218.196 137.999 217.566 138.538 217.136 139.007 cv
217.3 139.443 217.486 139.886 217.701 140.357 cv
218.349 140.387 219.191 140.321 220.007 140.257 cv
220.618 140.209 221.251 140.159 221.8 140.15 cv
221.906 140.148 li
221.958 140.24 li
222.374 140.967 222.847 141.673 223.363 142.338 cv
223.428 142.421 li
223.386 142.518 li
223.166 143.029 222.876 143.601 222.595 144.154 cv
222.228 144.878 221.848 145.625 221.631 146.229 cv
221.963 146.584 222.31 146.931 222.665 147.263 cv
223.269 147.045 224.017 146.666 224.742 146.299 cv
225.295 146.018 225.866 145.729 226.377 145.509 cv
226.473 145.467 li
226.557 145.532 li
227.22 146.047 227.926 146.519 228.655 146.936 cv
228.746 146.988 li
228.745 147.094 li
228.735 147.644 228.686 148.276 228.638 148.887 cv
228.574 149.703 228.508 150.546 228.538 151.193 cv
229.01 151.409 229.454 151.595 229.888 151.758 cv
230.356 151.329 230.895 150.698 231.418 150.087 cv
231.827 149.61 232.249 149.116 232.642 148.712 cv
232.716 148.637 li
232.817 148.664 li
233.62 148.884 234.453 149.049 235.29 149.155 cv
235.396 149.168 li
235.434 149.267 li
235.633 149.77 235.827 150.364 236.014 150.937 cv
236.271 151.726 236.537 152.54 236.818 153.132 cv
237.316 153.151 237.818 153.151 238.316 153.132 cv
238.598 152.539 238.864 151.724 239.122 150.935 cv
239.308 150.362 239.501 149.77 239.7 149.267 cv
239.738 149.168 li
239.843 149.155 li
240.681 149.049 241.514 148.884 242.317 148.664 cv
242.418 148.637 li
242.492 148.712 li
242.885 149.116 243.307 149.61 243.716 150.087 cv
244.238 150.698 244.778 151.329 245.247 151.758 cv
245.681 151.595 246.125 151.409 246.597 151.193 cv
246.627 150.546 246.561 149.703 246.497 148.887 cv
246.449 148.276 246.399 147.644 246.39 147.094 cv
246.388 146.988 li
246.48 146.936 li
247.211 146.517 247.917 146.045 248.578 145.531 cv
248.662 145.467 li
248.759 145.509 li
249.268 145.728 249.839 146.018 250.391 146.298 cv
251.116 146.666 251.865 147.046 252.469 147.264 cv
252.823 146.933 253.171 146.585 253.504 146.23 cv
253.286 145.626 252.907 144.878 252.54 144.154 cv
252.259 143.601 251.969 143.029 251.749 142.518 cv
251.707 142.421 li
251.772 142.337 li
252.289 141.671 252.761 140.965 253.176 140.24 cv
253.228 140.148 li
253.334 140.15 li
253.884 140.159 254.515 140.209 255.127 140.257 cv
255.803 140.31 256.501 140.364 257.084 140.364 cv
257.085 140.364 li
257.206 140.364 257.322 140.362 257.434 140.357 cv
257.648 139.886 257.834 139.443 257.999 139.007 cv
257.569 138.538 256.939 138 256.328 137.477 cv
255.851 137.068 255.356 136.646 254.952 136.252 cv
254.877 136.178 li
254.905 136.077 li
255.124 135.273 255.289 134.441 255.395 133.603 cv
255.409 133.499 li
255.507 133.46 li
256.01 133.261 256.603 133.068 257.177 132.881 cv
257.965 132.623 258.78 132.358 259.372 132.076 cv
259.382 131.827 259.39 131.578 259.39 131.327 cv
259.39 131.076 259.382 130.826 259.372 130.578 cv
258.78 130.297 257.965 130.031 257.176 129.773 cv
cp
f
236.281 100.003 mo
236.243 100.093 li
232.488 97.9251 li
232.501 97.8636 li
232.543 97.6732 232.564 97.4814 232.564 97.2935 cv
232.564 97.1049 232.543 96.9121 232.501 96.7204 cv
232.487 96.6589 li
236.241 94.4915 li
236.279 94.5811 li
236.644 95.4404 236.83 96.353 236.83 97.2935 cv
236.83 98.2333 236.645 99.1449 236.281 100.003 cv
cp
236.075 100.44 mo
235.963 100.658 235.84 100.871 235.709 101.074 cv
235.664 101.142 li
231.949 98.9975 li
232.009 98.9195 li
232.155 98.7291 232.274 98.5256 232.361 98.3146 cv
232.399 98.2236 li
236.112 100.367 li
236.075 100.44 li
cp
235.432 101.47 mo
234.303 102.966 232.592 103.954 230.739 104.18 cv
230.642 104.192 li
230.642 99.8605 li
230.702 99.8414 li
231.067 99.7254 231.399 99.5321 231.689 99.2672 cv
231.736 99.2248 li
235.491 101.392 li
235.432 101.47 li
cp
229.89 98.8324 mo
229.342 98.8324 228.831 98.5376 228.557 98.063 cv
228.351 97.707 228.297 97.2922 228.403 96.8953 cv
228.509 96.4983 228.764 96.1665 229.12 95.9611 cv
229.354 95.8259 229.62 95.7545 229.889 95.7545 cv
230.437 95.7545 230.948 96.0494 231.222 96.524 cv
231.646 97.2587 231.393 98.2016 230.659 98.6259 cv
230.425 98.761 230.159 98.8324 229.89 98.8324 cv
cp
230.338 104.22 mo
230.256 104.224 li
230.135 104.23 230.013 104.234 229.889 104.234 cv
229.767 104.234 229.646 104.23 229.526 104.224 cv
229.444 104.22 li
229.444 99.9302 li
229.541 99.9426 li
229.813 99.9777 229.979 99.9768 230.241 99.9422 cv
230.338 99.9293 li
230.338 104.22 li
cp
229.14 104.192 mo
229.043 104.181 li
227.19 103.955 225.479 102.968 224.349 101.473 cv
224.29 101.395 li
228.046 99.2271 li
228.092 99.2696 li
228.382 99.5339 228.715 99.7266 229.08 99.8426 cv
229.14 99.8617 li
229.14 104.192 li
cp
224.072 101.076 mo
223.941 100.875 223.818 100.662 223.706 100.443 cv
223.669 100.37 li
227.381 98.2267 li
227.419 98.3176 li
227.506 98.5287 227.625 98.7321 227.771 98.9219 cv
227.832 99 li
224.117 101.145 li
224.072 101.076 li
cp
223.5 100.006 mo
223.134 99.1466 222.949 98.234 222.949 97.2935 cv
222.949 96.3537 223.134 95.4421 223.498 94.5841 cv
223.536 94.4944 li
227.291 96.6619 li
227.277 96.7235 li
227.236 96.9138 227.215 97.1056 227.215 97.2935 cv
227.215 97.4819 227.236 97.6747 227.278 97.8668 cv
227.291 97.9283 li
223.538 100.096 li
223.5 100.006 li
cp
223.704 94.1465 mo
223.816 93.9282 223.939 93.7152 224.07 93.5133 cv
224.115 93.4448 li
227.83 95.5895 li
227.77 95.6675 li
227.624 95.8579 227.505 96.0614 227.418 96.2723 cv
227.38 96.3632 li
223.667 94.2195 li
223.704 94.1465 li
cp
224.347 93.1168 mo
225.476 91.6209 227.187 90.6331 229.04 90.4069 cv
229.137 90.395 li
229.137 94.7265 li
229.077 94.7456 li
228.712 94.8618 228.38 95.055 228.089 95.3197 cv
228.043 95.3623 li
224.288 93.1947 li
224.347 93.1168 li
cp
229.44 90.3671 mo
229.522 90.363 li
229.764 90.3508 230.011 90.3502 230.253 90.3628 cv
230.335 90.3671 li
230.335 94.6569 li
230.238 94.6444 li
229.966 94.6094 229.8 94.6103 229.538 94.6448 cv
229.44 94.6577 li
229.44 90.3671 li
cp
230.639 90.3946 mo
230.735 90.4064 li
232.589 90.632 234.3 91.6189 235.43 93.1141 cv
235.489 93.1919 li
231.734 95.3599 li
231.687 95.3175 li
231.397 95.0534 231.064 94.8606 230.699 94.7445 cv
230.639 94.7253 li
230.639 90.3946 li
cp
235.707 93.5106 mo
235.839 93.7137 235.963 93.9268 236.073 94.1438 cv
236.11 94.2168 li
232.398 96.3601 li
232.36 96.2694 li
232.272 96.0585 232.154 95.8552 232.007 95.6651 cv
231.947 95.5871 li
235.662 93.4421 li
235.707 93.5106 li
cp
239.347 96.5442 mo
239.071 96.4539 238.785 96.3607 238.542 96.2652 cv
238.495 96.2465 li
238.488 96.1958 li
238.437 95.7915 238.357 95.3901 238.252 95.0029 cv
238.238 94.9538 li
238.275 94.9184 li
238.469 94.7285 238.708 94.5245 238.938 94.3273 cv
239.233 94.0754 239.536 93.8153 239.744 93.5894 cv
239.665 93.3809 239.576 93.167 239.471 92.9383 cv
239.159 92.924 238.752 92.9558 238.359 92.9866 cv
238.064 93.0098 237.759 93.0337 237.494 93.0382 cv
237.443 93.039 li
237.418 92.9947 li
237.217 92.6438 236.989 92.3034 236.74 91.983 cv
236.709 91.9427 li
236.729 91.896 li
236.835 91.6501 236.975 91.3747 237.11 91.1084 cv
237.288 90.7587 237.471 90.3977 237.576 90.1059 cv
237.416 89.9349 237.249 89.7674 237.077 89.6072 cv
236.786 89.7123 236.425 89.8951 236.076 90.0723 cv
235.809 90.2075 235.533 90.3474 235.287 90.4535 cv
235.24 90.4736 li
235.2 90.4424 li
234.882 90.1951 234.541 89.9673 234.188 89.7649 cv
234.144 89.7396 li
234.145 89.6887 li
234.149 89.4234 234.173 89.1183 234.196 88.8232 cv
234.227 88.4297 234.259 88.0236 234.245 87.7116 cv
234.017 87.6077 233.803 87.5181 233.593 87.4391 cv
233.367 87.6464 233.107 87.9506 232.855 88.2453 cv
232.658 88.4755 232.454 88.7136 232.265 88.9083 cv
232.229 88.9448 li
232.18 88.9314 li
231.793 88.8255 231.391 88.7458 230.987 88.6947 cv
230.937 88.6883 li
230.918 88.6407 li
230.822 88.3983 230.729 88.1128 230.639 87.8366 cv
230.515 87.4558 230.386 87.0626 230.251 86.7765 cv
230.011 86.7673 229.768 86.7673 229.528 86.7765 cv
229.392 87.0626 229.264 87.4554 229.14 87.836 cv
229.05 88.1124 228.956 88.3981 228.861 88.6407 cv
228.842 88.6883 li
228.792 88.6947 li
228.387 88.7458 227.986 88.8255 227.599 88.9314 cv
227.55 88.9448 li
227.514 88.9083 li
227.325 88.7136 227.121 88.4755 226.924 88.2453 cv
226.672 87.9506 226.411 87.6464 226.185 87.4391 cv
225.976 87.5181 225.762 87.6077 225.534 87.7116 cv
225.52 88.0238 225.552 88.4303 225.582 88.8241 cv
225.606 89.1189 225.629 89.4236 225.634 89.6887 cv
225.635 89.7396 li
225.591 89.7649 li
225.238 89.9671 224.898 90.195 224.579 90.4424 cv
224.539 90.4736 li
224.492 90.4534 li
224.246 90.3474 223.97 90.2076 223.704 90.0724 cv
223.354 89.8951 222.993 89.7121 222.702 89.607 cv
222.531 89.7669 222.363 89.9342 222.203 90.1056 cv
222.308 90.397 222.491 90.7575 222.668 91.1068 cv
222.803 91.3737 222.943 91.6495 223.049 91.8958 cv
223.069 91.9425 li
223.038 91.9828 li
222.79 92.3029 222.562 92.6434 222.361 92.9946 cv
222.336 93.0389 li
222.285 93.038 li
222.019 93.0335 221.714 93.0096 221.419 92.9865 cv
221.026 92.9557 220.619 92.924 220.307 92.9383 cv
220.203 93.167 220.114 93.3809 220.035 93.5894 cv
220.242 93.8156 220.547 94.0758 220.841 94.3279 cv
221.071 94.525 221.309 94.7287 221.504 94.9183 cv
221.541 94.9538 li
221.527 95.0029 li
221.421 95.3901 221.342 95.7915 221.291 96.1958 cv
221.284 96.2465 li
221.237 96.2652 li
220.994 96.3607 220.708 96.4539 220.432 96.5442 cv
220.051 96.6683 219.658 96.7964 219.372 96.9321 cv
219.368 97.052 219.364 97.1722 219.364 97.2935 cv
219.364 97.4146 219.368 97.5348 219.372 97.6548 cv
219.658 97.7906 220.051 97.9186 220.431 98.0428 cv
220.708 98.1331 220.994 98.2264 221.237 98.322 cv
221.284 98.3408 li
221.291 98.3914 li
221.342 98.7954 221.421 99.1967 221.527 99.5844 cv
221.541 99.6335 li
221.504 99.6689 li
221.309 99.8585 221.071 100.062 220.841 100.259 cv
220.546 100.511 220.242 100.772 220.035 100.998 cv
220.114 101.208 220.204 101.422 220.307 101.649 cv
220.62 101.663 221.026 101.631 221.42 101.6 cv
221.715 101.577 222.019 101.553 222.284 101.549 cv
222.335 101.548 li
222.361 101.592 li
222.562 101.943 222.789 102.284 223.038 102.604 cv
223.069 102.645 li
223.049 102.691 li
222.943 102.937 222.803 103.213 222.668 103.48 cv
222.491 103.829 222.308 104.19 222.203 104.481 cv
222.363 104.652 222.531 104.82 222.702 104.98 cv
222.993 104.875 223.354 104.692 223.703 104.515 cv
223.97 104.379 224.246 104.24 224.492 104.134 cv
224.539 104.114 li
224.579 104.145 li
224.899 104.393 225.239 104.621 225.591 104.822 cv
225.635 104.847 li
225.634 104.898 li
225.629 105.163 225.606 105.468 225.582 105.763 cv
225.552 106.157 225.52 106.563 225.534 106.875 cv
225.762 106.979 225.976 107.069 226.185 107.148 cv
226.411 106.941 226.671 106.637 226.923 106.342 cv
227.121 106.112 227.324 105.873 227.514 105.679 cv
227.549 105.642 li
227.598 105.656 li
227.986 105.762 228.387 105.841 228.791 105.892 cv
228.842 105.899 li
228.861 105.946 li
228.956 106.189 229.05 106.475 229.14 106.752 cv
229.264 107.132 229.392 107.525 229.528 107.811 cv
229.768 107.82 230.011 107.82 230.251 107.811 cv
230.386 107.525 230.515 107.131 230.639 106.751 cv
230.729 106.474 230.822 106.189 230.918 105.946 cv
230.937 105.899 li
230.987 105.892 li
231.391 105.841 231.793 105.762 232.18 105.656 cv
232.229 105.642 li
232.265 105.679 li
232.454 105.873 232.658 106.112 232.855 106.342 cv
233.107 106.636 233.367 106.941 233.593 107.148 cv
233.803 107.069 234.017 106.979 234.245 106.875 cv
234.259 106.563 234.227 106.157 234.196 105.763 cv
234.173 105.468 234.149 105.163 234.145 104.898 cv
234.144 104.847 li
234.188 104.822 li
234.541 104.62 234.881 104.392 235.2 104.145 cv
235.24 104.113 li
235.287 104.133 li
235.533 104.239 235.808 104.379 236.075 104.514 cv
236.424 104.692 236.785 104.875 237.077 104.98 cv
237.248 104.82 237.415 104.653 237.576 104.481 cv
237.471 104.19 237.288 103.83 237.111 103.48 cv
236.976 103.213 236.836 102.937 236.73 102.691 cv
236.709 102.644 li
236.741 102.604 li
236.99 102.283 237.218 101.942 237.418 101.592 cv
237.443 101.548 li
237.494 101.549 li
237.759 101.553 238.064 101.577 238.359 101.6 cv
238.685 101.626 239.022 101.652 239.303 101.652 cv
239.303 101.652 li
239.361 101.652 239.418 101.651 239.471 101.649 cv
239.575 101.422 239.665 101.208 239.744 100.998 cv
239.537 100.772 239.233 100.512 238.938 100.26 cv
238.708 100.063 238.469 99.8587 238.275 99.6689 cv
238.238 99.6334 li
238.252 99.5844 li
238.357 99.1967 238.437 98.7954 238.488 98.3914 cv
238.495 98.3408 li
238.542 98.322 li
238.785 98.2264 239.071 98.1331 239.348 98.0428 cv
239.728 97.9186 240.121 97.7906 240.406 97.6548 cv
240.411 97.5348 240.415 97.4146 240.415 97.2935 cv
240.415 97.1722 240.411 97.052 240.406 96.9321 cv
240.121 96.7964 239.728 96.6683 239.347 96.5442 cv
cp
f
161.686 209.84 mo
161.639 209.952 li
156.966 207.254 li
156.983 207.178 li
157.034 206.941 157.06 206.702 157.06 206.468 cv
157.06 206.233 157.034 205.994 156.982 205.755 cv
156.965 205.678 li
161.637 202.981 li
161.684 203.092 li
162.139 204.162 162.369 205.298 162.369 206.468 cv
162.369 207.638 162.14 208.772 161.686 209.84 cv
cp
161.43 210.385 mo
161.291 210.656 161.138 210.921 160.974 211.173 cv
160.918 211.258 li
156.295 208.589 li
156.37 208.492 li
156.552 208.255 156.699 208.002 156.808 207.739 cv
156.854 207.626 li
161.476 210.294 li
161.43 210.385 li
cp
160.63 211.667 mo
159.224 213.528 157.095 214.758 154.788 215.039 cv
154.668 215.054 li
154.668 209.663 li
154.743 209.639 li
155.197 209.495 155.61 209.254 155.972 208.925 cv
156.03 208.872 li
160.703 211.57 li
160.63 211.667 li
cp
153.733 208.383 mo
153.05 208.383 152.414 208.017 152.073 207.426 cv
151.817 206.983 151.749 206.467 151.882 205.973 cv
152.014 205.479 152.331 205.066 152.774 204.81 cv
153.065 204.642 153.396 204.553 153.73 204.553 cv
154.413 204.553 155.049 204.92 155.39 205.51 cv
155.918 206.425 155.603 207.598 154.689 208.126 cv
154.398 208.295 154.067 208.383 153.733 208.383 cv
cp
154.29 215.089 mo
154.188 215.094 li
154.037 215.102 153.885 215.106 153.732 215.106 cv
153.58 215.106 153.429 215.102 153.279 215.094 cv
153.177 215.089 li
153.177 209.75 li
153.298 209.765 li
153.636 209.809 153.843 209.808 154.169 209.765 cv
154.29 209.749 li
154.29 215.089 li
cp
152.799 215.055 mo
152.679 215.04 li
150.372 214.759 148.242 213.531 146.836 211.67 cv
146.763 211.573 li
151.437 208.875 li
151.495 208.928 li
151.856 209.257 152.269 209.496 152.724 209.641 cv
152.799 209.665 li
152.799 215.055 li
cp
146.491 211.176 mo
146.328 210.926 146.175 210.661 146.035 210.388 cv
145.989 210.298 li
150.61 207.63 li
150.657 207.743 li
150.766 208.006 150.913 208.259 151.095 208.495 cv
151.17 208.592 li
146.547 211.262 li
146.491 211.176 li
cp
145.779 209.844 mo
145.324 208.775 145.094 207.639 145.094 206.468 cv
145.094 205.299 145.324 204.164 145.777 203.096 cv
145.824 202.984 li
150.497 205.682 li
150.481 205.759 li
150.429 205.996 150.403 206.234 150.403 206.468 cv
150.403 206.703 150.429 206.943 150.481 207.182 cv
150.498 207.258 li
145.826 209.956 li
145.779 209.844 li
cp
146.033 202.551 mo
146.172 202.28 146.325 202.015 146.489 201.763 cv
146.544 201.678 li
151.168 204.347 li
151.093 204.444 li
150.911 204.681 150.764 204.935 150.655 205.197 cv
150.609 205.31 li
145.987 202.642 li
146.033 202.551 li
cp
146.833 201.27 mo
148.239 199.408 150.368 198.179 152.675 197.897 cv
152.795 197.882 li
152.795 203.273 li
152.72 203.297 li
152.266 203.442 151.853 203.682 151.491 204.012 cv
151.433 204.065 li
146.76 201.367 li
146.833 201.27 li
cp
153.173 197.848 mo
153.275 197.842 li
153.575 197.827 153.883 197.827 154.185 197.842 cv
154.286 197.848 li
154.286 203.187 li
154.165 203.171 li
153.827 203.127 153.62 203.129 153.294 203.172 cv
153.173 203.188 li
153.173 197.848 li
cp
154.664 197.882 mo
154.784 197.896 li
157.092 198.177 159.221 199.406 160.627 201.266 cv
160.7 201.363 li
156.027 204.062 li
155.969 204.009 li
155.608 203.68 155.194 203.44 154.739 203.296 cv
154.664 203.272 li
154.664 197.882 li
cp
160.972 201.76 mo
161.137 202.013 161.29 202.278 161.428 202.548 cv
161.474 202.639 li
156.853 205.306 li
156.806 205.194 li
156.697 204.931 156.55 204.678 156.368 204.441 cv
156.293 204.344 li
160.917 201.675 li
160.972 201.76 li
cp
165.503 205.536 mo
165.159 205.423 164.803 205.307 164.501 205.188 cv
164.442 205.165 li
164.434 205.102 li
164.37 204.599 164.271 204.099 164.139 203.617 cv
164.122 203.556 li
164.168 203.512 li
164.41 203.276 164.707 203.022 164.994 202.776 cv
165.36 202.463 165.738 202.139 165.996 201.858 cv
165.898 201.599 165.787 201.332 165.657 201.048 cv
165.268 201.03 164.762 201.069 164.272 201.108 cv
163.905 201.137 163.526 201.166 163.196 201.172 cv
163.133 201.173 li
163.101 201.118 li
162.852 200.681 162.568 200.257 162.258 199.859 cv
162.219 199.809 li
162.245 199.75 li
162.376 199.444 162.55 199.102 162.718 198.77 cv
162.939 198.335 163.167 197.886 163.298 197.523 cv
163.099 197.31 162.891 197.101 162.678 196.902 cv
162.315 197.033 161.866 197.26 161.431 197.481 cv
161.099 197.649 160.756 197.823 160.449 197.955 cv
160.391 197.98 li
160.341 197.941 li
159.945 197.634 159.521 197.35 159.082 197.098 cv
159.027 197.067 li
159.028 197.003 li
159.033 196.673 159.063 196.293 159.092 195.926 cv
159.13 195.436 159.17 194.931 159.152 194.543 cv
158.868 194.413 158.602 194.302 158.342 194.203 cv
158.06 194.461 157.736 194.84 157.422 195.207 cv
157.177 195.493 156.924 195.79 156.688 196.032 cv
156.644 196.077 li
156.582 196.061 li
156.1 195.929 155.601 195.83 155.098 195.766 cv
155.035 195.758 li
155.012 195.699 li
154.893 195.397 154.777 195.042 154.665 194.698 cv
154.51 194.224 154.35 193.735 154.181 193.379 cv
153.882 193.367 153.581 193.367 153.282 193.379 cv
153.113 193.735 152.953 194.224 152.799 194.697 cv
152.687 195.041 152.57 195.397 152.452 195.699 cv
152.428 195.758 li
152.365 195.766 li
151.862 195.83 151.363 195.929 150.881 196.061 cv
150.82 196.077 li
150.775 196.032 li
150.539 195.79 150.286 195.493 150.041 195.207 cv
149.727 194.84 149.403 194.461 149.122 194.203 cv
148.861 194.302 148.595 194.413 148.311 194.543 cv
148.293 194.931 148.333 195.437 148.371 195.927 cv
148.4 196.294 148.43 196.673 148.435 197.003 cv
148.436 197.067 li
148.381 197.098 li
147.942 197.35 147.519 197.633 147.122 197.941 cv
147.072 197.98 li
147.014 197.955 li
146.708 197.823 146.364 197.649 146.033 197.481 cv
145.598 197.26 145.149 197.032 144.786 196.902 cv
144.573 197.101 144.365 197.309 144.165 197.522 cv
144.296 197.885 144.523 198.334 144.744 198.768 cv
144.912 199.1 145.086 199.444 145.218 199.75 cv
145.243 199.808 li
145.205 199.858 li
144.896 200.257 144.612 200.681 144.362 201.118 cv
144.33 201.173 li
144.267 201.172 li
143.937 201.166 143.557 201.136 143.189 201.108 cv
142.7 201.069 142.194 201.03 141.806 201.048 cv
141.676 201.332 141.565 201.599 141.467 201.858 cv
141.725 202.14 142.103 202.463 142.47 202.777 cv
142.757 203.022 143.053 203.276 143.295 203.512 cv
143.341 203.556 li
143.324 203.617 li
143.192 204.099 143.093 204.599 143.029 205.102 cv
143.022 205.165 li
142.962 205.188 li
142.66 205.307 142.304 205.423 141.96 205.536 cv
141.487 205.69 140.998 205.85 140.642 206.018 cv
140.636 206.168 140.631 206.317 140.631 206.468 cv
140.631 206.619 140.636 206.769 140.642 206.918 cv
140.998 207.087 141.487 207.246 141.96 207.401 cv
142.304 207.513 142.66 207.629 142.962 207.748 cv
143.022 207.772 li
143.029 207.835 li
143.093 208.337 143.192 208.837 143.324 209.319 cv
143.341 209.38 li
143.295 209.425 li
143.053 209.661 142.756 209.914 142.47 210.159 cv
142.103 210.473 141.725 210.797 141.467 211.078 cv
141.565 211.34 141.677 211.606 141.806 211.889 cv
142.195 211.907 142.701 211.867 143.19 211.829 cv
143.557 211.8 143.937 211.77 144.266 211.764 cv
144.33 211.763 li
144.361 211.818 li
144.611 212.255 144.895 212.679 145.204 213.078 cv
145.243 213.128 li
145.218 213.186 li
145.086 213.493 144.912 213.836 144.744 214.168 cv
144.523 214.603 144.296 215.051 144.165 215.414 cv
144.364 215.627 144.573 215.835 144.786 216.034 cv
145.148 215.904 145.597 215.676 146.032 215.456 cv
146.364 215.287 146.707 215.113 147.014 214.982 cv
147.072 214.957 li
147.122 214.995 li
147.52 215.304 147.944 215.588 148.381 215.838 cv
148.436 215.87 li
148.435 215.933 li
148.43 216.263 148.4 216.642 148.371 217.009 cv
148.333 217.499 148.293 218.005 148.311 218.394 cv
148.595 218.523 148.861 218.635 149.122 218.733 cv
149.403 218.475 149.726 218.097 150.04 217.73 cv
150.285 217.443 150.539 217.147 150.775 216.904 cv
150.819 216.859 li
150.88 216.876 li
151.362 217.007 151.862 217.107 152.365 217.17 cv
152.428 217.178 li
152.451 217.237 li
152.57 217.54 152.687 217.896 152.799 218.24 cv
152.953 218.713 153.113 219.202 153.282 219.558 cv
153.581 219.569 153.882 219.569 154.181 219.558 cv
154.35 219.202 154.51 218.713 154.665 218.239 cv
154.777 217.895 154.893 217.539 155.012 217.237 cv
155.035 217.178 li
155.098 217.17 li
155.601 217.107 156.1 217.007 156.582 216.876 cv
156.644 216.859 li
156.688 216.904 li
156.924 217.147 157.177 217.443 157.422 217.73 cv
157.736 218.096 158.06 218.475 158.342 218.733 cv
158.602 218.635 158.868 218.523 159.152 218.394 cv
159.17 218.005 159.13 217.499 159.092 217.009 cv
159.063 216.642 159.033 216.263 159.028 215.933 cv
159.027 215.87 li
159.082 215.838 li
159.521 215.587 159.944 215.303 160.341 214.995 cv
160.391 214.956 li
160.45 214.981 li
160.756 215.113 161.098 215.287 161.43 215.455 cv
161.865 215.676 162.314 215.904 162.677 216.035 cv
162.89 215.836 163.098 215.628 163.298 215.414 cv
163.167 215.052 162.94 214.603 162.72 214.168 cv
162.551 213.836 162.377 213.493 162.245 213.186 cv
162.22 213.128 li
162.259 213.078 li
162.569 212.678 162.852 212.254 163.101 211.818 cv
163.133 211.763 li
163.196 211.764 li
163.526 211.77 163.905 211.8 164.272 211.829 cv
164.678 211.86 165.097 211.893 165.448 211.893 cv
165.448 211.893 li
165.52 211.893 165.59 211.892 165.657 211.889 cv
165.786 211.606 165.898 211.34 165.996 211.078 cv
165.739 210.797 165.36 210.474 164.994 210.16 cv
164.707 209.915 164.41 209.661 164.168 209.425 cv
164.122 209.38 li
164.139 209.319 li
164.271 208.837 164.37 208.337 164.434 207.835 cv
164.442 207.772 li
164.501 207.748 li
164.803 207.629 165.159 207.513 165.503 207.401 cv
165.977 207.246 166.465 207.087 166.821 206.918 cv
166.827 206.769 166.832 206.619 166.832 206.468 cv
166.832 206.317 166.827 206.168 166.821 206.018 cv
166.465 205.85 165.976 205.69 165.503 205.536 cv
cp
f
243.701 281.939 mo
243.663 282.027 li
239.994 279.908 li
240.008 279.848 li
240.048 279.662 240.068 279.475 240.068 279.291 cv
240.068 279.107 240.048 278.919 240.007 278.731 cv
239.994 278.671 li
243.662 276.553 li
243.699 276.641 li
244.056 277.48 244.237 278.372 244.237 279.291 cv
244.237 280.21 244.057 281.1 243.701 281.939 cv
cp
243.499 282.366 mo
243.391 282.579 243.27 282.788 243.142 282.985 cv
243.098 283.052 li
239.468 280.956 li
239.527 280.88 li
239.669 280.694 239.785 280.495 239.87 280.289 cv
239.907 280.2 li
243.536 282.295 li
243.499 282.366 li
cp
242.871 283.373 mo
241.768 284.835 240.096 285.8 238.285 286.021 cv
238.19 286.033 li
238.19 281.8 li
238.249 281.781 li
238.606 281.668 238.93 281.479 239.214 281.22 cv
239.26 281.178 li
242.929 283.297 li
242.871 283.373 li
cp
237.456 280.795 mo
236.92 280.795 236.421 280.507 236.153 280.043 cv
235.952 279.695 235.899 279.29 236.002 278.902 cv
236.106 278.514 236.355 278.19 236.703 277.989 cv
236.932 277.857 237.192 277.787 237.454 277.787 cv
237.99 277.787 238.489 278.075 238.757 278.539 cv
239.172 279.257 238.925 280.179 238.207 280.593 cv
237.978 280.725 237.719 280.795 237.456 280.795 cv
cp
237.894 286.06 mo
237.814 286.064 li
237.695 286.07 237.575 286.073 237.455 286.073 cv
237.336 286.073 237.217 286.07 237.099 286.064 cv
237.019 286.06 li
237.019 281.868 li
237.114 281.88 li
237.38 281.914 237.542 281.913 237.798 281.88 cv
237.894 281.867 li
237.894 286.06 li
cp
236.723 286.033 mo
236.628 286.021 li
234.817 285.801 233.145 284.837 232.041 283.375 cv
231.983 283.299 li
235.653 281.181 li
235.699 281.222 li
235.982 281.481 236.307 281.669 236.664 281.782 cv
236.723 281.801 li
236.723 286.033 li
cp
231.77 282.988 mo
231.642 282.791 231.521 282.583 231.412 282.369 cv
231.376 282.298 li
235.004 280.203 li
235.041 280.292 li
235.126 280.498 235.242 280.697 235.385 280.883 cv
235.444 280.959 li
231.814 283.055 li
231.77 282.988 li
cp
231.211 281.942 mo
230.854 281.102 230.673 280.21 230.673 279.291 cv
230.673 278.373 230.853 277.482 231.209 276.643 cv
231.247 276.556 li
234.916 278.674 li
234.902 278.734 li
234.862 278.92 234.842 279.108 234.842 279.291 cv
234.842 279.475 234.862 279.664 234.903 279.851 cv
234.916 279.912 li
231.248 282.03 li
231.211 281.942 li
cp
231.411 276.216 mo
231.52 276.003 231.64 275.794 231.768 275.597 cv
231.812 275.53 li
235.442 277.626 li
235.383 277.702 li
235.241 277.888 235.125 278.087 235.04 278.293 cv
235.003 278.382 li
231.374 276.287 li
231.411 276.216 li
cp
232.039 275.21 mo
233.142 273.748 234.814 272.783 236.625 272.561 cv
236.72 272.55 li
236.72 276.783 li
236.661 276.801 li
236.304 276.915 235.98 277.104 235.696 277.362 cv
235.65 277.404 li
231.981 275.286 li
232.039 275.21 li
cp
237.016 272.523 mo
237.096 272.519 li
237.332 272.507 237.574 272.506 237.811 272.518 cv
237.891 272.523 li
237.891 276.715 li
237.796 276.702 li
237.53 276.668 237.368 276.669 237.112 276.703 cv
237.016 276.715 li
237.016 272.523 li
cp
238.187 272.549 mo
238.282 272.561 li
240.093 272.781 241.765 273.746 242.869 275.207 cv
242.927 275.283 li
239.257 277.402 li
239.212 277.36 li
238.928 277.102 238.603 276.914 238.246 276.8 cv
238.187 276.781 li
238.187 272.549 li
cp
243.14 275.594 mo
243.269 275.793 243.39 276.001 243.498 276.213 cv
243.534 276.285 li
239.906 278.379 li
239.869 278.29 li
239.784 278.084 239.668 277.886 239.525 277.7 cv
239.466 277.624 li
243.096 275.528 li
243.14 275.594 li
cp
246.697 278.559 mo
246.427 278.471 246.148 278.38 245.911 278.286 cv
245.864 278.268 li
245.858 278.218 li
245.808 277.823 245.73 277.431 245.627 277.053 cv
245.614 277.005 li
245.649 276.97 li
245.84 276.785 246.073 276.585 246.298 276.393 cv
246.585 276.146 246.882 275.892 247.085 275.672 cv
247.008 275.468 246.921 275.259 246.819 275.035 cv
246.513 275.021 246.116 275.052 245.731 275.082 cv
245.443 275.105 245.145 275.128 244.887 275.133 cv
244.837 275.134 li
244.812 275.09 li
244.616 274.747 244.393 274.415 244.15 274.102 cv
244.119 274.062 li
244.139 274.017 li
244.243 273.776 244.379 273.507 244.511 273.247 cv
244.685 272.905 244.864 272.552 244.967 272.267 cv
244.81 272.1 244.646 271.937 244.479 271.78 cv
244.194 271.883 243.842 272.061 243.5 272.234 cv
243.24 272.367 242.97 272.503 242.729 272.607 cv
242.684 272.627 li
242.644 272.596 li
242.333 272.355 242.001 272.132 241.656 271.934 cv
241.613 271.909 li
241.614 271.86 li
241.618 271.6 241.641 271.302 241.664 271.014 cv
241.694 270.629 241.725 270.232 241.711 269.928 cv
241.488 269.826 241.279 269.738 241.075 269.661 cv
240.854 269.864 240.599 270.161 240.353 270.449 cv
240.161 270.674 239.961 270.907 239.776 271.097 cv
239.741 271.133 li
239.693 271.12 li
239.315 271.016 238.923 270.938 238.528 270.888 cv
238.478 270.882 li
238.46 270.836 li
238.367 270.599 238.276 270.32 238.188 270.05 cv
238.066 269.678 237.941 269.293 237.808 269.014 cv
237.573 269.005 237.336 269.005 237.102 269.014 cv
236.969 269.293 236.844 269.677 236.723 270.049 cv
236.635 270.319 236.543 270.598 236.45 270.836 cv
236.432 270.882 li
236.382 270.888 li
235.987 270.938 235.595 271.016 235.217 271.12 cv
235.169 271.133 li
235.134 271.097 li
234.949 270.907 234.75 270.674 234.557 270.449 cv
234.311 270.161 234.056 269.864 233.835 269.661 cv
233.631 269.738 233.422 269.826 233.199 269.928 cv
233.185 270.233 233.216 270.63 233.246 271.015 cv
233.269 271.303 233.292 271.601 233.297 271.86 cv
233.297 271.909 li
233.254 271.934 li
232.91 272.132 232.577 272.354 232.265 272.596 cv
232.226 272.627 li
232.18 272.607 li
231.94 272.503 231.671 272.367 231.41 272.235 cv
231.069 272.061 230.716 271.882 230.431 271.78 cv
230.264 271.936 230.101 272.1 229.944 272.267 cv
230.046 272.552 230.225 272.904 230.398 273.245 cv
230.53 273.506 230.667 273.776 230.771 274.016 cv
230.79 274.062 li
230.76 274.101 li
230.517 274.414 230.295 274.747 230.098 275.09 cv
230.074 275.133 li
230.024 275.133 li
229.764 275.128 229.466 275.105 229.178 275.082 cv
228.793 275.052 228.396 275.021 228.091 275.035 cv
227.99 275.259 227.902 275.468 227.825 275.672 cv
228.028 275.892 228.325 276.147 228.613 276.393 cv
228.838 276.586 229.071 276.785 229.261 276.97 cv
229.296 277.005 li
229.283 277.053 li
229.18 277.431 229.102 277.823 229.052 278.218 cv
229.046 278.268 li
228.999 278.286 li
228.762 278.38 228.483 278.471 228.213 278.559 cv
227.841 278.68 227.457 278.805 227.178 278.938 cv
227.173 279.055 227.169 279.173 227.169 279.291 cv
227.169 279.41 227.173 279.527 227.178 279.644 cv
227.457 279.777 227.841 279.902 228.212 280.023 cv
228.483 280.112 228.762 280.203 228.999 280.296 cv
229.046 280.315 li
229.052 280.364 li
229.102 280.759 229.18 281.151 229.283 281.53 cv
229.296 281.578 li
229.261 281.612 li
229.071 281.798 228.838 281.997 228.613 282.189 cv
228.325 282.436 228.028 282.69 227.825 282.911 cv
227.903 283.116 227.99 283.326 228.091 283.547 cv
228.397 283.561 228.794 283.53 229.178 283.5 cv
229.466 283.477 229.764 283.454 230.023 283.45 cv
230.073 283.449 li
230.098 283.492 li
230.294 283.835 230.517 284.168 230.76 284.481 cv
230.79 284.52 li
230.771 284.566 li
230.667 284.807 230.53 285.076 230.398 285.337 cv
230.225 285.678 230.046 286.03 229.943 286.315 cv
230.1 286.482 230.264 286.646 230.431 286.802 cv
230.716 286.7 231.068 286.521 231.41 286.348 cv
231.671 286.216 231.94 286.079 232.18 285.976 cv
232.226 285.956 li
232.265 285.986 li
232.578 286.229 232.911 286.452 233.254 286.648 cv
233.297 286.673 li
233.297 286.723 li
233.292 286.982 233.269 287.28 233.246 287.568 cv
233.216 287.952 233.185 288.35 233.199 288.655 cv
233.422 288.756 233.631 288.844 233.835 288.921 cv
234.056 288.719 234.31 288.421 234.557 288.134 cv
234.749 287.908 234.948 287.676 235.134 287.485 cv
235.168 287.45 li
235.216 287.463 li
235.595 287.566 235.987 287.644 236.382 287.694 cv
236.431 287.7 li
236.45 287.747 li
236.543 287.984 236.635 288.264 236.723 288.534 cv
236.844 288.906 236.969 289.289 237.102 289.569 cv
237.336 289.578 237.573 289.578 237.808 289.569 cv
237.941 289.289 238.066 288.905 238.188 288.533 cv
238.276 288.263 238.367 287.984 238.46 287.747 cv
238.478 287.7 li
238.528 287.694 li
238.923 287.644 239.315 287.566 239.693 287.463 cv
239.741 287.45 li
239.776 287.485 li
239.961 287.676 240.161 287.908 240.353 288.133 cv
240.599 288.421 240.854 288.719 241.075 288.921 cv
241.279 288.844 241.488 288.756 241.711 288.655 cv
241.725 288.35 241.694 287.952 241.664 287.568 cv
241.641 287.28 241.618 286.982 241.613 286.723 cv
241.613 286.673 li
241.656 286.648 li
242 286.451 242.333 286.228 242.645 285.986 cv
242.684 285.956 li
242.73 285.975 li
242.97 286.079 243.239 286.215 243.499 286.347 cv
243.841 286.521 244.194 286.7 244.479 286.803 cv
244.646 286.647 244.809 286.483 244.967 286.315 cv
244.864 286.031 244.685 285.678 244.512 285.337 cv
244.38 285.076 244.243 284.806 244.139 284.566 cv
244.12 284.52 li
244.15 284.481 li
244.394 284.167 244.616 283.834 244.812 283.492 cv
244.837 283.449 li
244.887 283.45 li
245.145 283.454 245.443 283.477 245.731 283.5 cv
246.05 283.525 246.379 283.551 246.654 283.551 cv
246.654 283.551 li
246.711 283.551 246.766 283.55 246.819 283.547 cv
246.92 283.326 247.007 283.116 247.085 282.911 cv
246.883 282.69 246.586 282.436 246.298 282.19 cv
246.073 281.997 245.84 281.798 245.649 281.612 cv
245.614 281.578 li
245.627 281.53 li
245.73 281.151 245.808 280.759 245.858 280.364 cv
245.864 280.315 li
245.911 280.296 li
246.148 280.203 246.427 280.112 246.698 280.023 cv
247.069 279.902 247.453 279.777 247.732 279.644 cv
247.737 279.527 247.741 279.41 247.741 279.291 cv
247.741 279.173 247.737 279.055 247.732 278.938 cv
247.453 278.805 247.069 278.68 246.697 278.559 cv
cp
f
216.707 289.711 mo
216.619 289.916 li
208.028 284.956 li
208.059 284.815 li
208.153 284.38 208.201 283.941 208.201 283.511 cv
208.201 283.079 208.153 282.638 208.057 282.199 cv
208.026 282.059 li
216.616 277.099 li
216.704 277.304 li
217.539 279.271 217.963 281.359 217.963 283.511 cv
217.963 285.661 217.54 287.747 216.707 289.711 cv
cp
216.235 290.712 mo
215.981 291.211 215.699 291.698 215.398 292.161 cv
215.295 292.318 li
206.795 287.41 li
206.932 287.232 li
207.267 286.796 207.538 286.33 207.737 285.848 cv
207.823 285.639 li
216.32 290.545 li
216.235 290.712 li
cp
214.765 293.069 mo
212.18 296.492 208.266 298.752 204.025 299.27 cv
203.804 299.297 li
203.804 289.385 li
203.941 289.341 li
204.776 289.076 205.536 288.633 206.2 288.027 cv
206.307 287.93 li
214.899 292.89 li
214.765 293.069 li
cp
202.084 287.032 mo
200.828 287.032 199.659 286.358 199.032 285.272 cv
198.562 284.457 198.437 283.508 198.68 282.6 cv
198.924 281.691 199.507 280.932 200.322 280.462 cv
200.857 280.153 201.465 279.989 202.08 279.989 cv
203.334 279.989 204.504 280.664 205.131 281.75 cv
206.101 283.431 205.523 285.589 203.842 286.56 cv
203.307 286.869 202.699 287.032 202.084 287.032 cv
cp
203.109 299.361 mo
202.922 299.37 li
202.644 299.384 202.363 299.392 202.082 299.392 cv
201.802 299.392 201.525 299.384 201.249 299.37 cv
201.062 299.361 li
201.062 289.544 li
201.284 289.573 li
201.906 289.653 202.286 289.651 202.886 289.572 cv
203.109 289.542 li
203.109 299.361 li
cp
200.367 299.298 mo
200.146 299.271 li
195.904 298.754 191.989 296.496 189.404 293.075 cv
189.269 292.897 li
197.862 287.936 li
197.969 288.033 li
198.633 288.638 199.393 289.078 200.229 289.344 cv
200.367 289.388 li
200.367 299.298 li
cp
188.77 292.167 mo
188.47 291.707 188.187 291.22 187.932 290.719 cv
187.846 290.552 li
196.343 285.646 li
196.429 285.854 li
196.629 286.337 196.9 286.803 197.235 287.237 cv
197.373 287.416 li
188.872 292.324 li
188.77 292.167 li
cp
187.46 289.718 mo
186.624 287.751 186.2 285.663 186.2 283.511 cv
186.2 281.36 186.623 279.274 187.457 277.311 cv
187.544 277.106 li
196.135 282.066 li
196.104 282.206 li
196.01 282.642 195.962 283.081 195.962 283.511 cv
195.962 283.942 196.01 284.383 196.106 284.823 cv
196.137 284.964 li
187.547 289.923 li
187.46 289.718 li
cp
187.928 276.31 mo
188.183 275.81 188.465 275.323 188.765 274.861 cv
188.867 274.704 li
197.368 279.612 li
197.231 279.79 li
196.897 280.226 196.626 280.691 196.426 281.174 cv
196.34 281.382 li
187.843 276.477 li
187.928 276.31 li
cp
189.399 273.953 mo
191.983 270.53 195.897 268.27 200.138 267.752 cv
200.36 267.725 li
200.36 277.637 li
200.222 277.681 li
199.387 277.946 198.627 278.388 197.963 278.994 cv
197.856 279.092 li
189.264 274.132 li
189.399 273.953 li
cp
201.054 267.661 mo
201.242 267.652 li
201.794 267.624 202.36 267.622 202.915 267.651 cv
203.102 267.661 li
203.102 277.477 li
202.879 277.449 li
202.257 277.369 201.877 277.371 201.278 277.45 cv
201.054 277.479 li
201.054 267.661 li
cp
203.796 267.724 mo
204.017 267.751 li
208.26 268.267 212.175 270.526 214.76 273.947 cv
214.894 274.125 li
206.302 279.086 li
206.195 278.989 li
205.531 278.385 204.77 277.944 203.934 277.678 cv
203.796 277.634 li
203.796 267.724 li
cp
215.394 274.854 mo
215.697 275.319 215.979 275.807 216.232 276.303 cv
216.317 276.47 li
207.821 281.375 li
207.735 281.167 li
207.534 280.685 207.263 280.219 206.928 279.784 cv
206.791 279.606 li
215.292 274.698 li
215.394 274.854 li
cp
223.724 281.796 mo
223.091 281.59 222.437 281.376 221.882 281.158 cv
221.773 281.115 li
221.758 280.999 li
221.641 280.074 221.459 279.155 221.217 278.269 cv
221.186 278.157 li
221.27 278.076 li
221.715 277.641 222.261 277.175 222.788 276.723 cv
223.462 276.147 224.157 275.552 224.631 275.035 cv
224.451 274.558 224.247 274.068 224.008 273.545 cv
223.293 273.512 222.363 273.585 221.462 273.655 cv
220.787 273.708 220.09 273.763 219.484 273.773 cv
219.367 273.775 li
219.309 273.674 li
218.849 272.871 218.328 272.092 217.759 271.359 cv
217.687 271.267 li
217.734 271.16 li
217.976 270.597 218.296 269.967 218.605 269.358 cv
219.011 268.557 219.43 267.731 219.671 267.064 cv
219.305 266.672 218.922 266.289 218.53 265.922 cv
217.863 266.163 217.037 266.581 216.238 266.986 cv
215.628 267.296 214.996 267.616 214.432 267.859 cv
214.326 267.905 li
214.233 267.833 li
213.505 267.268 212.727 266.746 211.919 266.283 cv
211.818 266.225 li
211.82 266.109 li
211.83 265.502 211.884 264.803 211.937 264.128 cv
212.008 263.228 212.081 262.298 212.048 261.585 cv
211.526 261.347 211.037 261.142 210.557 260.961 cv
210.04 261.435 209.445 262.131 208.868 262.806 cv
208.417 263.332 207.951 263.877 207.517 264.323 cv
207.436 264.406 li
207.323 264.376 li
206.437 264.134 205.519 263.951 204.594 263.834 cv
204.478 263.82 li
204.435 263.711 li
204.216 263.156 204.003 262.503 203.797 261.871 cv
203.513 260.999 203.219 260.1 202.908 259.445 cv
202.359 259.424 201.804 259.424 201.254 259.445 cv
200.944 260.099 200.651 260.998 200.367 261.869 cv
200.16 262.502 199.947 263.156 199.728 263.711 cv
199.685 263.82 li
199.569 263.834 li
198.645 263.951 197.726 264.134 196.84 264.376 cv
196.728 264.406 li
196.646 264.323 li
196.213 263.877 195.746 263.332 195.296 262.806 cv
194.719 262.131 194.123 261.435 193.606 260.961 cv
193.127 261.142 192.637 261.347 192.116 261.585 cv
192.083 262.299 192.156 263.229 192.226 264.13 cv
192.279 264.805 192.334 265.502 192.344 266.109 cv
192.346 266.225 li
192.245 266.283 li
191.438 266.746 190.659 267.267 189.929 267.833 cv
189.837 267.905 li
189.73 267.859 li
189.167 267.616 188.536 267.296 187.927 266.987 cv
187.127 266.581 186.301 266.162 185.634 265.922 cv
185.243 266.288 184.86 266.671 184.493 267.063 cv
184.733 267.73 185.152 268.555 185.557 269.354 cv
185.867 269.965 186.187 270.596 186.429 271.159 cv
186.476 271.266 li
186.404 271.358 li
185.836 272.091 185.315 272.87 184.855 273.674 cv
184.797 273.775 li
184.68 273.773 li
184.073 273.763 183.374 273.708 182.699 273.655 cv
181.799 273.585 180.869 273.512 180.155 273.545 cv
179.917 274.068 179.712 274.558 179.532 275.035 cv
180.006 275.552 180.702 276.148 181.376 276.725 cv
181.903 277.176 182.448 277.642 182.894 278.076 cv
182.977 278.157 li
182.947 278.269 li
182.704 279.155 182.522 280.074 182.405 280.999 cv
182.39 281.115 li
182.282 281.158 li
181.726 281.376 181.072 281.59 180.439 281.796 cv
179.569 282.08 178.67 282.373 178.016 282.684 cv
178.005 282.958 177.996 283.233 177.996 283.511 cv
177.996 283.788 178.005 284.063 178.016 284.338 cv
178.67 284.648 179.568 284.941 180.439 285.225 cv
181.072 285.432 181.726 285.646 182.282 285.864 cv
182.39 285.907 li
182.405 286.023 li
182.522 286.948 182.704 287.866 182.947 288.753 cv
182.977 288.865 li
182.894 288.947 li
182.448 289.38 181.903 289.847 181.376 290.298 cv
180.702 290.874 180.006 291.47 179.532 291.987 cv
179.713 292.468 179.918 292.958 180.155 293.477 cv
180.87 293.51 181.8 293.437 182.701 293.366 cv
183.375 293.313 184.073 293.259 184.679 293.249 cv
184.796 293.246 li
184.854 293.348 li
185.313 294.151 185.835 294.93 186.404 295.663 cv
186.476 295.756 li
186.429 295.863 li
186.187 296.426 185.867 297.057 185.557 297.667 cv
185.151 298.467 184.733 299.292 184.492 299.958 cv
184.859 300.35 185.242 300.733 185.634 301.099 cv
186.301 300.859 187.126 300.44 187.926 300.035 cv
188.536 299.726 189.167 299.406 189.731 299.163 cv
189.837 299.117 li
189.929 299.189 li
190.662 299.757 191.441 300.278 192.245 300.738 cv
192.346 300.796 li
192.344 300.913 li
192.334 301.519 192.279 302.217 192.226 302.891 cv
192.156 303.793 192.083 304.723 192.116 305.437 cv
192.637 305.675 193.127 305.88 193.606 306.061 cv
194.123 305.587 194.718 304.891 195.295 304.217 cv
195.746 303.689 196.212 303.144 196.646 302.699 cv
196.727 302.615 li
196.839 302.646 li
197.725 302.888 198.644 303.071 199.569 303.188 cv
199.685 303.202 li
199.727 303.311 li
199.946 303.867 200.16 304.521 200.367 305.155 cv
200.651 306.025 200.944 306.923 201.254 307.577 cv
201.804 307.598 202.359 307.598 202.908 307.577 cv
203.219 306.922 203.512 306.023 203.797 305.152 cv
204.003 304.52 204.216 303.866 204.435 303.311 cv
204.478 303.202 li
204.594 303.188 li
205.519 303.071 206.437 302.888 207.323 302.646 cv
207.436 302.615 li
207.517 302.699 li
207.951 303.144 208.417 303.689 208.868 304.216 cv
209.445 304.89 210.04 305.586 210.557 306.061 cv
211.037 305.88 211.526 305.675 212.048 305.437 cv
212.081 304.723 212.008 303.793 211.937 302.891 cv
211.884 302.217 211.83 301.519 211.819 300.913 cv
211.817 300.796 li
211.919 300.738 li
212.725 300.276 213.504 299.755 214.234 299.188 cv
214.326 299.117 li
214.433 299.163 li
214.996 299.405 215.626 299.725 216.236 300.034 cv
217.035 300.44 217.862 300.859 218.529 301.1 cv
218.92 300.735 219.303 300.351 219.671 299.959 cv
219.43 299.292 219.012 298.467 218.607 297.668 cv
218.297 297.057 217.977 296.426 217.734 295.862 cv
217.688 295.755 li
217.759 295.663 li
218.33 294.928 218.851 294.149 219.309 293.348 cv
219.367 293.246 li
219.484 293.249 li
220.09 293.259 220.787 293.313 221.462 293.366 cv
222.208 293.425 222.979 293.485 223.622 293.485 cv
223.623 293.485 li
223.757 293.485 223.885 293.483 224.008 293.477 cv
224.245 292.958 224.45 292.468 224.632 291.987 cv
224.158 291.47 223.462 290.875 222.788 290.299 cv
222.261 289.847 221.715 289.381 221.27 288.947 cv
221.186 288.865 li
221.217 288.753 li
221.459 287.866 221.641 286.948 221.758 286.023 cv
221.773 285.907 li
221.882 285.864 li
222.437 285.646 223.092 285.432 223.725 285.225 cv
224.595 284.941 225.494 284.648 226.148 284.338 cv
226.158 284.063 226.167 283.788 226.167 283.511 cv
226.167 283.233 226.158 282.958 226.148 282.684 cv
225.494 282.373 224.595 282.08 223.724 281.796 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.1.0
%%For: (\700\753\745\752\761\745\751 \705\743\756\760\756\742) ()
%%Title: (light bulb of gears and cogs.eps)
%%CreationDate: 2/19/2014 12:47 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kl!"hCp@.s)SnJ%X3,U.&>uf]dh1/*u78Zm#+2s<ELkGo;b`);6mr*^%<h0_9F0@AF9I<gnS5`S?3Hb$V<IOafTegB6S*dmU
%kHDjpQ^d^O08KS??[oV7qe>YEUN^U6;PuE4Cpa'Yh+k*"lP2L`::I^"/,lKUF"aP?n4be7U![Utrlc*\e_1$dP@"d-/'V+idchfR
%qmg[^,G<_eLYqa^.Hgb]-b.u=4Ts,DUYghu5i4EdlR.DYO>numb^=`mfPC3Wh.j^XBn*jP:%PD/GJ2ZhWq$tQfj[^mB*Q)oPo@9b
%6*&=Ak(^"rfD`H'FtoIj5=.o%SdJmK73>;hr0N9RJG[P@r84a3akuT3SMN9ua4])ni>A"&KLfhP>0@$5_uL(2Th-F3[i1#lX_PU:
%9;Qd8&EN!Ls3cD,`ioZsE8Kl60[.dsI]sB=\NnW9.`T6!m;SI4Il&*o0'8``WqAh_<\rY#D`7UtX!Xnki7ET^U\gqEliYqNUR2kW
%7Ao!U!LgpH/$19QD$ir4.4r!.h7Z9"Gd5^9i&WFO,0t]3EcANhrR!m5dk]#@;5:hTGtSgAp\ceDI37(]pa-fX^b&Ls7QEo<RB3=Y
%M&kO7Y%)6eFZ+aZf=T;@Ap\M]JqXZA&e9?<D:XINC3;/g+,%NuPkl3.Ikk"h]\dY7*ANf80"sl]]!q0<'8J3Llc%-mY!<Nt/-(mC
%JcArF4o'9r#CQh_%#tH.!c5X<^]Vh>G5UYZ0DW4nH_WHK0;!>JK;6ujDWfVYB(GW?:*]MA;<rG;Ybq*KqT_%pj'HVX`%\[NXk'-U
%pcE2r:i.90]:_O,ZeNRk\*tsI$3.bus.ACuOASgj_[[MeDZA*tFcK??-]i)TSpOQ+*bFS`UK)/4]/f^3l$KQ.#CKGROpua[_D66A
%]Q43DU5,\lYp%D,OSUHU:t>P/.+h#$hFi1X5EAO1JQ]S>r,K6qBf16m8V_"NnpAC0oc)`\HCLhc*VB&H>FeN)8-j)U?O[g^gZN4h
%ArrhYB`l/;j4ejag1iM>]%*SSB'lu):\d0lk_s.1ED_^oIbKUQ?R:>qHt&VcED0?72aR81+kGhbg&/21YO-sgg$)PLc,KpmLs*Eb
%CkJk7D%<$5`c/UPLI^QqjYlk67gR,#PuPq8^VMfFLpR2MTE"R#Pq05j#3&4`>&T"@=j5.'Bt(-uT_\<bPVWnnF=J+YSB2N2^]*fg
%f3ahnrP_fR-1W5pl,^Z\O+Jd5O,]k^L/0u_7)c)=Q(prNM7m$1)EoMAi=j-QHn716j#@RA6<sH]Qad0jEa4GOGn3(W4pF3"50/M)
%RtiVi.K<J":D#c:pls`9.<t>Zo[*gE+27e^(AnU!'>hf,#GtIVkl["HqTC,#_oqnKnkAW#GWu$5i+LtN0D$I`$,l=B07k5G>sP%g
%;_#Y^"TQX6Z_E]TP_Pe75!F?\'e$+l'ra<CE:P;T<+Yi-d7Sa(s7<YoobSXas'$UR"@S)h!IbgC;q<7#+Zqm`+0J5X('2suNGW4.
%%;fL$CTOrOVHF5K@4<`/3V'BS;/!j$$pm08Tak)d"dP`#P_(*@/0Der'\ECj\KD1U^]Z\pJ8W=Zq*cEC*gSPOXUf<Fn,(,VJ<"7l
%VJJl%#is=$(mr1/cii9_)5@4D:KMMTJ5).[5]!M3#r_sR!lh8"<i$Lr?n*H>Xor$r!7;F@"\;dI:Dl>Bpu$W*A:n>"+(2Q%+C>6S
%Ma7rP=bNasR>O8Z?[ong-r^Obpls\=%i4ZL4RiMo#''ui$?D)$49X+YNe2u/=5["(I_u3FZ!Vu(:5k#_J`+>=+`M/rr9EI)_kVh`
%Q0D5A%jFiC%s;$3knDGL74P*/5TcU^L-D%iJ4E%.4T'/rAcAl$+!_7<==0^ia7P5PA*F((:_)^Ldg$ZTf3dI6V@Tn;fu"=r'tY_R
%r7p],6C70B`!\i@;P=0a"M,4o%8f1e\m&?lR+A&ulViC,!QpED\cTaDJ0P-RN<m%i!/jf3(#K*7$@n`m+C>/8]c;:4E<^Y@"?qc?
%Pud!tOH;#f*!RO@QK0_8$-Xb0=LtlHO,g!jo;Y.J=Tl1SKB/cn>*<A;A/]%6_keNE8,:K+7R.FASd0\@6.e>&oJ1*l+u!@FFC57*
%0EfX65Y!;KU]O1i!`Bea\RNpa2N`o<W<B;0!(Mo?;9=ukp`q#?,blV?&X,&U,_-SfX<T-4Do%K%*Vh=tKKhU'!?ji`0F%lJ0N,m*
%+!8>'A39Z%Kc]r+N>Dg(^'4sRXc\Bh7R;hr;909ae(+o$Ln>.TKcmV!+od<mGSZFiE>1YGj'.G*?gn++NU[eq6:HUCBM`X"*W5Pp
%L0lKN&i?KR?q"!-qDnN5g^9mO_0-%Y_C/0)r8m(q-^A;EO&>_*jS.FRr:U'.g.M^^l1\)^L(SO8qr<:3Q?"d2*Oa\kjZN;oh<*"U
%hgjWo%N=KAh<OMg[Ja^<hJKX!L!Dh`"U?4H&qBP'TUQ!ic2b;^n)YU,6Ds4ad7/Ub>6AU4B=$IP5GK)W,1HrH+RS=2)O^OnF)Sgc
%!?9Y[WmJk>b[27WphRN>plPT2+'44aLN5#H`9YAZm?4tX[OhT!,H\-VbP^XK^3-eih,Y>ef;rW#$6.6$S+4#Q`;ZFA1MAZ"[Dp1m
%i283'7ah*t+J^[1UHLSAYP"rG1pV(:]()&"(,5(kUU=%f2(IG%pAq@-(-Q`?rDb"r*-a2Yh*u>0b$rFs_lH,%h:_-RqmEamL_NHE
%C59DE=nls3F[fq`('a%d$ng-+NNJ,'7V^rGYJZVVd:R%<XYl\h?87'=BP0%#mAja-1FJPVU3"iJ<r8G*##p=Oa'0iHgLodId=otL
%/h`GFm84WVK=LhRZQRT[iX%^q20O%6dnjrKOI:iDj+Y?,PT-MscC]i3]A4q>.]o&.B(*;6EuA#$!e\#lBnpCR2iZprZ.q1%S&TKt
%=ROn`ErL3=jY@u80sTNH^';ti2C-:)SqBS3d.jB`g>&m_4+C#7Y+4aSnF%84rghWu/<)iMY&f?=Xk0bC)LjU.a@dkX3SjUj]mqK\
%6*JnA[L6`Og3EM>g":0.V5CT2gM?H-=bUW@47t/UWd]Za.LQ_hgkPZ4="`h)`+'H0jXp*GZ1,IsLDBjE5<Ea#;9V7.=`T/Cm]'A?
%6V0[ad+thT)On-L2M=PgO1-Jjp8T!kOf]/>P+,%mbKA#DEId_T<UH+P3pO'km4;qAI,rE]b`6&8e*cn0Qbm\9aFja;o7?(9@"E<Y
%L6\)3NA6KL+fN_?`d]b:nXh?+0fD);G(2)J;J>LeS&V=]lC.JW'C#."2EXnOqN#-.mC"r+R=r/C],]k.!AaF)#?b*e5``<+G$qW6
%@'3ZmY0Z6H#']+cXE>Ib'6SFW[$lES8E:[,Q"me]h`krLZgcU8)4+!@17'^H@k0WR,n3@Ta1jgXE>!o^b@KB]UX62b6!lI[HOZe3
%7!^rJ2>ZuNO2#fQdjgu^jj0r@Q-WUc>^;T1O9(hj:MXQGOtfaIrbE!\'K_jdU"a8Y-c:,gFg#:Q$Q76kj/";Z/1^'*?>[o9?)k1c
%i%QloEkR<2oNnj83=D&LAGu&-q4!rCd6?EaS&%XT@2O$ueC\n??J"Eif!SI`=UrGFQ.NOI`7TupL+T0WOn\\;:^!8!74(I=-b'NW
%)BOj`;#<;)#NIU"O:upo5*I<1HNTJN_4MDDo1tqE+5<'L'Z2`c(DL*baZliSBG)UU""q9g#=blkUdt\h/gKN=X/j7T^*TC[o;T6,
%D7:IdbsmUt@?kCWlGOoKL#;2)4+rs@n)P]pCi)ehhGL=WCZ$_h?;ut4dc;BKTt:_;LD(9a$su#^47T?iq=S3Ml.7I]S81+8MLFi^
%L(#N$M/aH>+>YGf289Oj4=)`=qCU0"N4j=D8E!7$FC[BkqENj10t*!^h9/`?1R@:l2I!;"'hGI->L6EWh5Fqa>_]bkL2RIFJC(Ob
%<?]n0ONVr)<n2N0M/RR^JCUmg<FM.Yo_P+0mVD"NE2^5EXSt3&i>bkirG"9dVWX7HKi5P3cGF;'g>HphcBeD7YGE.E'j;L!;]7eX
%pe*s6@LPc]?WeqFJJEAIH^T7/Bm4.B+Tj4e/9c/TX"edfG.X<_/9[;I?"mhHD)Vt]8c7B$21t461#"RAD/.\&&gb*nPpfd9A5^hl
%dn5jEb0O\1'PdbC;6KEspG1ubYr=Dd>*K>m7EMi5P@Ahb]GBUT8H*b37EOIl:.Qs/Q=Us2>*M^lC0HNNX[W%UXNe*fA^"VS$OT_5
%B.Z_&`BNuj_f_tJab%a4Ggqp`Miqd+`a1^'[4('BMiqY6-:R3Ljt=n(f$n56b=cN.X'Eii^-"&IL"CDm-L\s6a]XG7FV\%=K55UZ
%@=E@27!F`/s5ZT",hfFQ.G.5&l0#W`;Z:mtP]N[Yol@Oc9_I+NoNF6)CDfYseSA*s2UuRVU"@FmJ5"e,WOk(6C9<%\3n7tDX`c_,
%2KdTJcIu6u9sr\td;%ndU$XA_h]=_>A0A_g\r/RG)h:jA]"Am5W>K1h_,QAj@PkqXs-f;DCc)0,Zo2+<+59$UFPt]>#kr@*L:U#)
%rp*7SQ`7D,WrKYi_p4\EI8&AV/LmZa[$O\lr:G%!D[ClJs'L@2En@8L[WdDVe6IsZoTGXn^SGIf_+UYJ)M8E(0%0W\J%J@[?#T'f
%gLn9fG_@0")V'9cdfh2"[TA1:27g:eA\mJK2qM;?"EKnL?cL>J\m@$>gr]1TmYNCPrs.QW0j^`,@i>;+0?:R1J$!d:eEMPC?QWg'
%$iIpkJMZQi'6]HaA!cX>-dAhm&JQ5f:8AZHOSq5]Z4[CDGiV's%VM%-NSn1k7?*;?<mHec4?.-07[?H%a-']*9DtmHAq0ibdEePA
%-d]eBNbZT5.[)DMFOjdoL_0C6a%/tb7`6Sfan2CdoVCAds7[Vis8C&@oM,(0a+]k`ec%5(0^\pVD^j^]:X#F!oYi*)4l<;-BtEIh
%h=I3*q>Pfa\`o^SGdp,i4l8!>a\DMWVgH/X6kkc7bm*!0n67iXhRl#"I*C8[gm)'V\[srEnog7Sd;,.))Z(4AjrL+rOu(P_Wj)?I
%BXKmN?Ar'g\[UIO#4j^bZSho/`uc/YAJ6+:G1mLa[^/NTM'k(4V/\9rf.'/-XLtplD)Bs>?k=5L&0Nn*3_OrZ40:u%WS=@)Fh6,s
%RC`XOeCc[$2GK`:;eOdBh)'U>c(FqZ%a<7Kg[?tKp>7DhQsn1?d=T+g->6:oYDfrb$oh8edl\WBc[%h5LgG-SY;f6TC6Df8L2-WY
%CK!hF-`i.fR7Obfe""ffkDX^WN>hRbh<T4]!J7`FS<V)=;mNRf^Q-+QcBOVSq8egER),r8fj5lkEq5?,ioTG=09Tr+`/A/7./u%s
%]M&tle&9GeJ^QCF1/5DT'/.hQbJ,7kdQ/b9T;3LgB``";5e?#E2C7:LkR>n91)/2bbOiB&T7PAHGS^'(2:H)C2Nd)do=/-cOTgM[
%^MMo@]l>4="X)iSgI/*qhl&HZ9S6*7;7X+O9k:GBSR+'+23-.TQmTs8Allo\D\oUp/PL%BVDg2'J76*$W'</"'5/@5EPMGb8n<8F
%de*70X('P-c0\/nqpg#Uc_(1$SOq=)do6'Pm&+F))XLi(#.8FaSnh6@gY(EM2>Xfih*sQ&.[V%jb4%14HA8oN;PS6Oi@J1rK#:qs
%0(\DIC]DBki4kD[lPU+igWKGRgJO0@.+8H=&gB0oHabZjcp+#m9_D0/m]+L"10K^lDe(AN8fD"N3qFiBJ5-kArR\P(Oi:b?6@\7W
%QH/dB=%H,]G;[WTN,]7A:@f<4m/TrR(um8:d5B!TAAM]C`u&kj43_8oWu@Vm0rB5T$-?]THQohG2,fpnFcXjl]@C*"g3VFdAuT"s
%k:WQ#df%g)1=@3`XomO1A@b\`h>""3neO"9%C9"#2(IG%pHbQ[bMmRaCO]?oeUDQ7e^Ye)+k\Y+5u"ttfl-S"BB?-`ncRN^X4bW@
%8L(@XH)7[Ug:pZ)%8H<HR@$'[]S-c42!K4ip_]R&_d[q5:aU'!K:@M!GXU#=K?iW%/&+(-k?kYR^@(l9[r[qUfM]&7NlU%@oXN,Q
%6%;tqB5>lM)72Z3-Sm3=aU9-`TP&R68=&q:[-L#TM:.;"7=!Lai%#Hr'3"Cc"dq(upWA*)[+K.V[M"=TaS&b\)#T:I9Dse(Z:WeG
%aA<j2J\)6Fp"`A.%\2\@0:e$99)j"MA%?Cq2iZu!BnWA2gbbIh7W[$lDApboUUgCKR`jV5?h\7%)O?.i34(o$nQZ:"VW$;eS=>7S
%dr91Cc:u3eCECb)f.!65KZqAfF7\Z8"E`=YR"f_C&^nAYFR"5/C)2/@h;c'3p4eWDFs05-..2SuOC=*7l":C]hrV(:n!+_#iP3t<
%8mI/K0g"Q(`pd=Brn&jC^ZpE0X%>di^ldZ$5VMQ4WjRJU*.p:BeQT<Z@kgn#[+G?*b*&TeG#uY')..ML1&<FG5*Ot.<06Vs;Mqb4
%`74WZhn/aV&F.Z&LrH!i"=AltY%p@Mh"4g*?2NKO]3DBp2J^iZT"mng0or$K?#=5'8*7bRlKiHf*-\fVq-A;L-"j%H<FPR`I\qbF
%/_h.n#4q"<887.F5;:*X-7i?e[!Vc:RBNh7M,]O#OjPM8Rl-j-qT0Pf>g6Qf)/cis[,A-HM;_Fg.q;hJ_,aY;dl\U\g8@YK?EsB,
%C6HZ>A_W<;q`?/l1;"r[C?j&<]t'aVem7FWXqTjC?$hVUK.V'n>Q3redr&^e),<@N`\*CClm7%RPE/DC;`+0(VEWDBcR7E\)4kN>
%k`W,JTDB,J%0$9ed'WXq$oL<T"*fo=,nBRt0if&0cFR+h":'"u_Jt"h.Pj'2#A:F^=VGq#34,.QNGA&Yc[HLd9"!F?miOGC]t%OF
%N(`k-PY2m[Z.3K"eL?L!N^#C]J%H=4GN5%oLN,85fbO&0gVk_L4gg2H]6Hc,rmWi$TP^4;%.a%%KB)7hr&r&CEn98hS]+!;`&53F
%k?>UZm5j.HHG*VeJ)U>aPNYA00.%Ta9n$2umP8%r0Guo6kK2noh\+#Lf[?s+370UR"LTuX3q*G<h)hOqmXJ2e<u]i#3o(V8akD!?
%M<e_hYNZA.J)I>fX-B<7^E_e-bACJj3pYDn[-W0p^hN-gbF"o.1,08ZIgNl%m"HKZe0sllfBWe"CKF^6h^IZ%L#"`2cpXjd%*'P>
%7OP,c0A)gVe5O9]e"l4+DPLEMG-<V"0lAMsYO5q(h203Jl<K&q-:7KEf(@unlRUO5PsN%UH6Un\F^hW[S+C[PS^!a"g$G`l9O3-Z
%<k-T;&.3FHaR`HAg@"??H'?)^o).U^RYc"3GUqkDF47#^O.V!MV,'l];]l%XZ;AYI^=AZA3<-*QR?gtS4XHDDdgRl)&u=:X<TS(a
%g\'W=8-B;3[/I;ZhLJqr\sI\n(E.YFG5@\8IsH>3?U#4qGPQ-+'<eG(!M_bqGQ)F-?cXfTT4"BnOLNPddn?&m1"0b+n>Ol.)L8l9
%pp"4Tm2>C,(R4+%O\`^pT(TW&B-G4n+Bhp(N&&uFhH05==0D/o#QFB)Ies>R5BFuj]uYWum,dNI_O%I:l2*LM:8Q'']/1+06p?=E
%`Uqf][Mo*n"$?3s)`rj@XL+&;?*KG#Fb"O6EFa%6Z1W,)oU5OI)ER*T]9LhJ_U-g3K>\],in%NqC@JD\S5(j'jjmuP3ZV@]P;mWI
%s,mhA"mO4T+,;qK(3]BNd]@^&HI`?Wku+E;3!;IS<:.R1hqih?!6?YbkD5i95Y;EVo(CZs%2pTtm@W\+-]N/4o!uG^Y49$84`dOW
%g]!u%m4DUW3M8*UEFC,Ybbd>qkJWR!VqK)!;I*Q,#Ao$fRuRD?U.GQ0V45ej"gW!$*O?mBlI6:^(LG6P1N?-=-<'j2KK.RIhqlYe
%ekJh$A<Mm&X*`rdO%Q*(kk.#mJ"p0a$S3s/qA0+PN[;-I'W:u5/@sK7U5O^`'GO8b:AlR$B(P#fS:>iKf1V?T]75jUGom8Gl*Ztf
%l_DJu^rnlch5Id-_)TmOB5%jn=3aPFB%c$)99Vo[J+i/I],7j^$SH_s0u7Kdb@4aZ#YPj+0d\<"U+(1FkM`brl%AT7f%BAnGFNpq
%Vqbr@-Qa6Gs+(k/B,Tsq]]7s9J6a+PGoSa=eN.qU5@H>;s#c^=F\.X)iji%S;=.:q2&c.icI(BGhkOPm7\uOP3cJFjBm"U!Xk/Q-
%6*'26e;cbQCjrI(69N#_<%c;^J1EN;b,n[uH\:Ti,Ic&\)B?<8['-7cTf?-@p3/RJDEUK+=m'mEYM2UhH=>iO&t"D>@"P_SWn^>V
%j,:KC[8gkJF0^0uO'/B8l:9)&BDDZ5&%^ptkQlN7Xk/?hA/05hm2[0J>J6e,s*2.jX-n"lnuK>!T\ml)Y4h^ODY$)Pj3;;+*:Mqu
%g(;t^#(<.i-X!)ug,=;K<jgfbdPNACEjBhX4/s>Z]")/=E6oM(3Y'[q2X08)p//5UB?4N6Af[<fe%BW/0<s;H2H$6*9[_R5BsHCk
%UY=HB%^/>UhrltENU@mJgfEI=I]cpop8^:"<jVhd<4OE=&P,R78\]:Fl#/I`:TJo2$r!_L>qPa5ldH;2dWV`kX0s_>1t"G@@LGOH
%*82hWAJ`i_\nL+H^KMM^>)j#0)dS\Oq">C+n8c.FPl4&jeeK$ueSI0b]mdG3OI.df[0RLbMkdp'<0:4l[Dj;J<lU0s5\MO=;*s+K
%R,:aC8GPd9$1Q+rl*'YbrLrdDV_P3POgaL7KW-t2g\k^oVHe7g%I&#(C9&Tj&tAN7W>o;$)'m=^7W1L'7hU^7lNW0nTRViR`<Xs!
%r?IEF$Q`/XORgIID<HsLpB^B]^#:)/;5YN"dQ$iJ!6mcF5lFdK9_#[Z<GOIQ5gD&<nJ@#B*_^@JK)h0?Vd")h:Q^7aK9r/.kk@h2
%XMI$i,/^IXs44\b1n*b"_9aERn?'%'Yg_q\<fqQ</53YRdGEiu_@F_9B6SQNSNj$:c>7u4m2kmpZra/!B=.P%Y5rm3L?Y9#:p8b[
%W:Qkt/UF1=*X9$IU[H!kmZ#@*Zl9=WL-fm-F;[!uV4?$.W.#!n9e4ch,,C6hhN*&l&F39Z%$PNL!_83tq!;^6VKCI5&-iU*K!)^7
%@[tG3fTQ-Ve7gs'59I4oAN656P=`2Jl(,k'cqrqpXhT>*ak'4cYm[#3T%j('.s4/"VRO'r5MSFk-(\Yb'Eucj_W/jd!\%kRcG_f'
%:t4fj??<;uRX9(f-*d*&KMCY'8M-u+efn8NG'9@WoAp+ENY:h,b,t(5b0^Ae&kbLY\\=_VXj`$eIIoAB6b:jN06Fd"d)OU5Fa7`F
%?*G.BSaLu^n]%QQW4_?rji[bp/c:a-OlItRS_8rsO^rD*`s%k(C.GD[O)nim)qEZUF*SWAotf0P45"7S$&d?6*\Em86)fV%+[D=u
%i_2$ioo#7Jhe7HS"&h!VKblL+[0;TZ2uB`KfQh-L?)%QDS8!%1a.Z^_9Z*CWBs$,M:N3;X&a7)DHai$W@Cd`H1oqf4Bf3sPH$R+H
%;t&OAaiK1B`>E6cg?kH?m%]S/asLY4h+pu0U;go:R)&ksbp5[BiCl!`:=%uXl.^(L([A+1F=&q-lL&gj3mYk$o`dL7,b*7`Ws@hu
%"/&SpE=]]XFBHjno\MpHYueoCk589DP_0e,]7>[@+W-o]lcks&pRiP@CV.u2S4<h&;;o=@EucLhX3ns)U(-]5dc8hSO#=8A=cC+U
%(.P&66K5@ah%P7N$I3=rG?P8k>!oQYWJL5S[2h0dR/)?2?ma2A'n]JC;+F<tBe;D:[E_2mHKR!r[AXV]EKQn_DfA,27PD:k3f0J8
%2!W?%@4H"T91;/h(H=G2HFJ+B.%SL<eBWcH^%;#a>7TApF%m:TWj^ZQo0XU72WF4uC@r+dNnR1qooh^[[9O,?*/='26(MRP%`)@C
%]8EL<"#Rm9X4][t&ZI/'%+Gc:SEg:f>B]l?8K>:*,fR"O1@Nr[;Mh9/@dhe.20>Eo/XO:8R=I<sKPLnNrnbV#1n*fRbDYM&6*oE6
%o*@JCp3B'EG$WJlh-L0id(Q)$3XXDdj&Ao@lg1^)c]KQ]8uGqKSRJNGf5+Ah7ZIdc&OmU/kOPYijg.i61JBN5Xt2f;LXHJXl>^*m
%HCH/4_@t1OQqJo$0'W%"0$-2UbH7Jh[DNt<\)G!QK=@As.Z@I8Ffb!,nJp6$`)=/:`o\SGKrm!P(\`1b+\jpZS[dOEmEV@A2p+ZH
%l1("N@PVUN9[[c7s(\o!)Vs5h:dGea:-%AoMlWmU:]^etVc**?ro<Z5T4XGI4hSC+I6[JMgf^7&XE:'SmP""9D`k)UR%(WjCfV?u
%\&(("bMg^bPrDJ[^$m*sY5NhD`Cb>NZ^%hF&`$L%J(+"8V/N3D3UbPAd[,[b/'E!(]p7Gqr;_RT=^&GbFfh8.$[YZVXfX/ONQkr(
%iM0Rj@H$Y2M6YXs+(.?<Wn^pf+.r0uh`_kSO7RGg_p2F=^Ui+UT7%F1*)oQ0X`oJ;Xh4%0R*r/3D!0=)DV99d^4#\=p\\'3iU,<n
%VV<\O?<KIjHsTtB/KE'%k&(\Z1Jd;J0FZ@0no];-:tkmGc5'S6XnRacL&HI?hgSNL'`!'Q<)[Si=-arcIE*AEUjL'6HXAi'gR[f0
%eb\Qj_L2"C<do,hAt(1<^02Vo0_)W?fikp%]UC;;qqFceq:k&WCuOL2f@cGKh)CU.@rVIqgLiJ>QYNqn!WLZ?/aok0o?bX,:po-A
%XfmZ-0@/p;f'UM%kI\(8&+XM*GJ5:'pK!TOm2Hlh>^H9m-/Yl]4e-rq@d/G,r;C'Qg'>;sPOI('ea1,H9"M*hT(UqAjm:fXI:p4h
%@^Gj&$B(ul4Ihh3CD9rqj,e9UY]bAi\@R(Z?$S%4n3fNUoi$,,OY(ajbV$Z4Ip1>`2a:6UO4q&DV+9MCS%(#A_KXt>2Nm?&iS\$%
%0+@]c^?2E@2d_dj<1!&QDTmRri\2O)nV):_-8:Cfo@p9@J':*V/B_tTn&iteI;uFfQ$^t%oI=hLHZ/W*U[jp-4l1N6*PHg0]N"q)
%ndDR311TNd]b%\^TN0rR154&l.B&YiYH_*F-Wk>_:td7:QQ!QXIeYYq<m,EH^<Mse+$BR0Y#b#J.YKm%?H!kmhnR::(CM1Yh9G*V
%Q1(=]pL'A?s']]4$2QBXIk5N=fs_.bI=Ak-qY"g=f_cLK=P>pN]iQZNhH)t[7piBH?1/1,N&JEm50pF9h1&`[h5`bQl8VtR#TsNI
%Ntu'H5(6`7c6tg_U[$"M<r]Z,f!GA6,]^q]S"bR?N;)-IY,b9YT_0M#N[TCYhqlghQQMR,b3pj8pgEp`Ehrn$Edqu8d##LW?a!>d
%VAIi9#.)Y9rSE(gK\3(loka"eIf#NW^0.$j>5DEjfmUSrpQi9Pl?g"S/FuP).2!+sa,S6cSYLPNrUBJGH$4%u1?;MuK+Au#2Oieh
%1?o3;fAR`8mcM4BhL<"JQYLGFkNte<meAhZ4DhbPl28"<jnZHXpp=Uh%iWcP0MHr]7=>r9c(hdJ=Sm&Vg3fl6WnijLFr,h0X?HO#
%IrUX"qAY]H)m,r/.JTiS+$KFWk=:9*!FE1i9">Yg69)aZQ?:H)HMVfF7P-duH??pkX^=:D[+]F[q5sVi\"JfFZUkBljgiZ0?+Db0
%5NQ8@mb``=52RfBZYTH43q&>Wmlh1h^7B[QM<258T/qrA,<Z"=AL]3W&)X.rs'".HpYY)igog<>gYKudhYP`Z^:!*i8\5H!!Y.#&
%d!=b*(Ck&;R[)t^C*oeB5JFj=9p5`s91j=WDeDn<H2.?od./1R()_FqDtdXkNQi+GU9CmrX1_fchmJq>5n."insa!Y($410s)hoK
%BlO0BI!lD!@-p]TI2m(d2[<Rdn69Xd3Xm3e/)Aq=*F?%YTK`.Tr-5p-[e>">VY@1lBuPE_F'+/=on)pCear^nZO[RVq!J#)J5o\!
%0XXuT-ZGGpe#GP+HtKSGT)8f-h2=5e+aMk&^`@E57ho_3pbi!CXi*r0nW=6D9FtF)4/--n9?6p#9g<p_fg3:se)<=Gm&1_f":`89
%;O9AFH\G1K8T07u%>0]`Vc#;7j.ib/$[&+,`obb1eDnmOlc[Z?c"$P=.A*IaNBd#G`=[.d<Jh&UdZ8TZ\mE,3LW%/?7T\pJotB^$
%**\9Y0`&d&7k^70[/]d>O_TOnghum71C^T"%Xi@1B47!8=U593c#kJmNr4aH6#1NGH^qtm+)e6WnJ^uA8UAc#1sB\+@W[GDNZopR
%Z14f8,mHqL/MnF[m5X+pO:7NK0fkkiZnfLj*fZ,9rUHiT+0jT0QY^bXR=*X5[g-B4-8Hd5p__.>RT4('DmD:Ri3MFXOD0O9mhrYM
%V^8B.I#-m(YP;HZ,;"frbX<\D`mO7/lg?\u#n^TNn,>N9'Ah&R]m\b?XP@Z/5od,0e+P$3\&!CYX]<*Lpoml2EIS#6Rb-1pN1:,,
%Igc1Bd_X)<RrA"XbqIg%jk@QF4)EYL5"<oV3'5neq]`B8.,;XPD)C7GWL!8?mlb9TE+ARtmmEj/&s%;s=5Mf)M2V7`f,mZ3T78Mi
%;(?B@nupfEop*cTh&UTT>:YJDFI62</J_]>XmP6GYEdE'D]en#mh5i(Di`&K\ZH*jE)+`W6;(>2fderJQ_+an/omVV%H8OJ`&miZ
%>#.S2C!Qk?<t'W><i*.GDVL!XhYZfpI-8>(f>$Kg@d$(.0->T>?\4UQOUF0Gs'tP]+`_Sj@)Al6L`?ZN,8'L5K4+lr[2->LAKBX_
%4qP3frNcQN\3j.']=N0:#K>FMid1HJl$4Gb$R=H].D/j[FMI>1p?+WMb20HPb+:r"FJqO]s!W9/:g3g0X$b$<i.8h1--3Qfg:+2l
%Xo/$bkJ6d6VTbgQR@G"50M*@?iVc.SSePAehC"0i@$kAIE,qt<p!T%VgC97N=3I!1W53Cnr?k+MmDSP]P5fR0hmG7LR,trSCnB]H
%>:[&Lptg3pHi81pYIqCX9/sP+^B*sfn1R<Bk`5s-Mu19H=G.Q1D`\a0]Dr3jTGApq]U4C<ARj=f"D&2*L+e5_rU@hrMhL9,`VO#d
%_khZ;&kRk4b&[=PKqoMhq==@\bt>N05k3@5j26]KC[Tc+:Q_c]4Y+2!=P;'q4rh;$W=D,IcG+\9q%c><pVja_7`aAqj4T($cA&fO
%[*X-I>AnVE%IM+*f]YPHBG`)TbfWPe]DolXI.?VZNNhJ,?M]N[@+!_gMlWi&f8g87$iZgWWOXt$)^F\<kt=3HH9RsKZ/pIBB]_<Y
%/'k>>Is^mrErY!d&$"q9"@.&$2OLPsQ-/g6)uGGl=]sVWdU%4nCA,s4rp451XC;$dfKH(3:S^%CcBk,Fmsc'I439E?b)a&H,0;(C
%AJ8Pok3nC'Un#[uP&,kub4ES32%p[6L_`(a`Fc:k;Yji$'0$`gn&8dBB#k1PqL*JgN4BU3URi0l\#@ECMJg'p/TC0r7R-qNK<"NH
%5(*@8?E,*eF,gE:IY2V=Yu`D=]ue9.^2r>^![eC9g\1&DYh8_sV]hj^]()H?>'R0Be'0fH+tsFdq=78P\\.n&p*Z7,hMmfhKeG6=
%$/87c%s2c8lS];!?:>g?=5J5lYrV+&OT,5I+hj?5[68W)m(4'(S"o\IS(_FPDNqo;mqdWsZ@of%pKkBgli!FLBB!!c$K";=+3=6>
%k0!8T2g7lpLWrVKi9gDqr2]]6Hhl8tZPA^ogJ:#f_L\_2dgcd*R"l2EX.Ru2UBg@YRXhPIhE5ZOdFOjmS!EB1G<V77JRjI8FDJ&O
%D!'R_\NE525jlVJm/u:*pp[*U>FYMfN9Z$uIGHF"h@FhZp(#^?BY3bFjmB1!58ebVQ?hpgfO([e:fn"3(?S-$]6hG"rUaW'qFF:4
%j`OpXgYH.OhL5%uI(d(<V=`a2rR6iIBc#"10MA$"T70#.e_BupASl/[=HfT$Q[8t%G?]I*\'utTFZq9OPC^kp#*mM1%f?"h@_6Q8
%Z8o`o2g\q:?L5"Fo/M-tV"h7jp@0jAOhHhDNDJJ1It%nX^%+>J2G.'-!`8Y4hWdH)-`=&`!XS)_0RR!urcG^#=pp&pZ7P('Rl<sO
%RpS7rk&7^1i,=*.hgVrd3K9/7D34MC411jY`U3hn?XG?K?WeiuV;60[g[`Q\G<R(@L0i!Vch3X$h>$;go#F6"c7tL%hn"$@^_ce:
%+lCs[^Q1c%AXUJpU-F,L:*6A+GW!GiNuj&<1bOUqo&[!dNF.l6\R!p;eO(S+>!qHLoOaqes1DD^Y3`iNHL%8.c,U>)nu"FghuC.U
%G&+Kh=YBAGdfI.0o=("(GE';$kbu*fWQ\:q.I2?TBt]%`2YOK:b5U:30?[-p0+MV:fdBSChL,@5oH@?h"'W%d_\E,$i/qr%<o37^
%%8r`]$D.c"$a8mf.uQ'q*MbfApotS5<bW@]lR%bKms0ms&VWTVLEfH2\+O.Dn`?erGJd3TjQZN6o^ke[=.7mCPaCjp]);gmo#(4=
%iVK>-,h'F&%F!MA7rk8ge-m`gs#0Xk>7X?<>@!$i^"pSj.'E8-Isl@LEoZsfpZ@fkBt)Ps3/)9\YbQR>E-(5kV7?ET%)p<,2s;tu
%9]*/A<Oqf%>LV';_1(XjUY?7I45u>X\$`[eHV(tFQ'p2!3t+B(7r@e1e6)^%J](r>(aCB^7-=Km]dW(s]`Vp3ag_2Z.N!u]+!7R8
%5<?BD(/!a1_/JuO.7/?o\W>^E2h!b/bWgT2.RTa^%(2h/I];P5;iT:FQ*keG(:7N6q1X0nd-GT+DSE'b3dfT$GOi@%B++mlIib02
%`saq-hVR7M=Tc*TlctJ`,!3[?Z8Q>%5a&VNqB4'fmC]>=='boCIJ(aj&)Enco(;.XCHU377k\CjHLbL@7GEmKjd:Jkm,PDdJ\V\B
%0!suf/W)Aq6Su`P$%%/PWoNd3r9eSa_)7daGk(Et=(o"%^)i4(;k0./jZDQEDu";)^R$Q?rZ^7"2K2IP->rO%q:D1FIVE]uHeg\Y
%#D6R@,PHkH\Po[0(4M!/k=2pYNa=q5mX]b8qKe.<l)!4R4*MgYrtZ)MUf4pX(SJOd$aehObW1^'d_#):qV>;IiKsB3g-'`_o(`+u
%$sd!qD.jb5)?&C6EiX46m@YQiD=_QE6s9LqHs)KEP(B$LeGC'n'd]kT`9Q=*X*YpBJpI0bH#mt.HsP@(ZJBg<K#.q#/,&pJ3?LEK
%ol24)^,#:rrbYNG3UA=T(@N4Ef!"P=LOSmoOPELWd#Vt%;:R\J7ls4f.18H,pZ&=>;fDe"hU:hbd64Xg482AY;GSQbbeuN/jnQ"<
%9lS*2/!ZA_@.qj]<rHJc%Oj.[8mmnQ!dNq""t+!X7=K;q"kI;SIX>TBimDd`nCr+MRU>h!?,c:MPC\-s2[]OM]cOn9oD*66*uCOb
%pHR2X_[u1DQ/u*09Bl9Djkl5LkMqVsT2qrJ.Bb:NIKLXjI5U?T\aMCPqB$6`%.>8!?akW2,:^8#I\h8WrGSOqcO=dmc,.kBg=6o=
%Cj`TogOhD]m5Aku+-uVPn@.Mi_=,Y<dJ*NL#a=\+Y:Nai_N]n[9%9)(:SQ<a&p%mER=2SSIk+AN!mK_Hd;IMsbNPrJh>/lkb_Rn&
%la<i`?+n!MB[*T[-gs:6Do:<$$cDla2gP41B2JF#H*E>E*-WiVRW$Mhq6V"'"o%4!5$jB-#P7Clp#"!SgH0bq7*gj7q*cBg<D:q[
%N:cu_r7We+T]([\T]08eL>N?9]ut?-Z!0Td`<RpNec>N`G9^fsV"E8_@'bm+?J\n8H'Cps'"nWrQa]T]Rh'8WF!$tio$Q5Bp33Ek
%fT=T0IaVBKG7,\!?Q"6m67otOr$h'GmX7>mk`Im=q@.70j3pp!?0</]\.?a>DHFu#Vcj#iIfBl@T(rnp[/V&Y=o\+gPg*CnpG4n7
%h!6V9b-g_F:j@!K?IQ>a?d2KaIQWVg$@IC@Q+Oi^[m$,@5=Bi%s.,QRYs@p(gg5H1e@QfOIpRR$&0g<ULq]2*k^Z5XpE--blms2?
%/:DDb\=$g8Ua$6H_$1pOeVAEMgg@&,QW@>0GK8J=:VZc)AnC+M+i:Y?pc-ksO^KGe*[WqBM(raAhUs@`6T$kZoLF!MT%5@>m?/n?
%@nOL4,]13jBRXQu>lFM90&M,*A#&U;k-IONpq?=d`i_7jT^."&bL5\Pe(<R<q_pTe9qroH,;>YONFs:ZLsc77#:'/<cLZgL2a:rT
%=pj9Vg%('S(o2(n%V0:S=0=]4$=1?UF*&p];uUkhhKt$?1sG>9k4BJ(jL=huI@TF!4W7@TC9.ZbXWLt_@P:fW].6?D"HOXThJ?9n
%Qc$)Qp-Gb2?`8)O8U[kE:L.fZjR=qOFD7b_UBR(Mfqo85cfFD_SORLl<075S4T*[eG/oM>dp8JMB";(CU[_g?l8Oc-NVp%*ieqcI
%q6\jj%HuSAVjmQd#C;IqJD>=Eg?ZLhm(@0nr]KX/NGC_jSg-V[Y8_gAnD&pHl./$010<j$ErGr+:<n(GJ@9\YCG5GFI\WJ"<W>=[
%WpLd8I?0t@\7:qPY1gcHLTBHQIose*ku#LjZcCCOFSqmia;q\Hd7udTW&O5cRKduI=)GBebr.eQ9+cP(#6Q=oZiU&/^OmQW)S%2[
%1KSY".R3Y0n#<6,*OV=n4qlfmeFmn!X6gN?ko=ld,Kk<sliG>AZTF[RZ^2W<&+G&.KelaJ3=grT4kI9iUX=_gB.cbQ:>Z$bAmXoB
%7H_MC<&XX(Fr`P(F3eVH-bdlroN&GHQtE-Mg1kL5$]mQ-EEZ#-#UbDY1JE=*O^/eFAil'j8bI(X[S2?d\krD.MJ\o2#1,6`W9uND
%LW9Bj4dMDXQ]<Y!\t)4HM*F)XK=1<3Aii<m9o=%7#g[O.FF`]5!AXW(_b4mc(S,`I"J!a27]tbHmJK^,3B*ge1WY[FVM\"dm7DD-
%E[M-nqNU7R0B.lKn2T1oB"OYSiQMPsh/G^_S9AnlBocl=hVrp"_,kirZIS1Zo4f:&B61PMSH$)=X1Z1)0]Q<#P+,P.OWf/,iOREo
%Fb3iq$Q-"S&(>BcYtF29OIS#If=INDC4EA^UQLB4jbP`-g%,e%,+X@#QA*;)HJ8<,5*>O/r4=K7PL=cb>m$jG>`po4iot[T>`M9V
%9ME;4B/7mQB1+CmA^.bpHYe8=b3^oa*-RG'`3Tr1+1Hdh0#$T2$q\e;%/:In(KHO,O685nlA6+e3I`#opV;iK53`>Zgk#[])S%=P
%lVaQ-Xb.!]qA)W>k/bMP=[aHUf(QJGenHK?82bKgf0rA_.Pg;=o>L(%c+sl^=f:)*N=1u-!'!q9r+R=jjeg#M3d)7Vg#3.aCb'YI
%=r%/^Q)jl'f)FTHVd4/J;HbEJW^r9>oOHP:M<YCM5P;\`-17lr:SuE6j]V6HM!7N#0kCi>MU`rc+Kg"XEVYO\*J<i"`aN5RQirr"
%3]nJFkNUS-+MqjE(*:(JlNg\%dRr1u5/sKE@;5%PZO9I//l(Bq"\RGLpXC+=-l<qMMJgX"h#J]rnSuE=&&sZA)9jH5%N7Piq*r4*
%?@/#o#c?;rjd'sD$2IV;Z[p;]H3_=/6pg231WNgLEZ8AVJqX.]p%fDDH13+Ir:+h*"rnTFP`BcF#iLaDTkca)r\?jCF6[(LX\D@r
%R+l>A<khchjVDpmH5g%/VT.AFk&6DEeSq8;ppQYSrcnGj:*P2K?J^nE4ZjR9clKrXfT:Pdj-Su2nX%?Nm^p=GIug5=5)q_rVN&Xr
%la]1!"t$o//_#C@q7`IF%Qq/nlRt^2$ZR08ht-7HFT1Fm7fd5.Mo-59^](O)HK,JIAb6]sVlkTj2*h#mplm'YQWaHSGmOZ]r<7KC
%>k6-13XcducmU#pp(ft;bMakr?gs;g3?=OlA]"d>+gocbS2=\G&a0jsKi"UsCBt&].ZXHN:dm9V-3L&0?IIX9i7\H5f``#m-C5W:
%q)lN5+p*>`;H"@h)BtYY-GU>lDLdp].\9,A2.E?qgdDP8"AO<P&0.IEmo-jJ"9gPQ;ZVp,<.HF'\,fJMRE-dN"ZT+Qj"Eg@BPKAb
%0V!qa7VO?f;47hG9bSE&,ajOfdI%-3KA[G-KioDYdnh(J;h9nU<.L`#'junMDLaPl3/(-33(hXbTAWX450g&-)5X;47qjHg2#@%O
%T+5LX&h#U0Xb0iAn7`4H$D70G)qi6DR_W@7;4K2.;@XEBiiKi7@I0TYJu"eR+9aMlG:.oV,JYuK2B%Se=rq*3&V4>6_^Ps)],P5A
%SfOPt$ugel`RAM@1k"u]06(ml?LId(?[oU^)B/"=b*C<ZGmg56@%teq:dcIigN`6T!+pjkSdofIn>rN!Jhr/')8Ir1+[[fj:,RDO
%>/8bM&M*q2@lt-YFNb;Kn'FF`dLN'I6o-c.\.AmK\l0C,YpN<4c3*)4%gsqoEPPD)80Z-pLpdBU(`a26Zlonli\\I^QU*r&edODj
%r8p'4PSGU@92N6nPqP:F^),8B_oSUnm=M`P5X\FtTGSAf!"q$iOV]\c(.AL"8;D^nA2QZ#D%)&u&Mh0"]f9IDN9jJ)'ep!HbeVq2
%B0ddc+G%kbii#>>?>*f:Sel&b+K]oT9Lo^:-DGmZYQ[1a"R(3$#j=ce^`XJcBaTj,J:&T:#5J$^f2.+XX>/5AOt[S`Sj3Ap*MI'g
%p'dZ./EfV28/\-Nbe__<5^rp@RPYEQM+^4s;Eo@'Gt(t`6'qY3ok?b.Qlbc&bU0]c6,n[?+u1X(Bj?$%@Lt775k[&k#hVlsKSU@_
%5(L$5%FJ#L*\n/&`7W\!B8ABd:uB>:(=s*_d6`di7O+j&1C1Y1cnQlWL]WN,\cQ[qTYUCIJNPS`$jm*(;iM+D7tG6MKaC(5+>,92
%JKiDN#inK6&.g[r;%54KN<BM$@epsMHoFEnJFa&HTdM?e&*B!AOKg&iJ]3Y213i=>Z![R+L+GsWJB@jp@VDDsO^i&4>g?.Z=>u0_
%"TgR_.'%%rhtiX)5b!9h+OL8]![WLR_">!1JWFTE#]!ll!\'us=>l5m2)([[Cud"<M&?;,ikWtZE=`]kiA\sD"p'o0Ie/6i@D9mF
%(`;8aLf^OCIR#^H"pBOW`nWdtX=-_LZ%.sjiO+`*l604a`(+AI2?[l,`#qleRe/^-JPQ_B6PGV,6`;YR"Dq#K#RY>dC7,U:ZHaU!
%AnW#l;!<"[\rGhR65)(s#Rgd_$NL@sUdObs4FmQ871K[;*\\:-SYA=.:_>`0BH:Iq*#U/5)!$77Lm10'0n^#r&OE@o*@tI>&7@(W
%TJ.R<l,.EfV+#i4HXn?$Wc_id=<!Gr6$%js+im(,*M=)M!C$sd*>9XLd.fR+0PD#4mLHl0"t;oo!'i_]>FmVH/.;X@LWr)Hq8<S!
%@tbK@LEP7YdFOKf"*7XL,_2=;n<nSd/uXrAJ/pud(jdjP6stsp#QecQ0ZZWf!<EKuMLD:EXEYRa=QKk/A1uO;.T<Xs<t6^E7ACZ'
%l',6*a5@4k)F8q2"U'S)1*(o4Ptt5L#lI:(@2=S`b4cU$5]bAT!WCLfFhm3l&d&dN%>"BX?4n>;JL1p>(8]gl^#jt7U1a#X[\P[P
%Tsj.s!@S4:!?kk`U/`TtnNa/&PbXVbP+XK[1^&nY,6:5`2aS2aP[FlN:SS!@A*j:n&0[oX'I!2V&G2_"H3$f'5gomA#d-,=\l`X"
%(.(O,DhbnQS;YF:$:7J.aFQ'5H!(fZDkom7K?unm/Bq:<O4k,>KRs8W\M+1S58#a0.Peo9jY]4Z"P8StY_J_Z#ip]8U]:N!@<mH<
%aI09*`PHra&EIQ#)&-3T_5[j9@9J_lkuh+AO-^]0$ppI,/hHfk1p4"f'Lo_ZW%oUBF%3Q.NiA'XcM+<39";duPG!%CLA2a<d&=a2
%$(6>)/79&"(CRJLe;XT"(H:S%p(8%dBi[koK2u)ETW:MZpdfF.3Y.4W4:CQtO(6R5LkIY%2%(GS8e2VS!K-p`(dlE>-sQe2]]j+)
%fY^*"K_IrlLh7>e8jjGZ27h`P,#_2Y+>mqW$bcm.ciae[2#u,bbf'Q>\1H2`#g#sU6iNR%P559Rnq5F?CCCA&'YET0dqOa:ep"d&
%cpRj^19p;Po*%5&3MQ80$3<)=n/uh[6FO<N,qM,Ee07+M^<!P_5gHf![9*Q#SK5ag<O#>-ft]1\N%tEbPkDm9`?I-r62RI<YnKBN
%UV[`2#o#LIj&d#,":gDYj1&2G.+E_4f\NcoZ05UN]oc/h04BqH<ng1VC,q0mgc?`jL;?mVkR[4i$52>E)`i-BWRV."*"f$d)[!-O
%;*9m]<?+QfMNDtYkY""6U=k\3&E6*O^7ouTJj><O>)mSH&>d>c'p9p8=h,_5E9bgRZ>or!84#BI.GP)'c\.ujV4cL!KP<J(JQ''l
%Z69#7R4tS,I7>h/Z7DqM,op.tIKQM:IEPGt:T'd/%pVL*M0_VN&J+qA8F2:oa*&'S/K4i8)'_t:#QeN"GRtT8#%^i7A#9\Z-4ln*
%D$*.9E37QS1.6?5Bd<u*RJR#Bms/Q_U:!IHosAlH)XJ]"XEB7;W*&(-d4Z,b01i2]NKgpV;9Y\h/VtJpEaWooi7o_"BpTZoHrf1h
%Q<9WPMmVq#mL(Y17\S5Ta[)g@"1Q?@.;t$^!Bjn^O-FlaTlT[ao<JKk?DI,3YZ$GCN:Y`LG(cg2H$RfF$Rh+P4I65+G!7#]0qbnj
%Lo6%@S[JS,,+i-Z%+]MKc<(3mL`.b(Jp$W\@B/gXc2To<ZEeWR"fqk@d,0^!`n$"T).7'3\dNZ?6!MnS!&]>"\Cr:,L&i5'G/tP3
%4V"!DC17\bb5=_85)7Mk-+W#k^rF*@H7#;nTUW`1cl@H=M*1upq#;sW_(^O3JQS9C/02$(R$^9(']'*p8MoS),1;i%$j-N=NWC<G
%.Z&9jOC5'*a=e#K7Z2Y?'\s4Y+"9OoB7^(C]g\'R&MdauB]WBi\k`bu[^$khJgA3WQF-t<O0Wls7-I;1#pHXLB6?J"!/72HNY"Y:
%VsZ6VPprJu(^XdVRP/=VQ'2ar,G+sQ&K,DBPQOLtJgQ;%M4XlG<XkO=Y_N7h86nL7KqK9^UGUn6,[4^)(,3&!9+aGEmtftK<jE*q
%o/VrCROf@g',$rE4I9OH:u_]rp_3O&DB^>3N%_/e&G6.Q!";dW:BoAm'en5`W=C!OnJkX[%bE"H,1[gSJqF0JYb53Nb/%Qg_)r-0
%3Kg9_-i"[G4:49MA:QLrMIT$U!NkD24CB1aBd2[$)u-3=31m"G@E^_TQZYW"_:bYt.6SuYU+hB3E[-u'U5SIJP]@N@V&5VaA!ir4
%;R%O@'Un/E#)6[0jk>SS7mAcLno>!nShHKqb2KHW.:><6gb@F%<:hKi7k$``C=>X-N_:B:PVdKF@`0P!24RI-4=#M8HMSim98"ch
%Ce:$hj:;69?78BB!98BW%;(nIk"2O>f(tV,7>".K)G.n_A9XQ5P.Vkb.;7jU*$u+HfK*UUcE_Dpf-aCfR!t25(8_+$,Rn#`R@o;q
%J[<V@5m+6E=_Xb5:];=p:KiK-2NV`5aC4Fi0qldQ.grF**NIcRaL-k8nR,L5Td[g=HbR!8b_qX=BA,c%M"29<+enEuJ!AGQ@U%t@
%ao#ppOsj#"r;d4X#tiSd5[c.d>mRj6i%-?Y9S+B8%&BRc*LR*L8rD6]d0'`8.keR$c!\%!jjM%ug/N&OS.&1*TN3!j)/De._5[/K
%G6)[lK7K1M;oY_o-%J71R"VGe&j1\rKs8f"XJ[X2FL3PclQP)8k@0LUSWE28m+0Ia1[=s!=]+,_d.IU<f-/U.aFZTrMRb:LZcC]0
%?qFgFaKbfRJY.n&4>L@Wid&=t3L0Y7%l8e#MNXpV!X]!K.u8+K_ao&H0Q:-m45(@*6pf"8a08N7G)&MSJJ"%o-1;BkqcXh8'E`kp
%A8->=Z9CTgN:mT[KG/DDMAr.l%EZC`E#sfr![f\1dS;57Br$Sf#\"<pe=^5H&fIprP_N@>dOFi-@3p\"*U.!Q;Bh(;0N'05:#lNj
%aJm:<>"8jEi=[f-"X*>oOBmid\mA<i+@:9U.5qUPE0d1%"#[MMA<?k&@AUq6OfO4.Qq/2)11nI0!;/&gc6eV"L@?JZ"#5c\4.,pH
%?R=Z>b+o%Li_m[Al-lq.[#0]/(/Us")b$&S?t^*$T!F?t.?5qu-2%ERO=095neYb\ekeV,?3T^:@.l.EB?C#^#Z>Ee;8N(=W/c9E
%m5gKYKRFs-'-nc4B.Xmn7OU9J3*eXcbaL_8\sPpJ+HlW![cBCJ'XpX;#]Va\NBQ,D?sh62!o.*iT9*S2#57S/iY:[.a9,7G1X_dK
%Lf%01+%kf(Z`%;!"&51@9YmG5@],M)eM2FhH-Z<K^/;#D^]iP)bs2r#iuH)"cN-R`Z!jQ"'4][aG"stBILQf,@K(m!GhsF[R2?9`
%d*j@3_q[$BLVp&5OG:JmbD$U^Q*rA8=Z-[FLu0lm*g#!-iJ>\_"GoL9O>GZH#2,0dTFclH1F?HiEl!_-HtaPXI]bp<NppP#BTU\'
%](-a""pRSY)W@it'gJ#$2$SZ:Ec;.&A]UN(dOt;>bn1%E8aqL4,&MnL(h&T2N3OY)?=QmY<eAVY+hm'?;%?@C[,>PP-4p8:$n/B7
%HS?<0Ei_q3N;GQJW(V/QAM+2?ScWP&:&sg'6\?V"`]iIn4Gh([5f&;7?/,nT),"0B`<ZfdlRV4aZI>$D0Ka()H."]J(g')AMc.(h
%dTB$B.1>&j"S3e>N(loA@`+pn$$jWo7%Aph.:j&_nq.?B9Qhl,ITY;)f:Ic'SE!9MqGdfX6".?h$UPPF-i(jm"4RS^%FJ+ir!asm
%&JA5=)?l9>e$NP^XK-mAWUKm,g5&Zq/=QnGVd!#E8U8B0#kB\H>3!Pc+3#JM/u1WGc;d:Ad\s3,WQ!:#A$B?q#r"j`CF)VF\MDUf
%8/GX'-q^Kg_juCIZT1do3PtQUc_)8KFgDCeE1"uC"DU)VBdi_R"<'R6_DtLf&gjsp-qao?&Anr$@hcqGEo\9mUQck3S0OCcc-R<V
%1n;A2oW5mq6nFbO821CaMd3..P5bR.34`Z%V,MLN`s`%4`Cbm88h5]*-,]"GZ.,Plc5PE<k&HC(lrk:Y6^Le.]2?d8U5"k"Z_@n.
%"F1TUgG,>e3Sq'q%Wfrspaa/XKOgK2[mNuaM,!5N)b:2WA^)[em0hB7C0a\OSHt4[Bp(u1X;G[!_45RJ%&ILK5Q`#6HUDTjkCtF5
%=qo2,8?Ui%MD&iSD[Hcl+ODr*hE(-@PM>h/)O!;g9na]65]/Z8JN@`h&%$+<5`IKhZF)Cgi]WCa;<lKpQR&?I2@XT+Uo$N604?VM
%jgJlT"?YN.dm.=,-Y1:-2gnT2_Q8EM;a_Yo,cP8]^q3?jC9_<iapWhE[A^Tj7E#GJQ06Dp+bM&p@OHDW[a7^<i]DbO:0VBPKA&$"
%qf+_gc&j@?gVlY74kXj%.Rd)bE7Z;e"r-<Yh1"<;.AM;[5>$hYm695`/[VlZ)7fukdS9V,.N'"#6+#rlgk&pj!H4%)#"Pd>HqF46
%JTg<+ib(.6+]_M)2q""n:6_0o_sLZl-pD"KNS4B]St[KqCu8\]jdEJ6V4D+fU=6Zp%Q!G5j."Gla$U^kk"Lodq:7i[bPDG9T]I3^
%#WKW=KV5)8qrPP7[YC=kE`HU^Opj:-.F&X>'t?tas-SAth>BZp,HoRf^N"Wm)^nZ*TWPQ$ESu]Vf_m)mX/1[rP];7TSu:%+$"V;5
%ckRl%][9/[T8OL.L0!:Qp`9r]GX$_KLcABm@@b.V"drV)TuAmG77to7N>%?[K4q::nAUsH"rWU34"0^;%ZqbIJP\+lS0t(;&P/_X
%a>mE:BatMDa<RJF(b@l@,3QDnC/U<hkklkdF@6BaB1`"doN\rj`AhcJ*B^KbnXWluP2[RNK-LQ^#.W;4ZtUnQWcGI?`Acf-;u)H5
%S_K'_-.VcMJ'gdNk$fGR3[\*),L/-=R$X=[@N*J>;*((LEXX<,996Lba`l?_=Kk2U*C)nBqanU:B8n;dLm,CuD-<ekGR1i@.124<
%KD6eU4\(>s,l:$l=1#G*;2]GE=(*(!(Z6^@7RRi3JWNYrBdip@$(#bXojOAWU:;]6nh@-iA!Y)k4>4ou[@%dA#_82?1`$kB"Ka1I
%MZX;W?._(eET>]uGGT8uKofW&'En\4TIK9@O@(K+7UmYXG[]g1egTYuCGCAShLaS,8Ni\c6#aod9&1Qob@.D?d(7"RdRfFkG2]mu
%.Kka-F>/I75*^=iD.4XX4M#T=`9>VM<*NBs$6EIc,@ZFZCElDA.&!<AK>sFCUr3@8k@(?$P]Wo?f46@J>ok5VqHmc<AR**iQf;.#
%'W/6n2GsnIk")lj74nb/RSc\a6sN,3Q)0_*$!d_7,\WDLP=MHKeYRJ'%-'T:RQINs%CnFA(7ENDflB7\ZV$q:E?/nXPLL7G,#c%S
%J3:rd87aD:3_X0X&T<aMVS8ia=%BoJBRQjH4Q$KP&o!dB?);euA_`.fKuU+Y*#BoJP+<iX,u?h#Co0l$0bI\(&G(KQ$LKVo%MOY'
%1+iHu$08DW0V+.reR,5[QDm2f8oITFH;`%J8^Jjq?.l^J7:!3`H;&@Zb*PsOBa\fb,c0Y!?RS8\8$6koN/.K`PoF_2\lOB4-o[8<
%EHdi0i^c(W.Z9fHS`bC,^neaeZdQ"<3T@UYb$@MBm`ZPZh"K\nR<2_!T!342p$Mq_k071O3$&gmgccK1;!g+\-]eIXJ>M+Cl9MZO
%`Y[d69XLV]aX51;#'n]C=\YH/TPXb!*s%Y]4((EL5bFDN@kH13":@9EN6iEQNIk[_,7VTi%eu$1;mHQ.Q;9b$WlD'hiDe5Q1"PCg
%@#4sl8j^neRu^eCLE$b:`LCe;KV/=&R#JQ,X2qJ6k=\C?Z,L6HO^j,*E80`PY*+Z%c3)LD]THAeFB?PR"?n0"A#a,4]NDVA4\B:K
%k8?k][i\3l)7-4fPiD/Y1PqHuAS3%Y8BX1BC!2%3;*=N%'`d]Q;W/#I'37&V/2>_p0i9Lb*+BouX8CmQ0f2LW<XW1)$UB>0MOq?#
%L\EhS0(.3LKE0).ft4)ON(BV8'J#\YR5HuEB!EIM#sAuiV*iOX(u?f0_LZm+oE#FEV#h]l;3oY8Y(f9e3ed1<fo:\#Y)!NM9[?]a
%i-q8^[Y7VuDjaredam!9^$I0@63?u6P:^&^/Zj^*IcNDD_]VW>IiUM+G`qm2=K*%HD.82/VPUj,+g@h)>`b#.@XMK<X'?^`O58*$
%'ZlXG5`Kd(>qGCd&JUOebC)b&$3a@,Z8WCmi>C0n.;P_U!d@?bh;rWf$p)9a.JGm32R7"\'@q1l#Wu0_MZtD>Y&Y#WecN=B\9<Z?
%=.HpU#Wb`JpErs6Q8/GB(_HN&I"j%s>07$.:pugS@([@Bq+0R@9YgIAO5*o1N'TGgo+[Ho1PM>D)q3M0'Y('b\`OIh-tHrlTY;S?
%%*YY!I\XKf*:HOAl4@&\@+C/u>N8V-2ND?]RECO9V&+)o*MK0ZJn<NTc8J[P:oRMEqqjk_*Z_>Vjf'(m@X^Mui[/>lV,&_''/Yqe
%dREAd-t?B+^jhC"7[Z$KYdd4fYlj,6Zk:0%;FCqn!.m&"1?^3^Jdb?>T_hBgU9"V=_&0Ydgft:O9;YQ9!iT:Wj;/J<U""`?r]1`,
%).:iU;+Wc0'e?AX7ref+G+(!`V)cu1:a-TP_a=4@"O`Ua)(qE$mNINV4),$V0tSGCEN3.9-u^-KYuV/UnO<XB"gKRXp2J>0A8$X&
%P@TG3lT?5B)t0<]VBQVZ,SZ]=>b3.C)^Z5$5=ZRV!$<7;<-]_lT_oO-(;Rf]PrSQK>=hH,E"6)^\i+U*OV9A^Xgo?+oEj/@;IJW+
%VbocQ@q,cX@hg>iB%]qB=puhf-1;OK-'lt&X?#8"!Z74KQ)^Kj=NdC\1FAemADH<`N26_(Q#+ss$T9_PHF;K32kFO[;*eqKqrJ1H
%72."\Fs4G?]DP22W[*QXUJ:RF!7edSJ^GVddRJe(NZ7#aW2'FtLg0alVll!bS&M%+4Bf*uZ=F")-jUB^'3"InS5md8iOgBq*/aOr
%:V0#>aDhgG(PPFLX?>HY3D3E(N.B:*P-QfsMN0HS0A1N@bEcV_2Y4GP'^("j8Rdu485Se;<@B0U]VUKi.C_mdaP&IAP.D7G&kPG9
%SaS%f\@W#>@,,2>ADG75i62YQR6)]<S"3U&WqatT81I3*iY\a[Of!ksc4QrS'>bhqSf4dNjpIqQ+NCc-T;mY(0pWN+6B.[P2F6D%
%)]g(%Tr`l_2$\"8M%3+eL7k`57'u%W9Zj0!^a6*Mf((6((jo5)>9[2)<48;rO*oii*#@3gT?AX6igX1YNujX,,#n[t8WLhW,U&nV
%<#JGp1A)n0k\cJdR",Sn]>T=qABbTI81OJrVQQFE6H>5+HZ2S3Tn&^bH]T)*j3j&Km(<+FA0W"BGI`dM'8\o`3$N-[da!Y$p<XaC
%A>nKd*>U41;DY31%3i\%mXW:?[X&S5H^JK5]OS`k:eJJ15.Ds]C=bA0b]HNEYls1n2`)s>D*=eC>V7'3Z,Da/X2k@@k0p^TDhb!,
%O`"Vn0aAo*=;884DJ2<",Zg.UVq;V@3=t8,8jFGp^*M/K#eL2Qf&bS1g'ESk&N:6dSE+D4'UYr/>j2HQPtqY+/FI,+dC+TtEf-Pi
%VPQVEP=m]:1Tp7Z8"]`M8dr=qm$.@b.i1NlR=J63n<H_\.-!r$0'sQ*3Dsdc[RY):iPii[PT15:D's3@W,/)l-Y>9Pl!R,D=3M>k
%'SN0'.gE8i3uSVZfr^7[jU:9P.`nRi)t6EPo%T#U0I*@S'R,5,5ai=i>a;<Lp#QhD3YlWnG5G"TXF.V[f#/K[<K':hD?a?^g4^m)
%2pMkn;=VXt2+:%@7>#-qU',<j4JFmJ1q[Anhsd`RF<?,.Z*4UY'db")oMuJ?)Ig*962_(I_Z9o.N=c`P\G5:<`W@p#k\YhO#-gFm
%RKl*Lnt\@,.049poGDuWq/U9\TitimUD/<RKd!D3.1"F$q)0Re3>I&eMXKQ(EPN\1BEn:bUQ!%j-pinn;:6\[4sHpY*iHh[,u:0P
%9Ag'pWhH5)2`aE]1F:9WjMe8]cbjTu)93t3O&VoK2<N4pA,4fndQTDRl(HB>q:U9VJ2,@k;.6\a<`1Y#^uR6C7V?-eD>Y7FUnQ9n
%!I`0ui:I*),Xr=\!u#!?A5=="kNn;]`l_PFLFsa#6HX^$8>EFW:dCEf!kH+qd#P>N:mJ,RO6)uB`Pd<m9bc%r0t)p`*%GJcLrK2p
%KP3eY@^s/sF>9#&N#Ci7I(5c:deRU/%[YIK0L\6'.a3%B*BVSo46V&71:W`C+>8Tb6A.*[MhOhe*H8)h#"?$pbfmo(8N115#nqAk
%$>W@*%[<Mm&C?'M%IlsrJW(t3Mf:R<is\`m+qY2%8T+el!#Sod1GP9qOst`g1'ee.&Vu:*Gm+Qt=V3rco$7HUbsE<a>dcVT*dqC1
%<tItJcTOm*C*Es58Nl$u&q\1DVqj8DPQ2kqdW,U;(J';.5-njWTq:S2$V#)R0XSsKL(6]%SfZGBiul#1N&td=/\n?IGU!J6%Gh9,
%Bko;qn3Kf:a4:FTGqs"dQh2i/p#-=s3%tc[9,D7M3aPV:OQ_VO9Lr),aH(H6W%kq7!Ui>t8C>BY"H(Q72,_:]]ce8-``U.;TU*n!
%)U!tM#)*J:kYTBSQ0aAI]&5stNJsBc0c8l\[al`k$uY+(5R-sZ*uR,J.Lg*u9:M$(eItK/i^t@n7m\hadY&Dj"Wkf;Pq*#,BH0PR
%HoD+cirpul==#"D85YP,SN!;`.?sM$+l-[]+A/8iNR\M*=`FRqEtLK3.)Xj.o8.l6Q?"AZnq`/?_XQ:<NgCD@FFXE1eaoVGW845U
%f8Lh:f$[16&Pti-PTg;M-')dU$-;j3]A]_\jU3Jogo)8sBYmck3=:Btj$hNVQ!B3_Fc;"]`lF=66(SG>FK"175_^ah#nL+LLeni_
%NXB)JNoB<u@QMo(!"BI![=mc0;kK"+ju'EB&4&(W_;f`E6=MWo*Qtdf!"$N-8?lu-'$+^tA,)"nbYZ?]82]uKJs9&"3=*J%#(0:T
%'`ir]J9Pri?"Fe_L6tP!OC\TSHb#NF1_a,/#!pbSk8k%t/img.Vtj2^lX4\X)37Gk`0eX)lGN`!/eU!m:sM!Be<fS)?`H$o;V)8r
%q0:I^)r-d9Kmnc:j;<9]'9J4p?Q/XP(`H!.KqM%gg'n/"OQhIGi0Zu!&6B2o#q^c<ePflo8g*C(0br]'a9_uX`K)HAb\A#sPEn*L
%dE5/o'Nud/5]Jk<YU>OLe%CEmrrf.!Pe&&<g_>RRW0O2gE>^PX:`0$aNBf,P6>-q8[@tKpgsG6T6=L@Fd1N1U[#3ZS-jK!H*'HI/
%;m-MWBZH=j;&L_H)<6#cjc*8PZ&B?+5r=1DK,jWr=s\iB*?7D*j=(\@*(reaA/,.1LQ5ipVodt]M,:.qh?$_c7ELEXm0H%d-hG^t
%ad6JoMhu9bpSKfD#4(Y%Tn-$$MCMHa-KB)_*^VSCVN$pUbS8,JcVH\s4_"(#>;7".NM0e=(/^e$+cmKW2slDe!EIJ[I_LIJ#kd1"
%TgM3WrD<:r[J3m3ko`DqR17uZ0Y.<,b&WSI/V/4V1gF(S\#)ML$2[*n$"?-<,<,r19rsBF'10BClpu#ad'sbW6k<6IpM'P9kqO'2
%+K7UqPgM\FpfZ]"ouWspM!#"<+L138a.+Y"Pr"Cg4t9;1&f<rFB&E,0@Yp13]^M)0,?1'b))gE->V\o%'(`GY1fPo?$P:D@Th#6=
%)@f',[SB+;m`kJ.Vt@?\Qm4F2WfA@(VXXZb:d9[EW.]"aOeS]&Pa@4>FW1rAZu590fS5-c(urV2L!,lJD'^>r:bDJW:"A6[<A<4-
%$#PdV%S\&dps-m(Z?0-)S_+c^St\1):#(s;IgVr:V])(>e$uNX*>akJ`62AmFbD&6WA-Kok\B3u$j'r!LkqCV+UH)FS:*kDJKPUR
%`m(_\K@%u5]TCEi,:Kib^OV(K4VKpW5q6[_.R'C>83J-hVkV*[nK$-#18F^jR"-;,:(D7[AosOnjc3j9J4o,s*@HN/5Ri,m!Eq/)
%c52Zsq-4"^CmH6YEBYB=6oBGAGX:7-5\[-toA\Cs"H\rej#E9u^)D3nS83fs'*'q6/srB>Vj^@6$aS^/>5)PE>B/qU9oJ(BdCp`]
%d5F<>!17ENfk83Y:oabL]&/P1@?^m;*kD"NMASU6Cts-maLV4P%OiN"#Y"R6a?cpc''As'%fn)7!uE/,4Kd!fq_%l0@8%A.]-LEC
%W,]]d=oq]D.)XF1'F=7TnAIaAL,!qM7F2?hnRjZo#.UTWT^2`1@#>Tn"EZt$UO$lMqiTCHCYY!F?&t@f7$'<!-:m<"&>Y&%N[4,7
%L19$hb2e:He9&dDZ36'<*+R>6\LIE<CZg%t/lnd$'(;!%LnISm(DJAI;[t$:M5hjqVm`Q1gc/u?UsD#._AH-)<q\?^NPMA5@bI*p
%F:j5M@/+d;!9kVD[:K^h:eq<+MY/jB;L$6HbBCg78i4*e0"YNQ-m1bWY.Ee<7n=(`'M+P/:sHMibuOjiP(X(-$Br"S)bT)g4D/+W
%l&?fsV13:Bk!-!DR/XbZG'J>e\GT$ZorU%_8P2gZaLE,bQ;&RbPSdVk1N8a0Xna`FH-T5XaGMg95uQAeKW7:`$tRsXdl*4CV)&Wc
%F2E*,P%]fYcf\;5[S96]\Lp%9R6tfM+EC:=FAJ-\8()fR`?]e$8O8?hCmPi0ZA0@e@nO%^P\/Ei)4&HUE\\7m+Eru3F@f+..^kM-
%h"8+IM3P@TZ)X$RF=MJ[<Jo+W<Z6Q)2)9!0,[N>o/9u]7U%KWhj![gC<%]Dr"-_emI0+EEG*3\c/AjCfVj#1)<Csnb9Rq];6IRM4
%"JXm18RF:&-n8kp4SNe3g<PtRGg`?W#Q5op/o-6=`dp_0m".,9jr#N+M)Je(AF3ks$(pYS)lE?eG2gs?]Et79]JL+]h1EEo!(@M'
%FI.7acqQVZj>&/J3_gg3P%YOD#K^M2:qk.hUq7J-fr8C;qGSk$QU%53/jVtG1/uZgKS6RVS<'3PAKo#7apoe(XgLDKG9MX""@Vtb
%nqm^o\@\k@X/@[.'.<]#.ub9!:,NPbK$Js-c3n1HR'&Ff177$;Q=IR`-7Br+U@>;DM*'93ohOW-Pbo]T?jnLP2^0lZ"/3FE;M9.u
%,!lCCZAF92\dJW!3C>Z/#dVGf7hTIPckmG\6_VQkC!V*>ja\JbhmDUejfKEEYQRuDS!VIARtlAg8gY+2Po,[k(N1Dk(eoZm4X/LK
%1IeGS&S.,j=d%d/7ud3T%EUYsT[kCRRH/pl+^J'b)I"+L<,TL?SOO+!Q=sq8'LS-_M%p<\0L%knOKofQAhmi3Ml82aHLeS^i/Q+R
%UR4=J(6&SKW0!OBU%4`%O`jdEM1Lm?JnL1D+V2%G#tfD`M7obBd'_7nCh=YC8>BXZB2'(26]K&nCuqc2O>"W(dLA;A_HK<pEl:od
%nW#eV=<.?qX<tmo;$%)V;29jU:@\g[&4q@Ld`O`b"(<e_qd(K)+eEA+`:q^N.$\HSI4q!_KLZ@^h^ad0A!^#$LQ8$p%9MoVq%;q4
%XLq0\6Y.-GZs,T/2cLpH&&^W\MIhB+<cL`!l-'VbaNc:;kq3>:E+OPZ'TaF+Ft]E0:EBsSDFjLkE'qh$iiUj&*,scf[=%5)6mA5k
%jq^AumASY\+)*JWkkKr(XL43*k9*&eV4Ah;#CJ+EV@k!P;Ukr1NG0.<:4+:BKSB_l"/ZEBd"K;ma'hXZ=;UL0mZFpiPHeW82A@YI
%Zijc;8Z-%>-mfUBdHs7e#obQCaYh1DDM9?lU(d/=$&/jDQsPn(g6d.-1IhHV)f&JFF<iB"psWCNKlSf)i`&]7%&hg2U0/6bg&lIp
%0/HtZ\I8dkKB-0PV4j_`2Ep`+H.[rH<XIhII7].;1)\D1<<\*Gal?:X9VHndW+_eK4(JkUk@4f[arC[8n6FNR1Cp`!',\b!P`Ke1
%8?)nSE?RJIj+mZ,XXcuK,M/&*kW@i/l5N<6>h<#ccs$2$p@A<DaAab69SIj+A8hYk%_s_,Ma$ju9H42-_gmJ(HjH)J8VL_7B=a`a
%(,^HS0@QXmpOe)T5<9ED=cC1OBJNYf:`hX.J@HPc.WKsZljNrXZ4.^d`0r6NgVmQ!A61t<6SMNl[9LJjTW5<YMq#dBdinsN/PFR/
%-g3+2g[h]q``E%9W[1j]KPHo($OPIF*5,9(*80RaiW'bWZ4IT"/=d8V&7QJ:Z<p'9h<nN"d7;h/&FI]G/srq;HC4M#?m]7#AA2CT
%4e!]o&p".78ob35b`,'t[A8VX&r!`:M0_3m0.73B_^TKa[V)pmPZa\&.+`R8FlWSuBY=#]Gd5;-8V'(f=Ru?I\P*."[tin:d`)Ha
%:O&PQb^h+DSM(6Ll=KCOX/uZaO4YMeg!a@s9!tRANX%Z72<SY<dB7TRWnU'ura>PjOqe<"mi7fX'D/bsa_AQl.3Cm:2Nt^YB*1Q^
%(jETP#tn@n7NMt/-SW6Scga^TLWFm%h'@*6gii$2OdG1[+o5[A[r0Z/F6C8tFP8DMj#mt<!dY;W2*:Pmlf2'(T6!g<cJJB&F>FfS
%CLU_4eG=%Yl2-@i13re.ouE5i:G"LcQX<?\[_BU3Q&Eqgq>0YO0)N\U[ho/*h4Yq50BbQ@dXaB-Cc6SX8%a$lrK/Hrgq32_N]SiW
%1PVILeiaH&\En(foh"EXSYc'og"0Bl_glB]]qr;:GYYg&^<=.o>(=)(CE@re1!91Dnt7i9.N`YYT;_B-cgs2@e)BZB\UX?Jq]nDj
%L5s?-ZHOT-dG94h#;n8+DLNpkT^TPi>C%kYIHO4Sj"!]mEk:/@%b"kDJ)"u7m.WW](9(Ubm;lU#o+D41%]X["8H,a[?iTU:/.W3L
%G,1)hQBK=.msQf*dN)q7#Nd%[2E]NGojUb9eMti#95%$u4#)e[[#EO5NLAd!CgBP1G+*a%&l5J@?'Yp-j&gfB,b&gh]=QQbWCS@6
%b!:(q($3iuQ5M2M;oLP%.;DMj\tFM^`^o3j>K#mZWEHYTfp#BU,ZoR"]UO)G7nQVn6-$_aH/-`oUpoV^DSQm%..q(KOt*AsMY-2U
%$VJ?QP<(%V;48kBEl4'#A50bp/l0$>XQm"4;4@BN"mn(@lHhr8IXpDddZcg&.tb2iAllC6[EBSX5q#fXMc!]A[dp=HF"r4#eHAdt
%(t(M?Q48b%Xe^h[6Of\J#6LF$P#b^`g#<nuA_*%Z[BDFNAhqlUWGYb&hrVJl4QPWr@[t]aQHu_fCoe(tc/RFPgH+@S7EBNXd;0;M
%\Tb12,A%q5(t'0`?^D!GS(W)``#,j)^,&OCZ3tN-pQYATrIu1i,;[b/mraOWa<N&EJFVV`-C0ckMrI?X-*2'>Vdq;X/+GT)^"tcd
%'[91!"/cq?!XHS6,c!BtE:i-#,_aXicpU3D]C]9(8.E%aIO_(k5acImD\:2V</&K@MRrZ"4D;Zb=\L:c9C$dM#HW:-7fl_2MHWaP
%J-aZsf:E,L<k1'QHHK#c9<?u/"I<<KU2TH0A.hDbOPDCai/13UTf9GjX5FH9M54s,ObfU*F03@d$2n:OHMIaVK&L!GbJ0-,'&3#;
%JfMn?DVoudbK9a<?s`E4U!ELW);`A#/_LbAfT_'Z,9_2;o=H(UG+*mJ-Te?F\@\SM".eKcOkK]ALnZ%ef"46->\n#n^B!@3S)3)p
%jinSDkpO'Pc0NI1-^:ad9GTiImtWB0GWTNk%SpU8O`]bi/l$e&aPC2dNV#0r=U-4JW8)CVX876:?*!IL`;YZb2<,hC2n1F:AZQ\F
%*EK!b4a)(?adg-gd;"\\fGP@lLotOR]+k"06k\_5HF8Y"?-gXMOW(u@#np\KP]#'%7BH/(9923?>:J#DqJ<aI$^dk6c%9e^q-Jfs
%+MAioA>*I7fB",&`uhC^D4gWl8(9mq/YnSWQq+^RHX8#e'dbQ=j-rKD;H]R]9hr':($-HZnEsm4jl\J,=7rm7A1W,Z9R7=A"t.3.
%8[mj+a<$^/2`P6I\7SL<l*D'F$sTb#)])qChO)=chKld<>!En^_3h$*s#E*.3l3DT-2AR:rZ=E;T:<VYK#Rk3%3Aj)(CmckIk:EG
%B9F]M=MRrE3)5s,$oE\Wjof=E>2[nDaT[3Y'ILO,iGlCbg$%63j[0m@Ap3Y-X_fZ#_pHK6a,Rh)Co*pHp[_arlW^@I<5MF<1RP%4
%ZZ[C#UKt(m=Voa^1);LgoXo''KUAP#R&j=m#%B-L4<X?_4H">'.bNr@\IpJWAUdELc5L*Mm6IFt:e&_K0"H(!Y>`:DlgSX;l2W/=
%cf>,V`(a#ZmX'n79CPi'OA$q$_gH'n!?C(^5iZmuNp5Z2*\[5d(YW&.BA?G*mR,^W=alP<"!#LV:*L=;dO1B(;YnO-Qh<P/^DG*-
%:H.nl21Q!QI!i?\2$b$TW]e&><%);P7WqLPWK;u$p1BPEA2X=FZgGpTqCsohBfMPNUlNkn:>.VI5*0"2P/d3Or,&poM:o72LR]G\
%'<F6!]X-]270g\Yc;G=<LDOFO]HgS'2jVOcM0!p8nS[Sn;tt9HH*MeA?6QH["Jiuh["Pumr*:n@3n[0eNOmTr$km(3,u(C(-9[tb
%XUQqZH*@/<a0L@nqO=6b1?L'cL+ib_1V@@\a#P<3+#BN]ZX[I'^Lu_:9cK+]<ccXHjo=A9-AjZf<ZpB^e)[ukp0U4kh0%D$>-6RI
%AY!O.CF,,8r6P?^U]J]c3FgdV7/N;UF.DQcCHK@S)[ZD+$fR/th3m(4HpnlkYmS6h\biS#DM<>[Xa0[m+b0,r2H_#G@p?&dOUd_Q
%`&J[j>os"8[.[ZYjGnji/?PrkqR)UF<G6sd4/VuFOi:<[#qMkD3SAmUc*'3AB8.5IKWXGulf0`(6ruF*Xc$.`X6.VC%D8+nr<-Z&
%$ZdokT?A^pdcFVY6rgcFrN)/nM%img&bop$Nekbi[JPL=A)0Y9D/rlj7H;k;jVl8;k1A1N-rF=:7/)HO.<3,;Nd[Nag'+c"-P&X7
%gea5'P!a35hjm,WgHE)']?jLMAA-%^mg8jXR=hL"`I*bRq2`*C7fi_mSh)b5?G2+nNt,@B8oH8Egntc6NsMGBEYZU"mrlTWD_5[K
%I&<(N:iYd&jZWng&>*IT(9ku*@J[^dlA?N+N5q:0ZP\`][_4\0"#b_UAY7`tbhPfuI,#1_me;D5`]24j@RIcoh.2a*dK7CE=hJN.
%X#^:24kDg"7TZ?d@he6R@mdh&iZ>EhC@SdtaUO"-Flf1C2/>0\Ni/HD4+mfMLB^Dt!F$OZjgj]H("/PKEJsf!VY0&rf<]Cf:?3QR
%-P</WMbh7<VU5#0=ItqQ+]ut<]=j14`sEL;dDA)(</6AYo5a,#0iNhdEJ&*qnY;tteh_SAKSm]^pKSsF#si31Ts=%[b`fg/D$un@
%T(J>adKE+-=(SRZglChaeZ\c@+-Z<?ffmu-R"4[eL3T&"bHaCh<e"`$cI]$q1bVc]McfNhGNr8Ageb7aN"/WJL/]8JpkdA5`ONbU
%]S/%P5+,S@/QgHO^PZ1_6>(t&Up])f\74#RPkR!#&*Oo)bnLCb<&<46*H0%'fT&>6ZeQs^X6!-(^X>uJ9s_]m'J02%:f$d4jri45
%Z-It0cWsJM9_eVM]_qVeX9hEaVlY&q3RhWL0hW1$5a77,paED<WjDlPhFF<7j;8G^WHB`jV]suJ[i'+E%/3.a.8lc;J5Yf*Vj!@E
%2QIpjUYW:KKCp36;eqt/Z'?%2.;]>TB@\@TOTTie`)4[pcW%_?SjuhM%Ah:D1`8)sRYa07F)'!bcH9BW!/h_FM6HHU>q)mn&S0ZH
%gWn3cN%>U!_7BoR*K,eDiiGLHPNC!kR2R^YaOm=#.:5n[FY(:&)>oRHenMAAWa=n>(j:s*.RgS<p^,*9buD-3+^GL*g6*(r@no6g
%l=FF*B7jqf6]0)?c]D2I=].:9_]aopKr&btJ0>S*+-tJcJRM"YnYJU#,SjSIQH\>o$XmQ!6enEl385W'Ip8APndr#@IR11p34`$G
%-UWV-^IH2VbE0!kOU,]CO><.e#=k2fE!7F%(Y=CVMjF>Rn26(rd\4ean>Zsi8=4#lb!SVu2JuhiAT=Vi\][Dfms)`cW4"I6'-lr<
%B&b)t:$F)&@94X,.M=9_h&J=KdBR;99W%Dls,-7tQ&!Q?3j1=qGFeXI<o-2-2S#h;Y%LqKaG[##lbt/;fhPQ>%tl1n-UOb0g5r0r
%Efhod,n8:PcjUdpQ'Rk[L)&5O/52ACF""&O("#8eqJKmCL=4<\,cp`;r1hpc?I"[@Q/'5E?<W)kqfdU#X),0Z^TD&_Wg.-7-q+^V
%-E:!^;jspC;)4T[ML"U>iMrWo'R&WX5]RusCf@8Oe,(TU(N!kRS&e-uP.-OE-[B5q=e@WsjGNFWK2i"S;5>1#[25YT%-=f?3B]S:
%rc;]5J[@DP&AP(A#h%N<[m2urb#RLQm!NM[)@M?jF]QDo[H<j,D.Q##0u@k1];q"!l:ujN0pG.K/mVT`)J*G$#K,RE?-GLI86G?l
%-PDF19:CluU'fb+<i+[sAFT+O_D_$7"0\(Y;k'\Xp4b\]'6QX-?V#t1"K9ou3$e>ECJjh-Q#44%)*C'XX98LG6IO`_dsBJbd\3aD
%!i82'_R81?_VG^DB\abMPHZ3WkUIg4+Du1l^6hY9+5F1?<c%GI"9(X#[(2aMif4TCj(A`Jf>%"F@.LHf:EG!DWW*!q*q%t9%m$l2
%ll@V&$9_D;<&,"&N!&o?18Qbp"gMco6PKH7S@nV7,:FnCR@sl_<rPU`k\S!pT?79HHIUf'P0W&Ya5*UYM&K$fHE9c]RTTV^Ekoi%
%[t)#&O%6*Yq>t2kKH>hk*Z'E3A9so2[Nt+]e:W5Bj/HKG8,[7Xoih^$7c6(#<VZoQR=c!k)M]sSSuini'fQZoed-H2RL=dJi2O)(
%RLm%;9b^ohc#R;-5/p19XRl.FEMF'TfVD%SH:T5m`<_u:bRiPYk_U@S4=i3r]SqOZ-V1fFA:o2gJ-e:P5/`TCRD']A_Grf.VN8_`
%(sK3G6tPIM+($cO;p1pC$R#geWa4r0QhW?dk#/8Cj%)luR6o:S`/P$o@u<@fHl6FLOD+tLbT*?bKcbMWBDFA`'#^A(Y3j*#@k<X\
%LrlWQ65K\.`49A[-dC*qOV**VH2oY3E1*t!)SM%7f#t-Z&C+-O-oDDJdAS%`Ee_`;F]Nj99A8pai.HKJ.V`N.ITp<!9_Lm9jsuk-
%lmt(IoKHO(r2)[KRgPR<r:Hh+p537rn-$'++/Uj<0k;A>Q(B(mh2oO'4nE.A!2AW?CO@9=KmS\+-u]4BKtnJ&=o;M[ct`9!(70_!
%,'"-E\:>jP9O,b`b2nS^9ukEp)=r=C5o'X>Gc]rRI,qYT@gkMuK^%Cf%ntg7@sY5\,-(?F@lEYtiWA#G.p.8Rg=20#XM]JDr#"`,
%E9L"HS&I7]G`"1.2gr@5Ulf''np-J-redJ8H#aXt9J0p!o8Lji/P]`qUN!5e3^#o*G_cLJqaA&oWp=ja?h/7>4'V<=CG8QMOj^df
%X_ajr)/ueT3u0h;-o#$up\g1"h;QtTe$mD!B2f((2bg-%M2/fN8B;^oN6M%Q@OZI20X!B8Vedk:^m`RYQLrNUl.V7VN-UO\4ZMaJ
%O(rPeX0@q6De:jekIT8hFlM`7nt%L1P4$ds--1u*aG.B+=,ON9fW!].[9Psq-#]T<W%b*+>Gfic<Y0`8f+/#i;H8WH?-(I)Z:ddn
%1#R8CmHR\d-<:Vpb+N<Va`"0P5c'-%c@AEU)[oMee@qi8krDg*RP&bE7SPItPurl#cDtj6I!-oF1%eG0:7WjP,3;gcc4r.C>ZKNe
%Zb9H_AEc".G"K)g*kuTn3,<O1GrN?ZNo)9g(Dkl3Oo"mpHDhrVW^BVOod)(66kc4ae9[N9>J[GkZfAYt!F_KTNg>mRNhMPT>:S!;
%"pl$Q<;Ku,G2tJ.BaS^TH2'r-)X^ue\pc?&l!m2nG3rtpgi?]QEE-K%AL`&=<AI[rgS/@!MgANOpn<[?R"Hq7SDdAO)5k&NQH"GX
%W-3?p^8t-NggfQRZE5TJ.%RDTg6l77"DM`Qp)LgiMbg4UfdV/Y?"m4J^U/646\j<oFNfh/S*4IsEu`oEk.G$QQ)5`Ws!sX]Ui^=h
%\k`ao#bcRe9%H_P_0&FK,e71`K.JA#@U:KmJT2C4fKEXQHT24-Z"P81LHl<(Ln%.i-@4@$Ciuk]3ZNq_E"cH&%.<Cj8>qW%JW:G<
%<WmOhHd&^dIuOA?g?[GsNe@uRJ'C3pP0+eD\Mh1\:6=%DR"uTEV6*e-6Oja`nT5E6P,O$W4sFKSVAS09TkO4kYu<]SSfZdkV"GOm
%j!]YE4oom1!,,hp$1tJnFVs<U,)?TUX5jeJ)kq:oR0b/X?UP4h=Y3mp;X"XeJ;b)3``&_U.K%LN=;*?hdo-,sZ=YgWdSQ(lel!3M
%H3i'*[l-!=fC&Lic"JS*R1(jY'%S*#f%+04%0<@1"_$/7G`B384]Nhf!-2cNB&_`c:G'd.gGnu\k?68'<sW*pqo7oMHEOnp_-oGq
%Y#k4HD2-CM1[!+AK@q1kdVfY)0bc5K*^f=A16MEaj-^e="mOVYI4!p9[(8^MV#hWsiajFad0eU.)gOj=31[iDC$_-Mbh)M&lg&o0
%A+mMMSj&2%@[Hp.5L*-W(CNP6cSomHG!EUMj&7smbL0[DqXf+3\ij<>IB7>6.=]YbE1c\P#L>5)$tgZ'752[!$UUnKECUdiGp2%A
%SKA6EZAR!"3\=M<lPP!1g;Z'QqTai<_95]+0HYdL,C(&fS)T!/_o&BQa%^='q1l5\#5p0'>G&'%ToD/[AYm5pG-=or6XIf"7K*Hl
%YsH!".P'b[m[u7^Ldmt*\hkN2_!O<]kmNc,Y!/0^A;RYtK5#c_TeV$-9KuZaSsO`0<`\7\.:a/\8ip`p4K+0,$]qMeFMI=HZX0Oo
%5;#oS.aNB<K.5W"mcmC^Ou='WkJ]f,_FG:o$$AU0Mg3Tq+?ik0Q#nPf"D`Te1li0*U&$,O.GIS?db4*G0[1]C=^F-(M7T_=jlXBd
%EKrbhs,^GMBrt88'[mIfA&]Fe!AqSA3TE1S<<3DjL-Kn-REq1-eVkb$G%KFapF%MUQ90Gr*6C/5PmYo/q\bR&'T@.0l,Nu&;OK!M
%SNbqgQ[>=*5j;r%09ec/PF9!%0@^D=!$VE>nO^Si+jpdc+!!nOmZA&d&(1c6NtkChE%r,%)JM`aU;'YcWid).i@ZFfkUs%IO6Tc!
%WI*4<1_9RFj`[D\8^+,6GJC9)VN7)_;eYlbiIIM+G]?g)@Ao$XO%!46+YuN(01bB_4Rb;bK8c*aIRBpEpJF>q4^m<50bqMr;+I:O
%Xd:Zf%#7p-dd[k2Z7DMI;/q(d`$:Pt:oB=S)-IM%q<i*X=TfDoVV(MP+IO$Y(P\L#$@7Dc_QM%nQ0c,F*LpVA\i!HiZ1S^!`>(YM
%PE#!KVD5,PlA%9#Rn@SW?!;FTU8o6X7/Sm"]A'Q`#ig3B+3`YX/%\Bko\#9omPfSQ8#5O#>'=MBH:rE]k1X?-@gSP/),o`DY979Y
%QCONR(Z:!nLVX[85nP/o?6>ljKt::77.35R0uojc&=jJ=L8P'6Tj*k2H/Tit/1$)^aZ9K/-osord^+_'G="oH7fZ<`YWY74"9DSp
%;(,='os<4LDle6Q!Wn<qCe4jAn@#S8>T,c\]hQRQ5h2*T>TFtkA`q*o(\gu^%$OZoPZaA1AE%=JX\;42!H_9)%La(mGSlrdmRt(b
%L2]6_ZS7IP5QC@d@3>T'3O"GT+aQ+2Wf;_aKJIji(cZ/qEE?usO;7#%TUN55g*r.'r?F>TL;lRg$,s:a$WHT0`l\H!,q.O0$A@V&
%+6%uZq*n1J%EnH][Mlkc3U_$bH`R-AhK=39_Rt5s>T^iVX4UZ\<ggX&kd#\?irQB$N'`uL,/gOidMWA'^C4l?MIZ":_!_s\&]fTg
%kO<,Q?pX'q]q)7$(X@uXmhnIY"jUmY`^pa!SQU5P#jh:^*23D)4q%lYF')eQ!@1MNQsBrLV*007rIND!G"lOmMr`Euc_dm5CG=N5
%)s&JnpZLl_<@5kte"tr?e#1SP1[c1IYK)4c$l&Y&mf@iA6N-**dsJH.'4pD>CZ1]/NbmM@D;O6Wg?5k/*q.\T\X8,XFl%gbBp@t2
%Ul-kN^?_.D$\p2;HG)Ca-,"CJpBCLkl,iPb=a'SZq74c.(l\!%5LOnG>?&5#?H-5>GC.dXH1tgi<>n"r'it?tCU<@i<IC(T"^:Nm
%WIB$R7U^:(q,?n=37V_fk^"6s:VQ.+mGb21N'&Op.[]iJV?g]mle@PK4i9=MYM7c;A0'^>U1pRaG-r">ddC<R<s)DgH*;",Lo9=>
%k=%>SN-'.0R0W*A8fD(-R'/Um>+b%^Y<QnaHJija&rDg94qFm:0?0!Aa*$'1'I9%F]_AV$*@icqju@VL"8pkXDr_d<)U'$H2F:3q
%@#O[(f4nBD3%p.VC/[3n$m.?@Uh8V\"sQdCe6ns+P$3u/&WqQa0ZI+Kp-[G6lRG[nR2OCF8l'c!P6"RPT1CMqS]rkHL3/T%ot-_T
%kP_b3fYsF2HhiH[N6>]#8=+2=0'P"UUuF9)lmV1rUP_.n%^2rR>-d3C<F/O=`b>@)T\2oVcF1%1Z;Ln+4fKfpl&)hnW;e)R*0/k:
%EddsiCVQs?k/3,rrkg4#o3)7YMj(15QjoE1&t8C]f"8MA>$=HCf)<6+)A);$XMtQHU=glf>Kp(-,`i0d7:qJ*C_Tl]cm+N#NAFlG
%^\-q=P?N-2W'Ktrq(^8lZH$c.7HS>3bA;NUAF2Nb1tmV&hP<"IO*6VCgh$q:*>d_:.QL.+FLb]%*c+kq4*'VTKW;s7iglR;Vi,e4
%L)qr.HE5;nO]FYEDC:oL`'5-tQd'`#)W7Z->u:=sB[;$9Rdi*Lrc_c(4FWO5%^Q]kZC/95aGB?LG;b\i'.n7\GB.u7Y"":flZ+6N
%m)WeYV/;AHF1M;q=JXKCD7VZg'iZg!P;nI,cfT`bN1!6QQ/lE[?Il2LV&.r"olNgEZVqiD,>*C:RLkh9GYb[ldI-M!NH#S?`k$_a
%Be7B#r<ppaiRSP]Z*0tNNbZXQ1"3#p],#O&YqMhi@W)0-PCh]]S-[%^XUk@kXC!74LX?ts0h()R,VI8"IfY@9S<oHQBd=3M&lVaI
%gWPq4".'P'RKt;/KSP"N*41aeBcC*dJ11f\dl=JXr/(*[-#2KCOrds.3[01Do+IltJ?D(R?Mq4\^:mpLFJHaahMdQ0JE2LNDTqp>
%g;D5I->O04^.C`$_jb(a'\Je2dqnq,@TN'fGJ`_0<dnE3&H*YU;g7L`FM:D9)(a^t;/,jn+e6MG1Z"^s#Q>SY$/\)a`m27"Blg=b
%3bXgWE>[YbR+%+7KDVoJ]736#TCGWZcd$/nqEbOm`co%bV;%JX@2-I_.1KZAR-fcH^aT_#*gjSq&6UVQ@+[CP@],'[[S/V,ggYnG
%CRr;p4a]mt@Z]i`?OieuZ-Psin`jXkiG(77\nimQNur[YonSrh2rU:0o9RSfV4!i:O"iUn<-DM3a82#!XZHcJ:g4?&`\kDa=`0Aa
%M]J3I6Y'ThFSe1%qQ'/:?>314`"BT^$;<b+R\MG:'O!m7=Ojrc=I,UeK&66YdBjKiW>bHVq#1kG0h0?+Rn"#VN0E&fQm.s+b8DBX
%\ZSXe"!m:"En8+/h517SQEHDBZ\Mn6U3J@"mTYQZc(X`O?Nso[d#L(=(dJEQdg+-%e_WIl\raHV^f2BsOBIT3`Oq82`(p\T0PLZ&
%XekQIFQ1c@jctNX-3ukFn+j-KOi9mM_ce4`e_8-+@+fBa?d%U5K%qF(f8o1<Gp>N>J=6qR$1eA:25]3C72uc"M:Bog#$c"u4,UtD
%.5Q?MaJsiKRASlVcZ<6%eU&+4,I%h[.p_kKY>+;#7Hp=a;IAaa3kp;Pf+.8fDg/[4AHCi;92BC72`emYV[;U.;q"-b8@?4kH`lHC
%"6Yg0+'.JLlIG$PkDfp&L-=-T6NIIjlT&)E%H+ZddE(4q+5C2Z/nPtOf+7@\??3oE^M@*aA`eC1?DFb$/q^Ae]>D]E`>8&)dd\1I
%BHi@D(i!'J<&Qu3b+'8K`Ha7`hN!XQ5pn[GI9e%%mF+he3k'XsjMi4qn=&fKdUTpk>^GJd4$D'aghC$a9(DFo=d*X3R7?$DJC'M9
%+jY^4k^&T5Ti'TUeW6;tp#3CYppNCsXDF^MZ%*aB'(*,*f%87Yq*$V7C;t4YXCb1d+b>.Bc\u+)%\oJ<](BT)hI;aWSq6-44+04=
%j%;\AKTeI@)ob8BXPGH?Wg@$t,Dh12X$8qhCj$$1dq#FYBEg7;=N<XIghj[CYs#m+h]<p_l_!WK3:f.pCKendTVN/&[S,]QY:LY^
%*-bRg>T)@S@oP9[8@NY4i7e^0K=Q2bptD=7g+0u5*4K1nGlV3h^eI#U?iN,JhImR[>ICcZnC0\:/Q<0BV0G@7WJ31W3W!^+VgrnH
%',7&h[ne!)&_#oG'g2/EW#_d/Q.5>r4PK]o1LB?1bO)I.l"!4mFjQ)=?lh[`7M:`YiTmc7>@`]%p'f.:&,ZB+XSd>_9?m4'bp'Pi
%e3$TRmS`*tXI&J)G"6:[X)kauLX\;(5MsKZY6k'mR7$eCmPS>OH2Nf=29W8p5&(@uh5,CDmB1D\,>nq/d=.>#)<p9P>+\cs@cc_l
%EAaOUp9i`8<.fe!b3e!Mh)P4(^.,^a:WI4`<oF]@dHi_Yh1Z(J\&AdID^[;KgTI\M7&(9o/M4;i[eYI5Vtl*,cT\_Y5"p=V/M<u+
%H;Zqm_Hf?`c<&7CgjmSa1d!-XqH"I'/uEaBWserp)fIZ%?Hl^:Ae%s7m?0uW5U%`<JD35EIO$Ytjm%GS5E8,4lA-AsVU,]CCL!B.
%718T[eicu/d`<)/Ri9CNHeOdt>U[7<5,d[kcXC&$^YRq,6YcSV9m[_H2rG'cDlK;a:QhcaWZS#mX\2\Yo,G^uH%BSYCS9I`H7THG
%f#2E@>-SEn/O5;1hWF]EU94379YL5e5:>W^[3cu4EQZ]o)WakP[AM4n=R8r3;"ZGNB8iE%^9XBW>cC8rqUeDg,i<Ma=/i%$P:d^5
%SkfEEmS4^m['9,1191k[,>"*j^9(EXCU6#qdj,mL])2b!cGah*YuelUED`9E!c(<j\m0b96aZ`0J,n0#IlZ5o1AYma>:1b&A!k#6
%k,H@R[mfODicL0J.](\_^LuZ[Iq1=%%(CCDZ9Zu,)qdA093G4ue7?OsbaDG1%%C>[1M=FQj03.L10tn2/_Bg:\1'+IS6JT;>jcj"
%q!E0PV4R"B*)5\e(7]'i)`q$('Y;'>Vtui6$d/!9!kb:SPXn^M"DIJ*o&3,'S(8W%5CT+KAh9LT3Z$\9l3%YJMofn:YX#7,Ys#TO
%Y%ojpQKtTc"o<BT`3CkNh4<l9n'U_B#S.f9^i!G,.cJ3IJu/?e6[8u8AA`M![[T,_&+LH29%G]OLVZYP"Z,E'DE2uPA;PQnLR:>F
%9E))lo=E/i!ZB=_esg1=RU*-cS>:*M#oe1\G&Q;dV>`?`hoLu/<8Upd&GSr0EG`=e,]/<&=&XP%Y/O#gk:tk<(*dD9$2,\ROj6ub
%$I&mJOOUDi2=**7@/,)^elup<1bAg,)>hJI6/sTVTlc(K'IR!b1M`m@(AZqdZ^u!Q?tL/hb!Nim/k[*RXWp)@O/s<bP?e1$4q$L*
%Q<B!OGIAT!bTI+O,.cN61EFdq,MJESCIY\&rEFF"@K%*/QM*=-)EBt8C!F*_3o.Iu`F]7Kj47=U?9\<gKbC)]mjm49EN,ZdeJe3f
%[(;_(V<lI/45;V/Sd&#WcK96qCE]a2ZQ^=.@V'-2$V033;\_UWcl$#@@Lkf4=M=R",S5sGY5'8?*E(GoJnBK0Zal8Zdkk/\ER&.;
%`))LFEobADXo;K47;/>/_oUikYqPk83)aKj\3j^GY!ZQqC8['X;NhhSX_g=qN_!!X6uaF&QD1>RECG#;.;^S8?ee*/0"!aDPoO<2
%F3<-E-$:"n/uT=(,c`"=]:tajjuA?oO(@fNol2lq#t7$!MO(CrC,%=;31N>LG'`]!9TJIo%b9*I;u,L&P_df7.fC05a>+G3kl#L&
%$5j5YO1Y9oLNA9%NRkL>!Br&)8T#PSb`\c7UPD8`#2$@riEo0_dP[h?r5RUfKpG?%*f*:#!uQ;6gSm>(/f\_RW(SJj*H:^na`8LZ
%\d>3S/1]B\p]K9c>g-$i=0epuL<H5LgiE0[o\_"&OCfl9XcShRDF=.$d!8"k,7d!X5qMiuTSh:fXn'=?2&asUbu5TM8NVU"C'Qp6
%(NTQNCi^HS-?#',%-'*9F\VTW%/F+g19i)$7i2l5:9]FZ0uc'6aV;8_>TX`C>"/n?YZas/B)M3F<WXeGjhQ[e$A\VbW#i9V)-!H8
%peDZ">OUI7o)p]>>5d1go-/.iJ5Ujg14*)o=-''/d4)</_Ynr\;3+aG&LfZ+`uh&0c1"^>N6`;J!,i+C[L&b&=-F*<Pjo=P1I\*G
%bXb;;Y['FS^oGI7,'Y!"6/%sce[(eN(I[ZcQmXu/9$"Z4U3*SD0C?`#kIR#eB7UGV+1phP3EW->6(4'U5VSh`oU8]eI=i@S7576[
%D^nPq\*hCgorJK#86To$6Rs`Mq#nW9_@?F1@h*lH\K?Dg&*#IS>HTpWJT^E<Jh(=VaRA%`QV]NW?J<1&]S7Ba[0`g:H=LWi8l1uH
%5btW3'?09'^TMkT\IlTZ0a!/WUHf6!S`V[W$JMM]V55hla5lla6dQjjU_:`e."tD.PIq"?^4=_dkKgDO-7du!Z?-Wno7ST<l8+$;
%TFdb7E/2d5=s%R99$(FU#rcj@YB=J,ZTS'M,"&tW;0`apYud2)nmXPkBiK-q[4<(+!EuZ"1%nAkZRUIpI?WW)DRoG#T.OpCW_pDG
%n;3UgphjsLjm?c+k_D#kPb>c(U=/LmP#44>o),mh&HfifpNQ`Y(o!^b37;p)lKY;0R:jTb0M]=Eq3YZObR!U-US2k2;TE^>cWUQ'
%P,E.:mncPbh\08De8`O,1mT/R*K9U&59$ahLkb7Pp'2sApNq;,2!HjQ=jQ[l;L_Yt>Se.Z,o=G3f/h"GqgJKef:%*CP+;bOqRoYq
%aamFFH0l+?:A2+Kk=O(&G>smu>"F"#ka672cI@jc,"'JtX8ZY@T2*O?C/J,ILG(2723N!VEDgSPaSH5UM*oj4cpL&<44U*Da*1mN
%&,N.[6/$WWLE1%K^eR%lM)E"g[!bhXgM/(d32tL==i-^Y[oY&039`LK;"CZd-2-RKL/o[-2$-POG1A0P'-1L7/(I4U21_^<Fog.G
%I!#"K*@AZ3O4&)`V-&f(Q+A)2`W+MqX#IMmM'B5QWQp"=Zlr;8!A3sQ#d;(\U7]1O[2DYJTVn"W6X(!u?0j*d-ei+pK3JkEN`/G5
%Qo<C#<]V_u[$6;.1*&)L4fopZ>(IJPbmjNS+dtQ`*Tf5%"EJ(W-f)f`]"rZNZURe4Bd8W%9<jPYA65UkqQ),2W]%+?:,%Jf<sF0I
%Z6&PRCUG?a!tqH>Q7X$?EKPt.K^ZLmojuq<0^f:Hds@\oI.S"dqH*RH!pm";ju,Cn>NG"e;B^fl.2to_bJhKt:ci2ufVD$i+aVtA
%+bj"aT&VM`Pg5d\GX(1[%EJ*Yf"8^&Sl=HV3XnqCMP:q&RE'G(4.qfGN'R48X<JqQ8.kGFFPnQ'T<3;(FhC43J\SN6%/rrnJ7oA#
%'/2nn8i:uhichu?$1Dho&`kh.'82E-)0>>5=Ad6oQ`fADbOW\DltZ;d:Z>UMadne"UqOCj$YD]YN*6hfZ;A@E#0;O&nSAh-PGiSs
%'o(Ju9JL/Q6KU>fWK_#e2ST$h7.H*,E=?JHLHGfmWcg=BTu.?cD'j?qLp8`U5N,08OWB#"[oQ0HQ5os3(^$mo<H3Q]C%D<)jdC]#
%lt.gB,,KOZCa;?Ijg\T&J-91ed@b\8715E8q]*5[Okm((bdbG=@nerbHRE.T>[SO=`>n+!:h3+l)OIV/gqdT#7nQ-ABhlneiG5Q:
%C=iJ&k'e)R@2hJk:FfqW"On[">2\,Z_W)Bc%*p48c`tTT5RiLsD\$=!bfiEJ1"s>jdg+6h#Ts*!=chZ.<_Hf9G+#__":!00gf^e:
%=Ukl.1Z-#md2]U;^I_Kkq87U7m_uBAc(:m4ktLg?FB<\EVs&-i%#:2.Zp7e)`aq/iJ$!>JF&A9g:*2[528?5TTqU^AdJA4TNe6,/
%.<q;D*%QC2X9YO,o0JXW#$BC)&m:@Y!p[nPP7*Ml?H.<J\@3,S[o8lPdoGQCqF/qPQN)N(^6]X`CK[WEAD'N@Wg!7aLPJ`\TTT#K
%>I8SFlZV@6ce[BHfXr6lB'jl?-BI[X*$A^u\UUsA9T%+nf:&#n%-RsseX9Cm!2)%?Gh-]*&-$Mf't=5kH2:X8eX=n`<MFbRVY&rK
%R3sPDE919d8N\:5;buTL<$lk0^$Ap)bnASbS'N*oe'/[F'[V8jC$`H1a6HuFP*4_$]>ocmacO<YA=59GocAnMRL([-4UuP32]u].
%YSa(.J.,M\G87`/)cFW;H$G@A*K6TANBCHCi]K<\$l(lJ3Dm@dNTt0>i9nG%VPH5O*#/ZXAqd9^h`>D9QhbHGlXg`HFUSp3Y,Xg&
%+raEqZA0=&/cE_T0_V__fK>YZ5dJlgMk\3qoua!W-7h_]X"I1FmG*sff3NY&A.'i7>$i:b<jct8PmHX$njk/CQ3@q;BIW=s.kAoT
%3iOBe"Nd^V6JAc&3jYI`,;u>(qpC\Z^8Wl+s)=PQ"h_$C1pWZ`"^DcZ"qL$"B=CKbdh@2[`pq*D,Z^*L;SA8JAEu>n6G>/A=iP3E
%q&LbU5$B!+/aFe$15RQb;.PCIfH-u4*-*EB7qFMLIr([T.K4GUMHntPl<L`R[3Y%=IOeXH^Db-f*>r_QWZIrsaKunhh@[1']1Q6X
%7'$"Ih,O%T=J.RUG#:[r&8/KSBR!R7hPP9qgX9J'--]Q:,GH^!njqb_$Pf)&D=7tdpfV;\dX$(lR0\UL[SA?3f6e!I<N)9o<nd10
%/Y=@.DnDWQ^=<Ri'SHP!8"o5IfhQq8n#34)&RW&ci*\l[&^)Crp*6,2@Fmq'M/6;$Qpk$eLjMM<dh'T>jcllF`(!_+7(U&;]NEU%
%'=`t$WgLt1MJ0gcq87L*T'#e)dd@0jRNH)@TV/(?2Pq'5s*o^>d>12%dGmj3?$K@?<)fNR^m;b7A/&^,.`_Z3gkg4A1H_D0-$c#j
%R[Y`7SJ(db/[Ik@E8GLB<,m)26@.Bnghmn0,0O$8/7'Wm0F,$B&IsWNBB0UVj,bS16'Hh2d*^Gb!'#9V#[qbu5^tjCYtg3$*9f^b
%</"h<L=IqCVci;r-Y1t;Kp8EIHTp2d;qsd<J8AlCG'@E-iRa?`?F+sYH3,-E#eXFi/1VSJVj5ln(qtNR5Pp524?.QL3NT;ODeTn;
%FhFD-a4NG`ic\1fWkFljZd^?+SL_fK3c7#^Z43;*hoo?%A`n8[%OrXtS<i1d=1)VqopTUKkS_Gj?r2[W#>Lr/i[!.'^p<%mAdOAG
%M<mb_&D.H0\Xh<N5=F8VHMq[V7_ArUL0l@Tb.#*TSJBa$k-gcAgkdt@<rSW!6f;KPIJ%L\7ISTM6m#3&rAj`H3q_)u=dmn)mZ^&'
%B]%sCcE?tH+HL$6rEN$<U<V<,Zh/;sAE2q6lQp>.Dn>o/\_F[Q*UbKphmtmIq30kFo_t9C0q:He)I/3,IG9l\,>(/#I7mAt>t8mU
%^ddCT<olB"Su9`aCY1Wc,Nkl0lQ(+bZ2MH%(lgSd9g1X+U0_WMLY7.PDs':YcLp)C/aGcEVfYAq-_I:.*;=AaDRu3`3+!bP`')(X
%\4nZNPtq7#,<u%Hc,cp6FFr\T=d@6Gf`e./-<b`=GLi#IPKm^MhXe<GR0WWQpQ*KlcMWqp3;(0QE_A+,Zag,8hPi#tSL%(B`k2_S
%)J#28klPAUa(B((;&AfC?Qq;uP8_ljFO,C"QDFYf?^-CHV(sB%oSSrlaj'[h<bbBp%NUZhG,dRibG:/AeY2X[JFom'78c:Ije\8c
%UUS/kOZGDmdcoc]d+M/eP0-emEp=2eP<*(d-)\8_3]+g!WA.^J/FR@h9[$IuU5,<\*Z4.>,35Qb\CVD0du&:e';6M.0ru$@)P&,T
%<@c3Je&%5%Pk?i#L<7*&X,V$$E(.;uHRY<*dsR6S]mn*q[m^0T:Vb+t/-a.J7ASU8X6<$NV1$jA>)IQ9UQ#.,EK0I\Uc5ddCp(hq
%6r_2kC6iNW/X+)TAN&pF-&J^6IortH3L')-jr$q@?dh2B4i:+<?#q*!lWo77%)T;W<&e$@:N4]fmU%7K04LJ@V=pGg4I`R%Sf?U^
%,&]5QLN5Lo>Xnb7r2o#F@K+AD^*L:4Mk%f"_^@XANUP%&4La>0G1hIfNkko8ehN03fEDY`jMtiVhU.sWU58601A?a(rP!=q(G3ap
%[_2u@./$1,5)!Cg9;O3V:17Ed;`k`Y==8ru(7Z>%.__k>'bdO$F]O#H@jM$&^T-U)'(57;SZn-aXS`9S5KS1VP3eLfA>#,D@nuV@
%/U'uT3p(T(XgnjV&Xi3OVHrs`YsdQYP_`DhE^r'G7EF#4@"WYBV%#(t3,pj+>jVjRSVLY/MLX87D^e9$3`QgSit+\SLalm:3)pai
%K,Kh$*@Z*7F?(RC7,j8oGPquL]EE'pRSDa#U2^S8gcbJiL/BTh8n,;aX,l@S])c/KPpFPc)u^$?kPhV)r`N>$TeNUn+Rf5SaR'cQ
%cBW!8m"HEddelP%00MLW[NAR))+BQ=BZX\O[&No#-M!AMImi3eqYj&o]rcQ!iQ!=S^<Kp/6Fq<BO`:VGU&%<gI@I\WjD_uA*d]4$
%n!L.'hVn+^2U#9b^4_I>A7gI[:5;Zhe&C[_4O2hQf8&lj3i4..`n?IqOdKM5RcQZf^3kj[q"77:!40M[f`=R$6[t44+j<AfKFgk/
%jE7ro]`*9"OkMK-,L),uIN9I%^)0@A8lPQH*RBDgVifd"b(q+7o<cQ#<==,mL`^u>_o5WKGC!khE+NBn[%r3F(%bao[\#UpmMS#L
%S[5abH3"5c8FrM)j*6J_qSV\VKmNmh\s\Q&#mW;49^Q';b!n3/LNO)^-*1$_qW,d$Q-u`kr:e-Cg'FU`*-Mh]+$gW//4g8?;SlLK
%@fBdfTks;%Y*nlXDc6-S/SD.l,$UH1qiPL\=lcY:l-+(jmj.bn[3C31.CEd>a!D!@peB&pQdnk`Oj[HkUtJ>TYu:Z1"I<tea'$]5
%?d//XUqKlP9Lq]gRRg\A_np#'q5C%-nsu&.LngmWPu\9.`q1ME^D9gFB^R;-WMX)fI'4WUPI&97bP&q"J.n+NHo6q4_nD#"j<9T4
%/B1ccCtI9g&gTX%Qqjlk1_QTnp>NJ80AW_l8lF1hJ8aK#a'FOY<>R`pS,1hPT)fT%PFh%T3G`91PTGU;%qJ'F)(n@6>!SQ%XdmS)
%"=&8rcWZYQ875&mk)n4,E[(.>deoCjc&V50Uft]eRp0%g#Xm9t0qZU@dW]mrqRW'opM%b66K^t@-$[&bCEI9I:um"f6/&ra@D1Kb
%Lm_"-Q=/]g2jmCu;\eo'7UDJ+WL>u0F>'90P#>18b%e\u\(Zmk\g)qphIOJD`V+!cdm`&<g!?&;]J3pQ=^37+gh_]^l:GnLM*@<o
%Er4>&4OBAMjE<$p@#oG[F\<JlIQMH+kE";?0k')UQ0OgBm:$%YAd56LVrh>6Ys?\7Y`^o8h?O>IMUY@g>n)Q^QW42phl6C97@ltA
%D>.:O.ucLMV=rT<L`dRHkO+1_@ae+AFH@)#&40H$7"aXdpY5E^Bf4^qdI*;HrJAtKKlnb5-TZBlV:iYW+1l@4DShgN*?^tO>kMuG
%DAPl[IDFZ";EC<f'd%=D]W)Sn_-L8a:j8tNd\Zb@"+"=+]/r1IjHBN=YIX0e)_Aj92&4d8+5[dCNn3p_hfih.oUN/K=_t^q,d7@a
%c^htt2[%UMDQ*]_D\?ee2';3qB*@HJ@>$cg36-!oKsEL.[#T-AE:f\;d2F/N=9D23;&H)M45M/K\Q)VnkD)T-0\3_b%B#irhC^Q*
%N265bB<4<T2;X.Tcd$TeC1Y"uO)]qSlA7?ef>.EVTAMS99Xk?k.N(7-"gkb-CO,@m/9[B=S^iC6G;pZQ)T3\XhIo,"@$,U5khSmL
%bZ:laeC,dOXD>6-2D"UDiX%Dt)=sjh9FdG%i%']%QuBqXS;VgM7Y]1>>X>&*5OQs*!5Hu*X6Tq<T@*3P>IR4+le<tSHHM5R.3A/:
%i"q1?bh^_`T36>SHbeB.:Wc#`c^]a(Y87%GEkL-4E91p=D:.UTC0P!c#7`4"o^f&olBE^>=P$<_H(bM7ae3S6L6g@(p7&Ujo][MG
%X]8d$cGP+B/3u9H%F&*+N*/OnD9[N^QHCgoJ[Qq>WJtL6eeu^Tr*$i5VCG>8=mXujk9_D<lPc)LgklGK[(JNa;aJa"ES.*L+klG1
%3>`S6j=mlN<Wu(u[&%&RAd5+3S=4*5<0RYm]]3,lUCf+9)2*o=,C?dQf"F$mN4Ffk>3#:D1V%td=2:a^5@!ZTa'KVs:Qd`XG7LZ\
%_32$mZj`.2M8>^h&_?Qr`Oh6B+]#NL9sG7A:Gna>Y_i2mCVcPjMm95+4K/Nt`>]Zkh8\8g=U!h6NLZfB?g1T2c5Fdq`jHoCAmZ(B
%ZVdcGa*-``cM#d:ZOlA.F7\]^1*T[!ig?e/*"\LR3cSOd8O;'\A;J[kQABo"0as8?L.nL)\WL9#TjS>p2_Z@bN\-2VCXCqsF/e4J
%FbrYh`eP[bN1s8iEhSn*;47Bb8ijj:XjY/Y%3XS(^2o1FfO-\Va&9O5nU5kCl>%c:)6@f`Bi"AbO)ro0:n[4R6cp2=*VU*2A:2[b
%-sYR@+0?dp+484t9,sU9BkOju%&8Wh*t`R*5d\MXDEnAG-ucYY<Sj29VGpH)RREDYlL6j3O_tW%#j/([h,,_oLsor@$Z16HJA"7u
%6s'ADL4efShb$12&5oJm)I#XJ5QkZ&+_0o]\+O=%'?P7X32\UH"AG4NotDTN,-I10L6!#g$F#MOUK.^-1;MqiCWu.bO[f3;mJ(7g
%]U>9<j<++.Nh6Z6@4qIuV1"MrcD9iTit<*8dLS;3I9"9GP),SNN/YZK"#DqsCsYdtH^/:(#34]>YV<Q6^<::BA-CWm&-1=J.(NR_
%\AcgHi#>?k[;f3__oube4JBe_g)JI(,=`?\<RDctD*(O\EQl9:CnfSn#uT=/DR';!L,4r7hiBIWb2ZPN+#;R\s"nb[?k,&Cn@_(q
%71Q!9K+$q:l0_@l=Z5'#2Opl`AV-Y`++n#RLdhBKdL-[:<HUQe#a7@niGB,S^uE0sCWrEo:m/uW,W$-JP8\Am9!\BU&!t-tOmRsE
%c:f(oit92YXF]>c6:a(6:bn/IMcF]kiioBDO)?S/b$<t"d`2&bj?+Z->7%H^Fq2q>d2g,k/Q[9&`BnMMZbbV;"Gu(3G6c6%)El;J
%p;j[VU_3$*7I;Q<S-G6Bl^!Sb:EK,hBL]7DZ0C0_p*rI1>sQd+C0$oTQl62B_l6e;iF<Xm.CsWG&nPN!Vegb&8+dD-QJ!eH4B9<k
%3DKe`[k"f-nPc@Q*7egLGf+QXIWjtUJ4H,?EB*q$-^"O=Hlm:VObpQoAIPb]8J+b1`WW-N6M[=X.KRSj6?h\WmJ:6gedU,nKK9Ql
%UI'"KWFAb(@F;8)l']m>$\DNk6ck!p&ksj]S=F3Y&ahmbHK:c%'ka@CJlV`NX^O3cR%ou]$(!M;:$Nga3l)SA'jKN-E++M&3>UJB
%mNXM,rN_[e?Og$m35iJF>\Fs)qPX*dDCMGuJoZHB[Y7omhW/9,+f'cURbYs"+0'E!7tiRT_Wis$d9,f0Ytt$4-UH8n'rOoJq;MCP
%J^,d>JB2UD.1I?`P-@/Q6jt+b"]C21N1PE?kcFaudp]K(75tagbee!(<TUDlcDo4iW$o&JpG+tbj[q&hQ;^R/N:4UX5rb,YKK5$Q
%K\N$*`]C@$$^+mQA1eu=1oc<gY&@D&,(Xhih&<-$mjM07*/po"-qO4brka4KQP:n9$-1C*H#!b]e)\EGKLM44[NY3u,+W(/V`rpf
%M#3^:hPKC9KG+g^!'6E#?=X=56K>O1!_RgE8[%6NfM]AU2>re)*(B05c0E\'=LHNU3RqWDfa2-72ne]J>eN1EQrLgtUl=PC<AE:q
%B6Y-WM&kfaF\$!aO&_8$Tan=doEP":OGhlZQ[).Q@NK0B4Ln7(#3DdZ8kmp>N0qiN?gMQY['\eQA/';P`6/!<D/q\<Z5Iq,P^<ed
%)4mde[/rp4%3k3`Y.(FsocNRpiuV[md#+"94Y/''.k+Tq&9XUP.8kJWnTkshA@QTJYBG@d]'IZ0*'QK-GI,Vf3JD.*'JVrS\";qa
%R0t\Dare(@H4C\`-fWRhO/`#>kPo>q&[3ll-KiP"-Hd4Rq3eY%EK?W]1Z-P9ORAW9/ePNJ;dFZ%ViPqkqfkZ>J[EVl`\mTi"sB'I
%abAM/-061hXbbX%3Hb>1leRU*;_VV(k:"2q$BZeVIG8BRBe">A)\P@\:,VLC*>FcpqI=kjoQ,?L2D?82Llgr0BM0Nq"Q6PZ;ro7Z
%4'J4>r%scI3tHg+&JPPSk@#\^*R_?B*d^M4#N>:b`t9aR.\rmn9*82J5>(*O\Y#Gum_[RU7JQ^ep;]H0lTL<uE&.LEnqGhL/Wa"?
%laRb87<`_l-1tmkMT3^NQh1lM"T/YNbA.+UXUG$h*[:sdJ7t,1o=j'(D6*<\4o"7R^qO&X\1Afgo%3,,?$[93O)bF7a<;+S*/4qq
%)'lP'-fZs`]I9WB?M^:nJ4+Vd1]q-TPjEBiLt]2_S5;8LF><?7WBNblbmA*P3pr]Z?l?,$51e;+%R`"Iii5fFRR+N5\3K6lV"<*&
%VIa0aG6Co$F<-t,*iZVsZlb*9$&_iL*=llMH_i&k0nfM.C[6li%H<gS/;H`IQ/;I^%B0LqAh"'cIN?hJb476ca6ch'/5Ch`=sS.O
%6F;Ed;a1c*m`=W%7=%sV)2FkcRu*BrM3=E,/]V;.\e90hIodCi8@q,6lM=O5n@14Ucn(9;[_709!5^u8g1.KE#"6^R`+t=9Q0-5.
%Do2`VEm(VFA"aBEg-QhO"QEChZF"\g<[tPO`qJMF$;U6Ea99C4K/-<HTHu[:;q+qK=pCNn#372gC![=Ms+b9Xm2tb5;03\$Nuc=a
%.PW+VcHk*D(A"8H$a[3[`tjrkZ2H^HGF4;*X-P2ifOsdAAIdbY6"qi%B:@(*W(co6:$h$@^jqY&>N753.)IgcFte3oSKa<XUQqOE
%"$/SX(`<Ti<m7`l*_X".M8(2"rYRs0.4cX;'ac,0J(.b&?:=o1+7fQ.3YRcdAL39;o&l13.-0DE`Xk"R/d.5#j[2`S<b)f&'&#Cf
%I'&nF"C//qO\hC_<5C>RP/[PgL2U*V8hGuMcd^:L#W]hTpo]>107;APBhNYpLb0fiM8.fV$A:Y694]d_VUDiFT\e$f]8.5PHFdN;
%JmZ:B`_eVqTO^%M3DP;*93>Aok[PVMTF3-VLX_1N?3"8B`PH/:NaU]sNIn0]>guOOR&D+3_9,a17f3Z<<`FXOq7`i%+6'RhJE1@P
%+oeE.M-NA.ViXR8/i^;:DbC2+d4"9Ykk'Lpnr;fVX!O7k(OtQA&%KuFh6-,5Bo1Z;`\ptFd]d]p36MK%-(=&%f8A#/]n#1DFQ$S`
%3R8C7%fog=NNZ;%+sY`-,*FedFkZnL<#^Cm\GXhBjJbW!\'&#t7]OI?qRX^+.n+.rnf/N7l@eSJcX?sADDa.tLdDAu*<?l`7:tYJ
%_a#A:P,?-)RO(G&ZJ%3ACUNDH-$F&0B##kj9b\3-bZd+nMLE5L5mYBS\m9t-NV2p5IDkqk4-&3mXhtdrc)\'O'_'ajBU2(MX9rqU
%\[@nW8SP!,OU5(#Vo6@(dE^)&_i5:QK6aJlW30At[3br_`Q=CcPnQD,6YDuk=>U.^p?ucO5bi,@W[n'[Es?b=D[oqN(?3/&h=jGC
%**kWPJ&JF0*XB\"I\afe?J]imOuSsZmS?DdaV1*>R(ia,-+(1pgS:fkj6KeQBWK)Wf5NS/a!CLd;,bq#H"')A\=`@))O5jb4AQr7
%.,'B+!a6YlUHFnTor]Mr(j/<qYnjD3Z:ioo\`]g8ej(oWXHX(d$>>\tGJqnHW'`Fiq"'.GW.HqOGkOe]lX'>LQY.mhV;toSeC2`^
%%K=LdV1C$EJ2Y'/GX]VQiYi?FQ3e@3r])SgWQB_(BfqWX((!F2`9`3.8`>DG[6+n`i2@Gl5P@7q,[t1Y%q/t%<_AL*;qF(HgQ"C/
%iIMT/\V%bi`t:Y38kS'0[5q_n)a*2l9AMoblaqb#m[\A5Pkh[1YgYXoA>FND0d?DEOn!3[rE>cC?j@gbho\ub['$nl>`>t>1eO3#
%:uJe>!&-uJ*Y5Ru*e(,A)D#^$k5,j=,M+eOT+$/>OFrV93(gLq8jsQ,,eC+=7pe^)"Cr1O<m0)(PU\gsIl/I*48jFlR4saD!NJ@P
%k7BU=M?bE(JV#I/+O`?H"q1*oE'Nqj!&C;Z:Bu1.R4H[do[ig9!)g*1r9W'IV$XA/g4I(&/^9=f_5O]QLCC.6I36QLOFtH*$REgM
%l5P=5%P8K->6q8r["i<5oVn):C&&%E6p_$P)ROcY&VAs728cF^j2d9pH`]q5s,*m=)I7cD8lX:;P@Q7T=#:S99S"?kC%f?0,jn)B
%V6.<PU+aCASSD<iBpGn9\>9Wr/?/qFkShS<mf^Qu)S8MR]?ZMXr?]oQr51]XSPta\MHJ+#RcA.,$]_RTI@,nB^U963=M*9?QopH1
%"@st-J$sk7k@3d/:]=`0g9QJGC'G7c_m#LN!*r9t&f,Y@P"Q)#<-hYeWOK\SJ[>]Kmg4E`_ht\nBo&R'IKbOO]^?*9n<a7HmO7^.
%a:'GQb]OCZ\2e!F./a31<?e/j#("RpIUgEX,i%VYfa;YR!%(Ir@%in)QhHs;+,`o&Y-Oi1@HF+NI]=BoK"uX,1Ne9D2+Gd#V:M>r
%W\"_idsqaO)t"/r1kBc'?!5<8.QEL<Mf\uB?T`7nP/D%KOYFZ6d4#?#(R!E5KXDYL<6A_?2oc(AcQIfna=#>uY)Im%G@$HN3U'LU
%]Xa`Ah33.FTIL!f,&B:c_%n`9.KP_6r@;.(-nOC&[Xd$_'7u5'dNk^5iuQPD6b--KrAFri<$)4\riXA\Kh*sNRDH2Kj.aiimt26W
%XGI4Vp=SoZV%ca)^6I_)%=%&&4TqL)&;8YBQh/QP\pqdn:Ib!BaONKe;.40;?jK?3KO$6]O!t*&b".#B:7Wbpri%H9A5$%7(j=.Q
%+oCB_?N>4*_4&C\60T<Pa0="o;I%Buf>]&H5*1.M4X3::Z^kHdg95NY,j.hUDHD1!idT`V-]MVs1_0-Cjn$$X7H`%,@=9+enRDpe
%FR$'oZG3D1"2+44(Y6+^LU0c`f8eH<\ULgVF%Oc7p20V.]&Qqkk=Zl,R>VrlLg5-aq&M0pG23TBGN%s,mH`j>j;p?>4bipUAts"D
%p",e2q_:%+p9"7W3@DARl-QLl015p,p<9L&BlU[R9<R4#dlZ9YT0.RABgX^QT)Qq4gE@Q!jD8$Ro\\p^!0iY,>&#EK,%jUtEKke+
%8#bMA^)a_EIp!$J:KK@`n])HJoIiDtc.dcshG2o9lUt"BCq7IP+E)OnH-7bXq3J&?BY'07\LHE_]m&%$-[gBWh!E6,GmeNcpUa$6
%-tA2"!Zi4aW]fq+*I/e]>lUZ>oXpstX>pUb>3D[sGp+I#9Sb*S6VYN"'HqH>;Lo[og!>>3e2>5l85'UZTU(6=9TY1[8#e4uJ0nc9
%=JJ_R5Z0[gX%F8p%h1oVk#V.Edm0eO6<(6a8:@uoeAb%#!<Zp-eCdl#<B-[Om[SWjS<fa=+:1:Y^A,<%6WhEkOVS@jd`a+;Br9G.
%@%JDPDJ$Tm)QK2cro/VTp9RCN+'%/OnOSM[W>LCtVj-W!TUhJhDA/lVUT/0[d^G1=X:!)]@22#4pbsWplJ5ErOX);'*BD@F8'R,"
%-!_HEJY8%'E:3S.E<4'9=]O#'e3)"q:BhTD,7PD)r?GN^g)c`nbC5<3V#ohcK#lOEpPUC6D'^fEOMmsR19eX&[\<iK2SLjZTU^l6
%gRXEqe?iu<LiNfN4mp?UPC>7BA/^Ie,u-AZ^6H.lc`9$M7Bg880M#!,Lo4qt>rf[mA5U'eR^b=i`9ZFpIQ!=fJti:e>WrZuE."Kn
%h(M^RQ:Y#o>"anc+IMJl"bn5DB[hgOG"SHpmCs^Nhm'P#m3$Boj!t]Fo+VdZ<%df.<[S`Na3[33RMRi&V[,T6^I:L14'V0(918EJ
%K:fs#=igr_#YJ>kW2ZPF>,KBi-C>F-):_F1IZYSI1O1CL$1Wi(b"j>qeAObW=p[TU,.kLPO-ReLW3\6WKg+a*jUFtLlJH.8DZ;=$
%/Mh[uf7SKS)PWW5,O9[?XNfrI,;<I5iWS'9rPgaEJTG9IGQ3soSuLP^*,cY`dhls)G#dR`[$B0\?NQ%*L"1*4UO5k^N=_+t&[>]Q
%jbpAQJ.mh(Mq:Z?oHA`(;bapSI]N69>h/5AWXlqth+TroQ6f.m)\7IYOMV20=?e@uL&(/?(Z@NniIAV)iu]9:`M65Iq(h(=i"2=E
%,#^.)X,+p">-4[j'BjU&MAOebJ5j:ZrX9/o$4ANm5=ucU2qqYc7pp^hBY'?#%V>UJa&#WSK_Lg^kgF3f!q8m066M:nCB%mR6oMnR
%rak>op,DcrAGO1tq^EBNn<0S3j.#OZ3/)i_*I>!bn<7aS+j'7rj]d\`Y9ugA%>O*/k?!Vq+.EIX?>lWRlEi*;>`UPDhpX3>Z@t?O
%7q>^m[lq8-Y"rWDLtt>BI$c:9E:mg%GD@QB173h8,(80\Rld$[n3.fuYF&e2V8oT!'imi[@tflp;DIV!i`=jaeF8Sc9FIdIf*M5o
%-g3$ra\B_Lanqc?804Y#YO^7DGq5;32m-T,ZD''">!8FJ92%RL.IaIB2:Fgkb$>!](dn+GDDZEf>a5&VVuB3<q'5AQaV.3V%bPJ+
%3AWP05pIBNF<`6lFdmOZ"$]BA4?.3O:DM2b!H9>&Jsehilid+_6UlB!NCKucE_Tra.lTROhr94g9jq7J/LRA)*:E'",,`BHKZGg+
%$jn`SG.N*G,CVJ3MVr_/HG.\F./*L,[n@\pLnZ-P*^0mTF<or,Ou`4kDCkJ>n;UNi27U;30!&ZXF<`Z.VdVP0fmc\UB+=X?%*d@g
%SE>m.9A)0@C_s<AaWkP,S3hYg\U>It%tEgpLSGjP?3E/imVb<>X<C>N06MZdcprh4D%,2B/IthDN)j["G(6;k6B)Qmc_u\)h<96U
%.BSQKKho:C,p<Vf,UE-sa^aI&HDu+_;98VkdiZ:"`V3'KDm[rP&sY"hL,[VFS1fjGK(BCfbCkGi]I(;FjU4rs8&+Dd+#B*ZLA8Jk
%#92tnrpdM)@QC7UK#l#W>jPkq*"Rf(Oe=6gLm,!T72L\sm+$d5#KpiA.\(pIgK.tqi!%fI/+?gga*jbgZgj:aGsBnk#@F$s,W]s5
%<X"EpL/Sh0)`)kHBQa%<V7'i<&9Z.YLW<WI:ZHmb'%rE0g/['.h*_<//Ym*'Tsu5SG+(:@mK4EC<4GJ\EOc]0[S&&'?W]1Xot*UR
%%nuKBSH"tHIsjF'7Q::N"&?9h3_iFDl`Qd(:Lk*$B*-4?nT):aI\mTS`eS'58rlb%o5L1]B,`FH58J_#7VfsK1(+5`HGE8qh51Gq
%hEFX"54+(WI%%u&2Gd.oJForP6#lH$m`J`]D)eE<`h@/t*0B=#dBsSgGu5[=GO'dsODcA:RfP]CdToDZh-$h8WpfZG?da/Tp;>so
%b^<4*3t,En4ZD54#Dp'Q2:fL,qM4g!R,9?pXLbj'=oc5K,1BQo\(?>RMqg6gQ-bCZHV(VbdI[/H0i.F5Wq:OF:/TE'YD_G)A!/Uj
%AjpY&.Nn7c@s4"nZte4f1tB*Me@`hg^UCjE^NJKO<P`p/(siNAqfR[ne(0Rl%quoAM4Lm0/8F%Yn9b#bB;GGV)C[1lPc/7o[ER7<
%s#i`a4`s:>2!plPej^Km9q\%G5SsWS):?#CRrn8nSBqP2W+T4&4J5!;LSE.O%.LFJ;Fem<i>2j#=A>P-T_/qma"^Q,(.XDnM\knP
%K+Q[h`ETW:U@\[*=7@/04n)SIVt%odY0?\]?*/A<[rGD=<cHI313!;?V0#0(FID9F$9VTa.8Vkc_kG8DQ8qtdo\isE6uZuOC;+a+
%$)u<flGMLl7[m,>Q_kB<7T8)#P4IA=GA/9'JQc'iCmg1uj9V;>93GX8K5AM^nN8_.MtI?I9;5Y35+#u.mDT!t^iUY_SQ%*$#O/r@
%HB]@"1f^+U(P_M^o=*G1JZg.O@Ibn`*]MP?fNh$q'G[5fQnBE[G)7^q;(A#WA&=%cDql6i=I@((Cm":eV2<@ca+/&sfi\uNR"RoS
%be>>2;3i\l;*(^/j1f6iRC4[X!Hadt,T"CUO%F[-.'%Z9,U&'a*M4*D?d<RpWCNL-pD^#"%1hVg@W\DA58NhNkg%8"q:Tf2Hle<s
%qjfHq'Xk0uei@4i5R(NcXLhesV,0sG]`F#_"@&.WU9]G_['j$?=.kRQke55TKc&$qgt5:+Y2UI^+$\LN[MU1tM*JnfYX\pi>b+DQ
%m/67SIO=F%]_qVeA-n#JHn+8:eGi'C`;5*#-RLT$Ug=T,\l#aQik(G$*2!9P7KbaqA`[,UUmaW8Oa.!."dA4Fs/JVd;0'"%pHI?R
%9d%tAJ[@I8qVdo;fV[\]U.B/ZPJ\X.L"+)!SABra+B9W03^fI\(WroZ8-rR(>/a#Y/B*sE=A@1RKh$NsbuZ1UFkR*J8#q)K7ihX?
%ic`MHfqe1GMM6ginJR1i'rql#/i;9P.Sb+)852[5k&MpW2QM(LJ6>TP*hij)`&.5`$9@^7`]Cd8'8i0.5NrNm@+F[8OfDM+KmuJD
%W5hj_$jo.;fOJWPp+rjnN+6Q(l[c$#<&MCYrr>o`A<0uojgJVC(:dhDiWR,tO$c*0Qe9;>[I6HTI+0/knj@UU^I=0(5eKT^D3^)2
%"sXUm&p&&o`$[I-"D00H<s"b7M*#]W2(fIdJ]aNUjAud]0r#ps&:aig,88k=Y2(ca;Ffr+_heY\"KcB4a2ll?C,l2tr3crP@+%MI
%5g5XH?t!ZZ]K`uC%='ccgqFg+#*?)YL.#mF9u]MR?8WIAA*6KP-Y]CrF*p!WUSCNN[0!=J\\acn_c=Ho+AKegNB<1+Hp=*9"<1r5
%9VjFW&j>Z!(nOT;fg<Gh8nlAU`siQ'$hEC5aeeQ)_?H3Y)Y!*Q#NF+9%B#l72$tuT''*$2@XYE6ea=hDnJC0L$?s&)iC4/%T^--N
%A4`tC;S1^RmHbq]l043b5AHIQED921N+/,0ZP>lJFr<hN=L&]RB<nn#A:V[fpRU68_R>K)@RDF@B44[a+"9`Q*@W#38-5d_-jF4A
%EM[;oGXD9hP4OFN%?9Dj\tY-7K*CTS7R1\D%^P]C+U+!cZdU?0s4UlsAO$&p80e#AAk(7S/eOP;A"Q0oi6+HH<2GahiX"_"7:oQE
%HXY`!Fh,N:G#3EcZl<5YQ)TmODD4@p&0F7+;$/^G7dr.S&Q6QMb`jfnM`sC0O2#Na-WVPr-6i\,lmo1J#DL>:>soV,Y_6HZXFr+j
%]<L/$QR97WG9!,hkV.^`5GrVdJV@&kGIY>3CuV!\))59N#im,iQ%aR3]'q4!6Tr<lOdUlsRHZ&#V,e=Z_Z?/%hT2e5ZR'1cGSVh_
%,;V5C8Va7qE2_o@6FK6e.=]AP4.ns#bj<-FaK2\K1H;F9rRS;bBASTi)H3_9>o^6hNAkrV(r\]d#@t0cZ.TL;>42`ogE-@YE[k<*
%^<Uo7,fralc-kEA@jOCin93@_FJ`eeWa'gALRipJYqnO5Z0-*_gZ$Rm+-%1+neuQ\Z(D;Ppd_*8]0tU=*\h8tUM/dX<Uq(O''YZi
%`D1CR"R?77ZW&htS+e<"G#:S=.Re+\&;RV_oqSN?Z0>Q:7_<!XPd\G33e$Bd*tt8NSss/,l[FOof?`jiih6I\(oLu8:mnm:h;(10
%8FOpmk!X=,R7&L`)`T<DIB.k-W*9;g<uNQERL9Z-\VbdpC/4@,Bam_uE4N.==6Xd..[tBZILfA[;tLtIlRG0KmU.-HVCBq69u7<6
%Zd&,h*pGE'npn+A.s2UsO>g>8J5R`"-d-RZPMlGaOS(>K.6q'DXo+@OA"qlK^a6LY?TV2F0LPVIEK$>nkDI2C]UX9O_m%\^OK2!+
%FXZPG`T=&01VI@upG2nj\"ED2=^'O840@]k4=[W)j9J+Zf`cG^YT5\GcMkAK(h?ZSX3]30\Y:G$1]Z&9@@jVi"=A&V3Vd`AO0X(3
%^Dl_OOtG-Kqe&a4@b74k%G1?"G3%]p6S'p.gI>&*DrTOF7UD0=67PWtK,q)P)4hULP*tLRB<k&$\;WM&\83UW_hVk=PQPs.k<7#4
%FFpl1I!X&MTpt^.:7dT/FNOU1@>`CK*BNYGgF+NB$$^[ap!#Vq-]`91n(Q;lWc[74R_XZ%0*CG@WM:W*b)rS0Uf'$K_c\pX7\[K&
%P]*A;h_c^6e@d/**C$^9?,5RF;bVs-8;o?c-!lmFcgTWi:>*(6Wq#03X.RWV-71<r5h$k2jPG#1!SHh*hpl>`$YQdO,t-a"8UosW
%lKXf"WE.X=i>]hf96*9*!`nSd@._ks7ZOjG:ELAdDT,6h69FZVqWrO-:5d2&J#QS:c?9k!&OuSP\l7?[CHE5uj\>EnFl1clEq[ub
%!Ac:"Jg3'3:g6>8KM68]m!LQBe0D`3U'N)6,:*f0+!:mSl;D4=+,uO8Rn@NB1.+n=dZ*qdB[n2Ji/7Q:B?07<gW![AT'WMAK>N4"
%P.%"TALH5<5"\\:dMEUnV>,%""^(':CDm^N06K$PR2D09PTq+fr#;,.)0GO0>9MJ\QmRii9:D/_U!G2kW;Mph&8Uc$UpQjQXHYU\
%_H*i0`W`f,Pke6[O.i[L;_N2e7jdhE1u!tC2o:1,Wi$#Tm0jRUlJKiWr35@.0WpSB)h+8!UGYK+[.P>DDK%D0j]n17*MGqMdlg[/
%X8IdERIh\n)L):#b>``Iid:ICc:es904hdqLMg\aO8>WYO"fofT6mM^&HHcj[l#u&[C2tYqBFSO4:l@f?NY#,@jXpn<bf=H!qSDs
%3%NHf+OpUM!<@U)F6[Z>fk2]d3.cKj_1S'l&?B<?)Pb0LHPe<W\A41fDM-XF6n7/1oVU`VFmfRtl#%b%`<FK3K`nsVJ4:cqCjrn@
%V8aU[V)As=_T.s]G)T:'obZ'H'@qb3]Wjl?/DVTcBcLS"Mti9'8$-faN!sSpjNYr.Z]gqjOD^1YH]bpgRgIL5N;@5o'/$)7YeWjj
%57p<Q#Y+S\6&geJ]b>hDe:BBHX^:(/Z,!s.\3WrAW!U-b&./eW0d=T0mR=DMm&nXn);*;Rf,uR7A?^7bF9YRRcL%rt![5.DA@@f6
%YK",07@4'p/iT'XG_=,"Y&*:V$#S(K=AoNY7/o>N$=sf.PD"4tF%rh"hjsGQX?(DL]euCiro+1u(3ID0pWVeM31f.Cr`.cda"gK`
%%I\cLFgZ-O!5s[C9=12m4bpc8HDir[IIMcq3rRgIfb]Imf.c^3mij)Sqjl'1Pe!0q^MZ^:DYNK0YMPWm=Gi<Gnme30U`bgshn,EI
%U`q-O"/Fi0i!e/JUAHd@M<lsVo5oH;JG&(3E=4>-pg`mQ1NbjsB:a+@YIch@=f:QSaOS/7WS5n5W)tMAY6B_qLV0.L`Hmbnb0mSY
%Kf-;_U<%*bO_SCh*jHr*+\Rba@46bT-+VQqGc/T?=g>@l1QtH]g"O>Dd`/MDB;`55i3V$t!1+THKn$F3_RYYKCtudQgHsha:84.#
%"*6T0Q<eTJk(VdDdU;W`N@B]n&tO)M-`+GaT;1"n.YK>?]WIYVL?X&47V=48;16Qokqk7J^CA54nh>8'#gjC7^QPgHQcp'gTn0rs
%>&gl+]-Z]0d++@k6C-6o8?g;EV6'(IMb]G];%S!rqU%=DF!:8$<5X5Ch636F##jQ/fM%GDcbZQ]?4^-ZTIV=2qc5^d`^;R&'ga4?
%VN_d9W=m[^,!O43LO\uu[B#or>#Q"NU-IUjOc&8<`s`);XY6_DI[ZA+od>7XWHjb,f1P;-ld<,'Z007I;W$hSY'W`UghS6^O`g#i
%%5qkT)/Y<PLcN'&d;r6aTPiF/;V_d2U&6qaipSidT?tYj8X7m+i2G5sG40me4%Z,fjDH&#o3Y@Yp4N!m;;Ekh>IM3U[G:S=E;ENs
%[mi,)=`RJ6^7Qr<e]O_AYEI1N/W?D,H$J&O,]*t)0j)n#L59ODr+[-4-[AR)e[K\]B6RC]V^8_:4Pr6'FNughdrq!jT<5"Of;_CP
%*U'sAYcbXKA:b<EN1n1NTT#0tddTo$_lD>X)mXYA;N-L781,d"KA2pYVGeLHOtYLbR1lPS$inkZ!c@EbA6tps/!hV=-On\O>UO4m
%,[F7:L"1R_gkMD+b*38H7S?sNVRW7ha5IaigP\R;Kmid$msU].s(PgA!IE<tQqJR;'PS+#dLm//dG@ZZ_n=(-o%?B,k$2Up.Fi7J
%F?+9g@\fmJ%hBL4DC>5<64+!5W;`?^B,g,;'<WV=dO"1('bcuA-Ze:=,CD9mR#L2RaAXkQ;u/t;#+=s>@@%?XEhf2:&tu/+-o.fZ
%(mLsI>:`Pp<ULl54+aho8+/6(lNMcL1+T]:%@,`l%VqSfe:u^,)F26Q*Oert_'pRM.8&KfcoaPIWi\`6IlXYn;5%t!)1K)'.KYGY
%LQU%'_R(`Fo0T6A_=l,!F2O=SH!qj2j.']sZ_XG0(tHBr`?`r4jE+cQAK+r]An<^pc&WcuAY;e")tX0C=o'AS61dW-OeF\-^CHqt
%/=/tffUopi+l\S5Lh3uB8dfk:6=hFQ&a&N[Ya&SCda]Ok93kea[tbYS+[P.VSSVnt*l7(9_qm&FhaajLQ'#gujuk)"_7TbqHo:n7
%Uqc*>fPHdF+G64Ul%A$3'/Jf?^$Z'Ngo<6u`tKW\F^j.BhT._JEbi<Vp4).uknT>a,b+<3m8SAB6eBMo?(U;U\Z<uo)s#4WG7_dG
%bN8=('n&I>)UcZee:%ll%aY-G.f698#StaV_M+7FQRAB=Y4c$BO'h8:@_uDVh@#BB\D#*9.s-0l+'3M$dsj^!>m@,?;ki@1X*6Y6
%YEp&e]4[qKn?6-+Za0),*U.nJ^1li,Cd0j;SXJk']>*_']LRZ=Sds]:Oj_]9g1koY*rW=b5GJn7N`K`?i__W"bB]T*\un+SD''a[
%4,';"^4&.9kr-gcS-SKB?Y8lFoU]DsZqg.V^1bh5%fAk#n)[jaEf?'M;d@XkQ.LB+S91%bdINd9IWt3h@pNpHkC;9'o&Jp%aMFOU
%5GJThC.bRX]^/[>b"*WD$Nj&C,_I'`KQXr[#lINr0Z[G=qi5B]9l5]e'[/4O+BiLj[Tpb;=K-!oSmL30X-LV7;=)LH=\):2:W#6A
%`]5\=7n^6=P'5A21g4Wm,gCsA9N&iu.5dkg\sO<\>;>iuV!(#U605+i%e^X$j]ig&jHf]R5ilUsU_8qMIn63B[BN%hM[U4jm8R>\
%<#i78X%5=<DG:eC4j>'<C9olb)084J[/2rJp1Q<WQmbD@cPA3Ibrs3;UXm1J;mPAF=URc6$JROU,oI&XS'j"d.$Ko)X.h-RZn-r&
%=08>gF"=ALF<t@`QWt7h'OfSf!%!W*VZG8UQsK<ZZ-kTe+GI3[S+)sg#/!#=UMH&hk-P`-b=El](G5O>O)n6U[,rFPdX.p0Z3T]b
%"4nM`m:Vd.hU91riGI.TRre#*PBplbF?$hB3I6-4TN[8qkMK8Jpd=hONEgA%<GBKa:L>#Jjt3Fsh,Baj%[W'!;_@40CL!_dV:4G-
%G?e1ZfS.4ac&,aTI40nAfbK<&LltpFRhD%F[t'C9'8lS(:+k[WZ>L]j1J:d_%%53;21!ZeGpsf7W5'-&L.s'B!cqs/:E:*2Vsh-N
%U3\O7&R#&`SLl+s(LopO[7_R3]f99)7T9?Rd37Ar_upRJ$T9^3n,F[[fAXL]`"ILMEOLms1sOXGZh.gt$uB%H%PrUZ)GZ[Ec-4B:
%SUd5taGKDWF6UK\3G]Aib;+qS4A[0bcca_;#oSmQSKY.f(.kB`I'f@BD:\A!W-mg^6o;BE22Rg4-e[!2$\#bi;R+)uXg1Kk8_cdM
%'hD,`H,@=3)g!5B4b;J#Vg_a5LQEp&I(d)X7Y<k$ab,'da"P`N;<H&^cS1)`5'i?r/'M1424=:D[dVfoX.L7(^;Tkf+nTK^?',2;
%6PNJ&8)4^RhD=Y/Ii5.+GP8J9b"NdjEkS1S"oHoTGJ"%6"$V4C;Bj8Ki4_Ibm"F#eAO3]Os04JM\o5u=@!n0Det$/\G=i[Lq;#d:
%>?lYJAGgaO,L@P]m07S]2$+3g6$CCN'%HNR@^!kr`_Ag9i$@VKZ`ud,P&!0$mb:uL0VL)]C"fdA_Og//\sSFc1sh4VAIaT1qQOHo
%8nrTR+gFMKKZOe%&.*UH]_'5.qLFP[GA)5J%>A7VBUml9LX2!Ar0S-8Y&Kp!Ph(gS"Rt2+1C)A:9RB>IGp+l8>*]mO6e"-RcHIKl
%RYI<US+Mb&+o6]4NFn47M\*#5<!"Q+]Gja)Qkcj[&O1$uj;>+K#&O#_Fb;KtY4]Ot*TjFLE=(NbEu@.2*2ggO8'ZRDk>2ckY87g'
%i?M'@DF\qRRfCE8hp34mqH!tII!o9:'2[e8q2>K&(n>)bK%%u<HY2Z!AW.$>3V3'8k3<S$;Ur^@\t\JW/r.*:#2d%L#-0$)<R$UB
%an+Aj4.'ffjpV3X*7#OSi=%iK^`NMHHDDZ`et&F)*E#*hY)]9?1]Q6tPXJ,L!><eXk<V^QmbOI'>(Hr[&+N/>hr;$A5AfkpCK[fV
%LOFaR+ZflR_"W`&8!()^;Rq'Vp'2F$2?Ym0!eflos5&)bJno#LBr2eKa;hbQ,U]5S*3j62/e,*?>"Q&N9=gV\"s_VJH0CJ4N8L5L
%A@a9eU%)$`3m5pmg1G#lp&_@B&h)^kY&a\J\TPp"Wp#3`E(*f]o:Pt=b?75l9s.<r@jkcOmiNJ'@,U'$g=rk>IDGB<J"N4!1_bDq
%c[E6d7#I,Qk<9:*3o<Vt2"/I&&VZN&2ZAsre!T\Sf45:[<:+//3'Ok*djU67S*Tb>h8V%mZWi4FU5h3n2+HR%CFV6J=8k:a_etbX
%g0!Me[*CXaVp&/%>B@_narVLFIW3GR?1=(E[#Q\eN"QZ2dHYf8$W\=P2U&"McY[l+Uk\Bf7KkT6@!B3am/AarJ,"+j<RJ8(>i'Ta
%1'GSem(g.%KXo,iF66Lsm["o#b1O<0AoYA*11<<rkdmU([8X?F+I]MjmdQ%LSQ#?Yh=brkT<,gelS(=p2]61N$lf`moP$#Ln>oOu
%fEFR+_ml`qnPm`tXGU*s`&0_KUKoiR`PKaAgLgD-f]5CtP\#D%]2/)XVB70U3<rTl35(/eX:BOqe6W(>+9-Ftl:(m)@/%tdp8[<B
%CFP<_./J&)G"\gb@FVGX$\ET#O/PaA(H!_8_q=r6_-__p9@>0eb2@osj(KF%N3Fkpe'^rC+).haH`Cir%)cZmI6])lZ50[YoG_8'
%mWJg'q].,EmOrL2OEgV/S,F<?YhVJ_'GTE9I4mfh;&BDtcCY_PL5_cDc*/XBk:^?E\&nHF=bEQtDFbU+[ZZ&)Aut2mdcOd^D!WW!
%I[`MSa"D/Dc'M21bY\QH8\*_"B5ArNh^Gkfj1UQ`jat9)X!7=HA-*(1MZ\k_T-\F;$cpujbi!+s<H6!a>-hn5'gR\"X&jgBd_,sL
%n-+9beXm`W[L*q@m:-?%oHq@ZdKuoq[3C33NZR94g&*ju?26l5W]8=Mfs21(Y>#=I4^%P5PN0>G>?<8&*Mc\b$N1TJrL"hP.^*Q%
%k\X>ZR2@`U[.gjhN\c(ZggNJO*#%=$_/J^?\=r1!"BcKIT6]`\SFTJs>jCb9.[EefOJlWfFlm>l:0euL(X+Lo^[4?44IW^kj6C)#
%kGLj_**E\eAfjl"h)c!1DHf'_Eq[O"]gCP;Z5pbf40;hpE\,J/=^<KQcHFR.hjVs=1F)m1C-H\s?dp,ep!<ZW8UT-1'WbR+dAg+.
%QW\Crq$ZSZc7e9LhC,aAD@B&N@D<<:Ujp7bA8O/`mOK=/ch3N*(-LL:CR$`%gTB_O]m/'uH06MlVN\gk-X-Q)Z$8kAK?MJA[ZH*a
%PQP,h3)Xpg%Zfg'T"$X-$b=0s&:3TV=**3$i=>OcABu#=#@t[L0jcS(p`eM!$r_YFQ[eoH;?Va7'Vd(7?r;_JVMklA_!KF[,L9%"
%H<X<Y>F5#Dj<EoD^kjmcd"q9[&mJASR0>GciW_3f*VVN^A!AH9"6dZ[IHR[oUcn"K+l?.Nd%H%^(k$M1S!EW%:2>Li&i8,Gkt`.O
%V2,M@G_V&70fCea%2/LdVFO/@@$$bMVRG/LOTs]L?r8C:!'EJ.T1G*qc%e-s;N+_QXa3PM=^F3hRU['2.EAYuQ'MHhS]d\J=c\:j
%CJ9Rc5L@CuUk'Tafi1KdMAdQ9ML!*U(LEOSs'02`r1JqDa]02DA(3@>i&OhA6:e@/e7%;?jBP6%FR:eKWCP"2*H3kq((`+!kDMDs
%o\>8LYP8qK[mS=f.XcPME1u1t].K#hV+/GSAr4KR392r/ZcaVsUSdFuK/gD+0q?MYBtZNIpZs8d.mS6mG?f]GB=oB=!n77sVu#.<
%"kD"N^e`4<Vn\[C5"($BmUn0Tnk_D=;8;<%'7LU:i8L/HUkAIVg1:%I7SR1JPcm,m*ES9K?MEsoCI6?!)n-7J\241[]7Q_#fKt0N
%>KV!5V6BW1Z2.)Pn+JT2[$C3A@210i/LkKaQOY2J2LH]JCfLnGC465+U)#UC/E&]Er;Q#G0\%#/YUp]Vl_<q1(FrMu7S?jFq70Wo
%iIdU?-*6P5>XV^:f3M)cItB<UFg>'<^sI(].V6$u*9^e!\ci%.o3Jsh+.Xm&/'W/*=[^c`X:I*#7LnrDrJN8V3\YUh6PFp<%^f+%
%@[?!Rq_+%>ISn`J@496JVXMh&A)/WnFtUu1fCIKN-<_$J9+*.>Ef1_CO)"tR*CVr?56/5sQfUKCU7^^Z>H@<:i5&!^Yh8#XR;e61
%h$`+i<W&)0RDk-5&;q!rg$Zr`!r1^Iimr)\f\5tOL8_oW/8V^%h"R`7==0iFX6n-F[;-h<`M>;@#L&E\iI3;rBT^/EZ/Dn$T(KO+
%FMWKrU[DUYXp)SUp8&_a@`h$bMmNt:W"lM>A'+9^@YGV\&9.d+2>925QV:%%X;8hmZI&<Fd8s%6TN0?_.c*s4::eIhBq.FGNgH-?
%Q\.L<eSH2!)^A!QHUCXS_%J8V:g)N22R;.Ri@pckPNeh-ZW('h/I2e72RKF[a@)GP;mh,pkh9/aiZ(<r`an=na$A,&+Z?9uiEF$(
%L[[^Gf_XmKA*7P6bAGYX?`)KpecrCV.#*JP=eKU_)o[jo9i*Me$_oiqjWM\OqN.T0I6WNGk(_Qbs.p0tT=u-[[nQ=OJ^0GaP6lU<
%Ut1'^%EDbJ)An&tWdr60RsZ!qlXR[A%75>uAE=7`M@&o1b%m#6"(?SH8[LQe.uM)83GJf[qQ,\%+6M=HU_0"+<c;Q@+lMdd*rXM,
%mottO@@(n3XQF7u2d.eP\(^]6J(Y7:_t6%*D&f=aG4A%t46ZOh6q\*fOfX'?"4kH(?.hnMq9NDkp2!0%?AF'Y=JM>)p)<[4BDGmE
%p`^kJT2eMsdst:4Vs;e$JAMIE8E6r>'H9G6Nlfafla.T[q7t#pFRLkrp/;2=1FL5+J6JkPT>d.hcZ.b9/=hDWZZ-*L&e/)*cJb\T
%mCfMc%qO)h)Yrrt=9/WQ?K^(6i][n'2uS4*N2iIL=4KOb`ADWIbH=Nf9A!C$i[d;baM3XKDPS.<`[nQ-hPDQg,O=A>o?sm*DQq2b
%ech%3*c1_2UusUqW-8O9V^b-E0U[fCG+W">0?@NQT3K_G#6LaZU<)-<)i)([D3[3b=gHNA2+q\8HPp7;\*iok?C.5VJl?\$-30`h
%XlKn>*2>DBo;=n3B:##:C`C`P6(%6@/p#(Icu,d=A-H"Y:nb>,QS%6&%k%q-G1p"U&@0o)4RVDi\JnVHUMNE]o4t[cg'XU,cEKoA
%*G%KE4QWhbDPXHr-jZPI,>C)I"3MRl;cY6"/gA[-4@'eH&]Ok!;S=i,('HU3!tNg#b#=CAY_#g538Km?4V\#c<Y(V4+(I7;@_DH_
%/T-bR0rX9h9Gg<'f6:8%$-uV?ja.0\FaU@(>QMpmG`[T>fW\Srll4J[!1CorqU:`_M#]@uX19bnIQ/fd5,Zpa1oOS7QjNPe8Mk.8
%`+>n";i+=K#/)Q(KO_?*Y%))UK$@9<;bEq7=jb#\)o_I9qOr"3`;fI9/>8oq,%=&F?r%.7?+j^\Suta[k[/IIE3ALVL@1&$Ha7tc
%VkH%84faP4;s!O91!b#C'k"'u9o@0+-_8No!SL1)KY9+W*4$pai8RSO+0?.<LJ!eP(REUg9C6M1Qj!.d32d!]d?Ieh4a;URWLqiH
%<`ROT4lZmOYP_R+?trE]<]m[re6kQm_n'YF7RKS1chN.7:rL\d&A`*rJ;0kl)SB%>idb@U67l7n%"uo<fd"EAb=5q3*BFI*SlFLE
%f\V:G`IZ`'E+j]Q-I+\[YJ6`&NS!KVT^43Wo%Jd?0[(]X%]YUg.#1<bTkE=DYE,O)D,Qp3Di%*5Ra@EE[rLag/Dp\$[.1U[ShR_-
%,l*i<T\H&k2f0tQe8<\29^eeAj2\Vd!-&HY/)M*MKXtr^Q-[<6h5Fc\jKf+>,ZQpt[92,W6@nOo6VCSdTP,L=?MZlc]^*.*R5W,#
%\p&!aQZ,9u%U?a%DCLBZ"`Lm'Wgk]:/@9b<-\18P3m5i%T<)_bBA[\/o^[*RLBcgac6X!f/B#Db:8'Aaa9J28"gJUR&%*lYqjBJb
%JE"aA>eds!4=mNRBDh6mjZ*GIKOP!Y?L!9Dr't3:*RXd":TIE,q2tcK'j,=Ek..Z6R1O;]CrHdV9%J16$fDqc6NGXWER!^]iBgeZ
%SXmZLMb.s*U,>e\8#Y&cD^\t5.Q!!dg[T0lUXEV06-1%_:jg`dba?+L.GHCaI-_cg:p/kO;etZup7n[6@&DRAn@!:Q*aSb7Rk?1H
%#c^#o:'4VD-qdO-cs4l[UYMPHMFc;9:[T'/&m/`q2S*J/?au]4Ppu9C$)?7c"j+jrqnTKe8@!$U*<P%h>hYo/?P)hR1eF[*6M<`s
%=0-PeDJFh=4VmQAc3^cm#6e!>jLAf3!FL71]j-C$DnKuGOt,\Fm>*fZ>XL3iY\FtG[s=l!We7l%4aB:=_e/?6Z:d,c6H=]^MW1mi
%#kJaA@0Rd`"kG/r:^VcC>&GN]JoW]dnuZi?oNG+>VouuMod"tR,8c*BKaVW!]7.=`ae5*'7N*QlC)Bp%cn7<fW/2@b\bIU*]*9eF
%.4mot#I&b27pH$o=t.GlnK?8HGRD=/GHEMYX<UlSU6f?><$<c3cn9$N<s8k<E^ZI!.<PDufHp,g+(qJUQAAV*/pP?2TA[@aV+-3$
%)%LEXW1/$pX;k23$W<f_.^.@QPP&22iEHIn@/Apa8eKqVZELgL5JCjU8^G][MfP?oC-,5'^A9aT)]Y"qC&[WaUXQ`(j/`H(0F`a$
%^Xi?_@HM2P(kl;^K!["@0jsoRp%pI.@/M/Kb"/5&Pc?c;CPEIJBdu"k+fufSAGFH"I'\bWMj<%K_YotF8@FaK;[\ZMF>\:\A16pm
%A!d(:b>#k0CpBQY*^;,97Z)?P?Y!)jf2MC;UQ02qXP.!&ja0NdHQpu'@t)9'P<Ed26>gI)r7.C(i)Hq[R\m8kkUiQ4RE2TtGS<1q
%g-]Cf)rI7beM?m4Q0!PP:QLI32@4[>L#?GR`:orLcSsT%#JsVB1,=k.Yq6'S9p$Dra?(K5jnI`3EKfsLk37XPTUB^RT;f3tA_(Ek
%Xi3#EaR35Yo.J`]&SHG\/[Y$V[&M4`/!:LA?dQ8ras"i\iEG0S)NhdQ"ra"W8_1m9\j]H=*JQ5`&JJ$r&2FsEh"m0-la)DNcdj_,
%pe^fbSH;8tA7sYQ3.I6=SghaATZ+X*)=j#5+CNp<]acJr9cs6sO"sfmjX?Mbb^44=HPC]_VOS&D7k,%r;uVVN#H]eAkfAQ@Ol8iq
%[q""a;kp!iU^j.>k1-1&KVBT-JhB!ASLhE,;NSRH\less\`"jqUoocF7i0`/#LV_ORLCHpcU`UJpi[4II<.$;X5Np@M#)RsI[jHQ
%I0i+#(2moufq&T<?0*/8RI5GoQSkSrKEHMV4sIqMMb_;TA.=<g_jBOR!(+ei5L`,,.D"I,U208JJ>L-rkX3j/LZT@ueeL%;D'+gL
%0?M@j.-8"0-%L"3i8<Vf;,"<#E@bjXPimF-dV!ltjQF<1XN;eT(/gll4Z[&E0Spg#rjZ>p:AB#1`Oo1eZc8X;G?N^D)MMG8X[Lp,
%;nb^Kn$O"V,,?=$1W="HY<EISj_WZ_5H\f0jE/)QiP"#2(2BLPI/>/6,OC%`3pVL;PY,;PgDqHlW;Q0J]W"o`AGu&Q9D]Pjm+hWD
%U+cd:.MGgMl>TApV94F#i=f%lW`6b]nphWX\aj*l!jsW+gF&_(1#_/d%Xij7-W2f+86eHc)+F$=.B!cc^IDL*GP&?@6tfECZoRal
%b!C`'R3><++&lH=SY^Z*<,^$qn;/823^gpH3"mdbVO$T+[-A03NM>%(I@DJECCoN]FnD3]_dKFegEOs_RJ"HiIht8DUR5a60[W\?
%YdIjS;)b7l<-SkL#)=<q7I\bK0sqXs3.#AMp_FpXJ(VcGhV^DYW9bZB1o-M6B/o]T-C&`8'>@FHQsToc^>!Ee0i;N:0mZi\iu*CZ
%@AP+-B.7:<<rUXFK[CTU;44"6Lh3W'T'TC3]U'(3L913FoG)ZO/7.B@qUI4l$hOj@+*>$`hm_2H#W\c(Fh?N?GO1u[S<\eh?]cEl
%?kG^'&pa3B>OpAi_fR1369G$Bk]NsOCsobl5T9Gt&G9Z23iYo4'QAKa.bp"b%r)NHJgtXn.=s+EA@7I"C3QIlG,sph`U+nW!gJj[
%XWOk$GM'eU<CP<>,`fOU'HN[)'BdmfP!He-8#(!jiXA`G5(7jK^9LiR1:'Y!SZ=<LlVOt61=d+]QgX\SrKJ]_p#u!/KKRE`haQ)r
%BXCi8)HsEmrgVI.^7F574YJ=28.I7*\Pn&X!^$tKR2,M#qUp@jeNXa9\rbsucfQD[jg'8$6RGSoN_De42$>(:aL6;%\s=Fmm#$Ue
%7I=N&Ur#Db&X5-:=/["mei2f*kqmhenjDIXCR<Q:@.?qD#MH7$SX$q`e\Bu)(k3+*"*,3m4Z`:lhrrMn91ZJu/EfD]V)M->rW`16
%9dTF\a8t58n_V9Jb57N;0r1p0@U"rM2"9AQ:f%)4"DP@9*)Tj7g2dun$;cDtN7bS&BekmXP)C;s1l(iRjkGKe&Ymf]ILh9]^+J`(
%IVR8uaSPcEQ[,![#f?Y5W)2bVPT.st?h)um*G(1LCuoBf74(#ZFDk9'gb9j4/N;BKY+k?`=1>l4b_9^94B:T\Y-Ogti8\oO%BD'5
%qj$=%65dc&7N^&tA;%VXW*eH*XFg6c!rKBuNcc5CY5NJ]&?Ihe/ILp.j9sH'db."Zr:bL0:'L$E.emKM@l=361LM_?+g\E6<N@lu
%?_Z6MTmEX$d)ma?#G*VjIBdNoPV$gs>RPn#7>^$abY!SF!QJ@%51(,`3"`b(4Xr(p*U>Xki7I%3TtO&A:9%a#G(_A\iMJce4/*sF
%T"DPbjVP.GItPIBSA1^;/J8uRd(G=;$&S8,G*U%8<))^kC>3oE>j3_V"gg97"@M-/`)csQFME\<'NI%MCel6(ngtI*JXiqG.iJE\
%JZi"Ds$!cLn;!/(8>JZIcJXZU=%EL(@9Ti>.U$.`1?f&bd+,'#1Np[1:PY4K/LXp&kr\NS4?k4sOjiCY+$/,r<V6efiYi^/6Z:GQ
%qV*C.V^$gZ*TU,<3;kE^N2H4INq-`Y/XF=l54]`h=g250"KekKX(]j'_MQ$`W)YEU:t&1MdHn#i>Y#$/+qo4Deefk;2TbMPH"AfI
%#JaIZem\):n0;B1/#=?&NH2k[U1KpiKF1IBB3s%p/VN\-iT>g$h5*f!fIH?B^4+V4%`u@-^\[hbnDSm$/4X^NKNH;[`)KUC,e[OM
%oe=g#N9FijB@%4_Xs9rNeq$iFoC@?"a5cuo(rcE.HELPc:^>Rh1PVuB6ALUekU"-8iB`h4Qf4_r@PRbAf2+<G'f;&!XsrQTTtO'L
%nNs_Yo4km3Pi%R3_n_icp0[Z?#@%?Je#`uc5PfOb8TX!WqjBNMDr,NZAM,hB;JEtmG8/$:qg>*aG5$"Jlb&J;[8Gl3V@D6crY-j&
%mm8dLak08NqWfW=]HU,F[,7[Q8dU4-]53,Bm.:,9?''cA/L%XL%hE?tD7[j.Dd`Z%,P-bggRb?/Pi=JZ2sJqun;QrkFP0IZY?dk3
%kqT"%PM^.!Q=3liXX"R3Sq39C/mo4Xa-5%sL%ce/Fa=9J!/>8`1)3PHVQ@lFl^`N2SJ>g>==9?`$KQoE2XG$o'iVl7WG#(I,GEO0
%&ZSP\LcbD['C)!?=\SHfZIk)&JPM-bGM7)+Q//eYk&_<J^<9+E-*(Sp%&Xqq^Y4_6EXR_oV-^=Rnkpi_mU;1M*a961;]`)5B6DAD
%/B&!dEHoAQf'.2``/-6J_r#WbJ#!H3"3k+k)M_o7R\<c]`lNE&'m^\@#K9-L@i/#aQ@g!uDm4;>W<!0rCU[2_\&*KiO5R4@#T<)M
%c\1>^0GI,/TS,163F$T%U9ZZZShXHAK;(G?'<"eWTUBpUb.l9(n*NjDLqb_X%e6GoAaeVX3;,FP#V232=C9\baX30f<:XYd5"qd[
%I:@J.c.Yu$lp-`6c/i%@Y3c\*^KG?Ps+%n\Wm:qIA4oES;3^"TEmf!sQLZfmPTePF@kV6Xe(5#.C0B^tPFZ*3;!gG&6)55s]bB].
%X['4'VSc@Mb<p*Q[\rEh$mAQi=]L7L3&&Q[r"#1S`\Yjh;AJD9&9o7]Sba.&UL(XrTIFC`_L@ZVR[$#fT=.>/l%=Gif6g(MN(nt)
%]`V^k\Rb`S,6%?b3Iq`^E0:&k^s5-6nIDg[VFI4/,lgR@"<p`9b,UhP6KNCLcGLn.*Q>,^:GDHbU<?D(5T)g!oXG=/,)8"<Ofl2h
%W>Q1!6JE:p;)5BYc!ig<b.98pa*FdC$'hIG$-E-^+lkK.2sYMdERgsTHs'2HrXXm*TsCaf(b%`7O%TjWT(OAJ40Sa9/lpQ>Z]+#H
%1g$E-'6*o](c@2%[(Q<k;Gj,2Q;DuuE$l;#(!oa;.Q'MdN9Btf(um$#`O2YLjJZFN/%m*8HPO-L49^WtW&H%ARa$to!AT.Qbi?:7
%:[gh_aSE6e*mg'f8WXo\"J&reTDIeTp+S>@UD9^WE2#R#9a`ie`?,L,5[qQsl08cRCm&UgmSj+Fi=n\Y7;-s`+iQ=VTAei9W3coq
%>E(ildrZt59HQM=ak/J&&9*II<qQ@a"_=3r5BQ;bmajaKEid6#RsC6*:u?OPP7$';k?-O\^7Ts3]92=D:VK$cFK_\FK4\B'TL%Ao
%JPYP>p?t%%KQQka1i#8W,6gL>_6=YZE?tOn9T-)>;cC4mr?13MOW+F"OO4+*]Gp!e4=XWG;l0_e/D>\/n`[l-i+K7mhM^E]MVk!l
%i=04br"Xf3\q%m^>sN%n2gjU3isu`65i#sd"BZdc;Pt_*1YXH]I"]doH:E);Ynb?Xr\k#B"G;\bm-a0JB^brs4Y+#JH;Dc]XmN@&
%=RYf"'TNAF>RFRJf<c_t%?aA-,%uc6.o>APr1hU[7`Tr9:?"^i!)@0rS2iD_)r.c9LTW'k1Hua%Mfr'm*>0qI0JO5UjJsA&kTQ>/
%p'GOR.uitGe4@*%Q/=KcWR1^J>GDHYFY#a=Q_LCd])kSR5J(keZRaEs+q&8ZqEr8C\6.P_?'7pKQFH@=m34iNOmO-lUY_Rcld#!O
%4)Ma.PRUJj0;')4kd;7V>TO^"^.#Ofq/U^Fb$)]TbA&0HH2L._"ZI@$D9gJ$_?m0kUbirM^a$0K>hdqSK+($$6d&Rcd/W="6-%oV
%*^b&q#Vea5%m?AnAjnRN@+"V1NR`7b3mZ/b6:H>01o=+cdA*j?endT-Vk.IiV\[.PPU\'jl";[@F^Yjf%r%po"0]k\SkNd;!^ll)
%Yr+(tdT8g#L8ad76%A8SP`)4s#aCGI*3a.&N)sSLdU1FKTs_^%e^j&+hkQ90)0X&GA'"6If4NsROb=alj#h8>H;o4=R'e76dI6-0
%k/?fJ%<9@%SAY3BTK(t%qj^Dt>.5g]ap7<"Wu;hm8i]^T%u>%+$ADcf-?Cs`(u_TpTF)KJ1<K6WWr*X*Ic"o&$>Lo/dP8FBZX_T$
%hb#[*8erD@;9(*O9ZOJ[l(`h6h!H6Z@6*s;N5YYT-V:Qg=rIQ-I(M"aiS5j0Z+hp=`=7/soNBoh8gpdC\(.j0CDsG$N`li9&YD?E
%nQL\g&]8(\YEc?41[9uXr,o#l"6ORk:(f%s%hYnhp!1%JBA492"-um4)Iiei`.aclR^P4YXhq859PTg^#rKqS?/fI*+S\f.CL-7?
%lNbd"N)i(VJ>7#%3ul7ur\46bU-_4b[q^).9-dqVLS^,1Jm/JrB?=ZmdBOEG8$Cg1q/!s4rZ@f(Cff]tG-cs`^knJn&Y2+F7&tT+
%B]3I&EW#7kd"<kPTOA]bQ@clYf,/>N&MQr;FC4*q;6G_07j/q'r[7C(8nC;4)?597s,m<>6lcQA0Z2>+9;eL;1j;T9A^EQ<ajjl4
%jE'.SLd29kStA]0)4!m-WEIG5#g:76Ji)a5Jq-@N9:mMrSpAl/Qc`j\^NJ:ZR)>TM"e/nI1)jgS(i<E+7BQfa)a[CfK_Z*j=jGW9
%J0Y6#(D<q=b'1?5(5\+#[&0VT#k9BVej:el4Nm`NZZFXkgrZW5S;AWCPsD.2;K;"!\jN3Vs6&96*8#)FE[,<E1d.9d96ii^D07jn
%d7XO!-;Y[tJj"?t+Ead8<-"XXac%W"Ej"p:O@@3DhTrDU&qW.qle\n;BsmE8BFq`5\MFo;8<l*BrjAj09hIkJFXuIVC<PRRR/UZ8
%9`m,JoMFc4Q/OQ9!['?Ua'lKV)USt)f]>:#m3?<4de$&!0E$lP]E#KGRJt;PJ$]kgDW7$tPJ@2\K-+C+7+!',a?ZU5`N\0n0pi<=
%CGqNPQEMYgN^a"g*2-WNBhJ[+;j8GhFC<PrP5"&@mT*%m),[n/[bnTmD;fl[[0>_K%(]4j&q+I785]g]ACgr@TS'fr8XD.#Nr;l$
%P#O8+/!uE6Gk_H<1e2<7Oe'<CHM/b*6*+5VWEV8&J1Zf-,#<X_LEq7Uo%^*-Oq:LNNPCX6JAt,mfc;Y'j908nj78:`8T37'6W>rk
%Cu)79]\^)H\4D<Kl?_i[WR-K*0dL*NMS]U'D)Ap-g=*#uoPkOqXg@0G1Q$4V;eM&Z6\$eia)WdiCLHpZn92"@VF8IP'-^Eji,QRm
%J;g<)g)8`")&>_MZBQbf6\RL.TXRZ^7aPqT.PZ,?FW%mQZP;UT#tE`(n(4_)J_=,:F_gJF,n+P#8m+OBp'Hd\P6mA7K!o)?9i4N.
%oADF*L?OW_`8O'<#f5;TG37_<OFA4bLc(U+`#7ZnI((3ba7HRIeif`MqjY)OU7PXOmIXgk<I]7dZD=XP&hfqqcK\YAo-HiO*1m^i
%;Pf^\#=:#/?<VtHks`.<gO#B/_CtY&?T3G'lgD"T7rpJ1Re2\UMV;DBb>D?ZA>rKmZO_IkBDtLO73O,e4\#5"Z\EA9HaWZhkFUY?
%77At'[^0cIb7[FQ"skJulYHQ)^$,T^'SHbRr>A"[nGp\/V2shhP*%)^l@:rO.kq8q"k.VDC7"iUI0@,dOUBNY59!T:Q,ROA3tpd@
%;.f9qY:GBN:Y!Te464.XGsB'.e.SjXUHrIq7`hJiWLJP(/,#0"XiCOgq'%53B)bM?)@kR1q18Uo6cQho:'o:Y/i(T74Q0of5_/uA
%CjC[-fkICSdGf\f9o,lUaG%0u;mu>-FWj]:n/It>,A95WA;e=V5@bF8hd:hUoW,Ig[G;G-`!Sr.n!(La.P?Vf*.J"t*j@V&)VXTC
%0oQ%aTKhL)(pOp,U7^#>WsDe?ZT23$(.9K."glJlWW'1m6Q--T3M&,Gj>\</*T,GYK)C?(##.E0.0;o_*(%m#%S!DKXs<rn7uW;d
%mSD2uNlZ3\2N&kk$Hd6r"&r#eNgjV;Pn,oY<LM2TdXQ?.o%W)caa/%Nbt<2VAEq:WDd.=b,32B%"X;]`rFB3JYA0ge+bT(Yng)\V
%8iKqW5p:l<Fnm<'441'[aunA;Q'orOJ2l`]99U+:C"(^`.DtIb$5qGgDQ!*8aM4*kG+3-5=fZPBQW@jOb5Hk:OZ=!K!]:Z:Q/.lS
%.c>P_ATb;UQUg$To'4"l`=$X;'u7qslkcACm`/5dR2Q?7l*<(,1ResC0^tM_^THedN+0V7':XaR%ZeY-7kV-n#0FEh&CRirU)(Yi
%B\(MTk^J]6Q!e*cIh1jeQE($Qk3utI'i,#a?&r-e,Gno.)s<n^@7YIi`$oCr(.:q<h*SO[mbW,\[6THtW.&6'k[?jrB9$:ZQoT:8
%@-3J$XIU64S@W8t"a8Ku)rRg#+3r5VK(6+4_,faK:eILbZb,n!J0XCF\QW./.ANYIM)AXYX(#,P<;+Hqf0>4^;+mr?2)qla<"ZLf
%3c6OXkZ>Ob]h\25*,+-p2s[E6Y?>I4$16gf=t29X[-@q4B&:.L4-@rDbBibQa*+YiUkMN<&@Z]%$Uq-fC6AAjcI^HYf;1I$eB1t;
%S=\cRrBB=8aD>0-\'j3n'oCt]CH;%RQ/rQ+9V!nL0^@/Z+B<s*0E'HnWk-'?949^r#8ZTugcKYanqcnDa\qjQDF@8VmoiUCchT9E
%e"\VoNH,l\>TQ4XD[FNXO5#N*7JMsTc,T/M%^YPm5GD.g&Wb!+PrGna0@9Qdr[g]=a"F%u!?e_Lj\,Gk5bqb-1Nud?h(7`r?aQDc
%QM.9[0kgQ-j,D]IcY\mP18a)TO,V!C@:XXFA`KWf,Bmd5bsU=C,l`Id[Hcnhla`'Xhu4d/8.ZT,a'C#r*50HfP[cq<NOs/BH;VT1
%h;k:'Oe11#95$S"#m<&oRbZl\E!8k>C:?]iW-p5m^k5SdPa._2Wt4bWn:r\pe\QCIpa6cWJk!@7$A^K@4H$C*HA!'?'[Xl4IcIJF
%_^O3u2h'VM''+l%DD9<,,kPCjpA4qp!n:!5gkOC)&I-aAh&FCdKV\@;6F_mUp$4F2Mp1VXG>.L8>XO`^68EM7@^PX.@Tp71;1`5^
%Y.=]X,ht^^K&Z5)CB#cmlX)I=>$=+rPOrFF=f6RXK#!N)8.12&0QO3.ft0H\,mo&F>3tSm/87[)US8Yus%Wb'5ZXDnYNf/18LJA_
%0,Qfa>1N%&*t9BGOG&X51eX<Ujm+bRW&cga<NXT`/=T3c7%(rL+I1cb]a*SuOghd23tpGqQc\:[LF`H;NlB=`D/e-b;.7.j/nhAR
%Xq65t'o!#kaXB".fJ'#73(@+JRjG!u\]6628(.^$?=:q%[aF2+1UEiN!O+6N2fX&m&,2GEPi]&V.oW%cQsRi4+@Y*H&Qe]/XA%*\
%gfh,'bQffEenc.4W+Q8rYD6/[-Skeel(]E'la'Z9)r%f)7Y&mp<K:8\:Q8hI^eFWpa=q;Q+>S4J0g.7-Bk(tK-X`*oN2V2jbCAu^
%5g)^kCKk+tDX99Z$r7nc,N@dOEtlRQ'@8.`KoToYN!f@6e*F#*dXk?fGbb9bqWoS>eGe)"k<Jmbs7(%-kC<I+Du]LFs0r%+5Q8D>
%s#[H7#;,$&3p?VCa+*m!s6Y=6fDkPOIf-hXoUl-Cc_(7+TE!Mms0r#ehu<Kpru6F_J)GgA?:_8I/%6"iS:;I5i<Y\aNn>FH,Wl!B
%HaGP0##'?.6;3iW9tQXM1C04S:A9O!!I(]a(li(Wrpf%S]2'L2csS+'>@AkEZ=k5G"&"-1?U!L2(p7Lk%`-"s"*^r3OT=Jf-RI,c
%ZEc-"Rc'rFd%@ao#:$;SPoDq,A]U\tdEBm4IBSQ3dE%RpIZ@G<KP^ig@,dDJJ(4GKTdK[$W19]eP2LAS0U3@Srk=u@*(,n_?Y8tl
%hmmj-5YR`6j=.[JC)U#r\Z^'(g>QYrJDBm!(rMXA%qasA__C4?MJt?C66R(lZrMn7f'qKRCph";4Skj",n]@P;V4BH:-191\4Ge=
%3hUMXPROJ1/JG_4cRRtG7n8XOP]CotcH[5=_+5)R:f=i4IX=(:<_P*<4_n]VCFK9FiNCEg2q9>Q*rP69)M+.M%Hk[S(QWT3X5c_`
%nH>&Dk@6msqK7[Elfl6CljiU>..05K)(H@F$2"$C=X;&N_49iE1DhY.6RH>/R'H!2hi`>uF=I$Cmq9e@k*N$3qjFdPk'bBU\:fqM
%n'/9eT+RW4ZgH>dEF&D*1d@L-#MJo!qF&OEMBU)AhR=B"W?YT<]"*_P(6;hkC2uf^m3d94,`?KUY&hdo`l"q+7)QFZbIC!1:dlG3
%n;9^okP4sueL[fb_^)o-9Oi>ghO/Y"6i5'6rn`ik0).I-(VK*a$C,X-[[J@L.VVE6!g[U00b)1:XcdK+IHYgYYX!iC`92iQhPs&!
%!"B=bX[m31#jjuQ1U>(2>tWc7rGhj4.k%n;no=\i4"[_E2IHI=M!!`m?X*?;%k-4%WS!nnbK"f\Yr3M\O1`CDEI+0Oco.c5W";._
%=V3<!BoHiZ>4;F;k]PQ/P<:(.,^d!.h9W<O5LG/lM.S4fL)dmQ5oS?jS[lQ9pntIpO5IWcdW+l72!Lc9c.Z%Ka64UOhmH)RBHMQA
%kfrB_U[>%EH,=TFoTU<Y[.9*'rKiQq\Wsq9>rua7ZN)6jG9Gm\3GnYO9A0%2%1s</!Hn;1H8r5of1'Q;Ch4V3)7f(Y;HO+?bH<pJ
%.]F5_1D&d$r/aj,].W-_K^CQfR/h"_cC\]_BITQ@(?9,JA>bitE'Tba6^?)tf21rAd$J[,4``_I/#S@',dc"LaGbUB76nOAb=rE)
%T^qq:Wo"YakZ1S#\&R<,`G_&_^olI/H5bB]TeNFR&gEd?a61NLKsp]cpsSl.7T1.o/[IQbMm_(rWuB`#E*h$)nfj,8NB>;]`V;9b
%GoVa!;_5;ciOq?/cF:IJG&9.$[h8<R,A>W:@C*OtaM"<kA;)kd*UU!EngPX\1hl+1P7"m#l+X(6d;BO%iTFc1KDE6gok3-7YVJ=l
%Zu_JB>Xq#'Y3=ktF$RR$Bg0gl1-**pnk#NiHPTO[r\QZ_RD\U0JFOE:@_LsPpW"biT'TmAa=*ffZ5+DaCE$^U]*1;dSJaR/<-%=:
%R8)+=Rq2`Y79%/"W$`2Fms4fAVYnp@3"'bn%sY@DNSFTsId[b#^@ulpgC'&GRZ>_(<A'%>Vp,ft<86?3Y>C7m[[LXK\dfZ[W>SC%
%oriZl0*``AD*s.6q)>_.4mKLp#,33C_bDL;1r`I;ZCSlJ*e'[/hn3Pt*k0\iGgjel*M6["XImJe%Yr5X/o$][\_@Tc:1:3EV[lu_
%=^KN+o"NqX^a_Q$N8!h20I3EmI`7+(`3!T)+N@m-H@@cL-!4NCHbC`\f;]semg]q$o8G^kEd`oF":F[q,-#fhs&dI)>b]KZ=-F?@
%I%>aG/#cqK;I)b9e.L&@DPO\hLCkD$-6h`m*f:O_*c#_OTjD<dXukmPJK_Y.X\hOo8BKg644t]UaBrQQpBime2qK1"]tY>C11X`#
%RCfbO)5u,gm>Me1XZ[^opno_]/"Y!l[&:13fjC%9ZQ'-jI]P[IHhUr[Sr1$$)DDbC4%FuV*n5m?\jdTI*ilbkQQlr+i\SOB[hXBP
%hB)+q8o/7(IP5UWPT[@E.AN(*7M_D4Z%<Qf<>_+Z?Y89Je2J=G&Vtq/+/1d<%_CnMR<M@3)UM5KHQIcMJTmV10*Eek8el+cP<#4u
%+]^0V9$Z3ua+KY7#[RIL1=5'"$f\Xe<(M*/?*C8EfrpkdJe,jH@):FY#;d,t(%>peD<j1:6JYHTg+ol8&jB:$(21k*!n7?!6GnlI
%eWqR4aXBJY.Y*a5LXJlc.M8(t?T<4sTRr\caWU8fV.<PU:$L0o-B#E(\5G%(HO3Ob$F_3D=iU+gTB8oY6mj&Zd"U[rNgM"=:l[#Y
%YQb`&d:BO*8lf5j?RoUL;>GQj1fRP<,)mPmPG0DWX@2qP!U6<_ZE>NBhC]ofQ_,<#WOG-d0`W,_[lGQ:#(Rtbo1'/-"5)[V+=[Hr
%;:90g.iqVW`J(ppLLZ2CeFb,'&3/(nmb#FZ+L&6,VKLP[40M/L4n+VE"^lG%FAoJD6\6]e;Tn%fXOcc)(^^^ijQ%0Uh.3W85U<Gn
%:oV3;AsI's^C.f<Xs1S3eHU\U+^_oC6C=fTj2Vc;r#J3&mp?&*F;!9e\8,s&KauU527C(QS-nIJn&",<-3XZ?-su3.CqL8tUWbi@
%E7*/gB,#M7(SHc-22-i#bq6MNM6)(%%4#ci6]WiKh*AS)!M\B4%?aGu<oh_DnCCY[iA]39_4G?-5Yk',>Zt,%].^i/!H%`AWFq26
%NI'>*G<;JZ*,e$A)#f71Q?m]bI4]J!1'qN%Zpo[@1/9to4hLJtBFm_[Y1MW##8HL3H^CW>1:gi6Jt5/M:VVkq?%A5gT(q(fSXcXK
%a[!J@DkO,&T\kc6k`D^*0>2[G..*\($;CM88n)@M_G^\LB_+4M0&;_iN;a:Ke1j.#)`<QZ;h`8qToRr&aG]BM'O<K9ZZX\I!@@[t
%+c6@2q1=#3WCNk-)=YKfV5D(OH7.J"MTfa)")3D7P1^LF5GOg@WF:IA3g)]Inl__ngeWI3Os(bgPD=H(ar_pSO<k_K8KlPigGY+/
%Ae=h99qFsrGk@@Bo+-CtCR3&/AotHJ=eS:cBLnn7N:PeX,1Fk-e/_%gn53k+ou=1h1TQ]q$Z-6``Rj$kh?a(Qf%W^u\cn'3J'.a-
%Ljf<re2RT*?A[mgD)g^F*^*5QgJh;2+*oc/XU,^+6@e,VBrpJXM%!:0!S[;>BI>#bgR.8FS6@TIB,i)6br:fD]ahNM*\YG>`eMIB
%);;#$!_DkSNV*K4Erb)8d$c=r;qL[2[uf,^kW8[9?fM0#.)u?"GQe+j8JcoSJn'=cClLjOHXeJ:P])ee*bZe=4JrZZ7;RXp:Tr`1
%oaT7phnA/I3CH.(2Ld#^5(G11P;VV,9+X\(3RfZC$ZsH/!u)+UOG_6pEiX',,&2p.n=r[+f1^bQ/iIR!k:NeZBM\YCM*[[T8[A,r
%EV)'K[:2rTMuu-#H/M7G,u:JcC$2B-;gs$ceO;Ec]>b`"/s&,3;oKIP%1bP$cUB_>ANOW%ntq7UmDRNh1'9@:*PqoF;1PY"1(UiU
%Oj11V>&i$/!&;_'dQoPjOD/)5rI'X;[=(tD_FC>3eu#>&\sGD=or(@Z,Du#)P<]IS7VFD\Lf8h%#6Kq[h=WfnRjo-:red;+(WPHD
%=XFI<XT[>h6HXOdLet0u"'T_B3)GQP<"LM*j,(ZNE;b@u!`M@mj#7Sh*^]Z71>3T<H)\#BT`+M/itA1]j"?^QcM,bD"Ecug.44:B
%RKd7eonI&+3>CBbRrq6Y3V^Kk=u*9ua:K:f_6l1'rS\8M4"QY5Q!mM]mIBM875E0>U-<UCeu;0Src9"lf)d$onf<E9Y4GMf)@0pJ
%Ks3AFKT02A?;fr)=]a,7ga,S<?7.(5e>?g!kn3ta'j];0dank4;YM,ppYIb;Z4oSihcqJ7.U*%ih/[<8O:*q0!'bJ4?>+]LQ[C^W
%%6X%"+R>@8NXf1T>9Sk:=3u<NlAcpEVbp8rARMSP7fc'M5es4#Nul6)0ih>ceE@,=TbWbu8l(C-le-?rl:jbQSJkXc-LN.&AJVZ>
%rI=VL6oR5)r%si")lij&:d]c@6>`B!T&J.W5qge_,:mC-S^PkNZ4sXl[7f$j#[L:hbs.^h+(s*3Je=\'YBd1>3GHhJ8jTYOY62_(
%moGX-K[Nc3a5N+c,prdt*lV*c"<^f)Iqf[qPYRm,4Ub?5,=K[:"X+u&me#dQ\3(7\!10$4Z=!7A:mlO(lt@(Fcop70X2#k*lQ6Ts
%","O$PL)F+42oqN<1eBa&%?HIW%8'R;W*,fb_I:RV,)![Cb^1kOG3f`:o:heHDiS9;-f[GXsuC2);ZJ]r?8Jj`ZhecGM-T3pU*uL
%aN<[Q+BZQ;F*'FO3)=PtU6p!pm0QcI,]l[S#nbAp]eG:aX@Z&$W;8V)$8_lS*C8(h:]`+</k-/Gm<)ur)MQNQ0OQ%&kpLC,5tYmh
%7S*SJjm(Jb,2DCnpUp/cD%pQqVcIM-g3$QngY75Ck)Jo7:R]9[LO6>q$;^G?DpRta%`PNCP'%jb11Yn935/+ir!#F\\o/C-g$P/2
%Ieh8Aes1c2Q=J/&eK\`fV3,H\\cOocBL;27K,]@'c.BNhb,G+W_k.UsO.X*BQf>XVP1Cd1^7eY%PCc2aTs[+%15$+ukZK9PTNl]d
%\*$6<7TiQFd,E@j0IB,)@N(#F-:j'WY%NrM5_7'$dGfr23Aapao<b;,pos.d?FZ&F7liRP\G2J8,W1lPau=Z/CCKnsDuB=<%_aAT
%@\lCCGJk%I\S:>CnQkXIS(a<m8aj8<Rs_[r@m9Uu&>r:C'_.'M\On:YE*c?U5jDVNnXW#P6i''&^u!tNZ^Rtc,k]Tl6S<:V$.i1;
%oqe?Ob/X@\0;YMbQL0<+J^ac9*T+T9f%%QRV,>hm8o?sUEHlO%)1M3]n?Jl1d#aa>H"=UWh,>MWr6=H_g6+X[mkf,HSmZa&D2g-H
%f>DnK`WjrB8e_XZK;5!uSHJ_e:ER3%e?8^-HsU>:+gms-q3b`X383IcNNKOi;#-&H^)bbOfoGuiT`#s!R^a;6p3lC,6ZKTHLjY+h
%@FdBS6%$G%nOSI'(&9rJ$G/g/Rq-qb<hZ\4@QVK"ViaD.PnN)l5Pi_BH<-0<Gaf*T/0=2f[=,^ZVG(4Z+)GUg*-Qaa:3fYeD?%a]
%j9.of#&olO#!K?5+<=u^`J^T4^63PmJgf1==eSlVB_OJenX;JYmj#Zd573pPUjHnc!\.)"No<qnB29$IF,pVZ\Q"q_]h6g9$J/^O
%&J)el;%?2oi4]uFNQ_G/kB6<d@<<V!PtJ&]/:_US`0,S&k+#5\rqbgB+2XfsXdPLa$Xmj#dO?rm%N!-uV:G#j]om1:6?LQH`2>-m
%E_PEg=,eX>QXdDSIXn"\,CH^@nLddpbDDg!@u$cd"!6C'G4OkV\-blN4'O.-5q_6"2st\A%M^CeVq1@O4IfjAVhfka?;8dH7V-6-
%h_&uo<CSr;<am4//o'2j__%,U1mQP)3jZaE)Nt"c.d]&OW@NL<1t*kLq\[[/K+-c2]4Z3rp)3c5@;)bl;jF)DdH0DP!gHu^FQO[o
%PW"7$n/U3TRRld!QhNTM?@,1-B$D?VOu<]MP8"=2;(.qd1_d5L"JM5=18^:)5^hO&A5p=#enV^t#,=+h0D*2^c9lHCd<!n$Bt7d;
%D(L:^c#_>\CqAjn!L'h2BrZ*La[9J@>&S'@M4NKcLO"cX-=G#oS'jM%6(nO*j9t3G(>nfOREIgba9X%:dLT$:riSdXet0-k9656Z
%O'PCC]]-3VM@LT5F58mVH`op-*egc[!,,4_r;+Q7B^GABe9Q_r`nijU?!]:^B-"H$CH_EEj#Vb:HJ^ck(J-/f<(3[,`sf@r/HK:t
%_aY'L8"GWr;pW15/l*2$JMu[Y=iG1=dR6ci96s:dbZ0*//k>jOqCeMjC0_qJ>rd5rb2W6ZB5aEM0I^Af=XE8&PY4AdmX=JR?<uEs
%]%l@@8'8YoG;_Tb&2\gEXOUskb47Y]>uHlb_G1.:RFVbZ9)aCS5`PT$IF:qV+id^?E6B=6qbTP`crngseV8p`qtuFPr#9nF83-KD
%$l:I+[-YG`l!H/o_nOHo[7ptiPjbq$Smm4dH,o-mT&olTE@_X*IQX:,USqK8>L2_?c]Z)uc^'Ok:/^n"f.Eda+<r.!@DF.<G'/'M
%%1T.:2;:Pg!Du^&!OMP/+YVG50i_[OTW<)HPp[0lp*j>ub:r^^%@hQ_'J!<9^l.3U>J2kF^#HG0eJ)!U(4H65;)>pJ"2VTkX8m(X
%Ui^0p`"JP*%eLog*h]p4VgU%;PPnVki*aZLknCG+,#gjmH[rEZnsA7*m`k"gK>BrnjQe*!bE/VFBT@S)$?sra(U-aYp%Ts8'&!sl
%L'g^:ITqb,HplkgH;-UbP]m;MD/n:o9X2=ADMr6fDZ+P5e8Tq+=$SRg*\ZBHn'VDC.7`cIX,V+bS%b`rnee;B"Ik%ZakL.'bZ&mA
%d/=8r8Wh!t]f;I[.i.S]pd%u#MjUN<ZJW>G\7MI2EQ"JF7@>]r.M+F['qqoJ!=!4<S4"iHK.-P.!M-[S60@_O;NNn4&hbjan$;b>
%#rE!S\RiuE><O$:+UWnkB6?0bY9??Z5o`t=Ej2Z2DW/6hBnO]Kp3ps<FPCBtj;Yi3c-DOMTqg;l1KX@JMFE'7BmZQB'n/'p>L\""
%J&lnA00I9\@N)@GHf8BI>?@HA?k5RO\#*[c^DCK@7&"uUnq#c5F/!Jj=b0.gQcX1#nObKO`g[=k+nLj=SQ%TTNA;XMr`76C/j9]'
%MTA?=]d"4A%G;ZTj[QEgZg2C0"-2uUU'rkurqIkgBKpunp8f8,;>q<c9RdE*;?!3%g2l.ia_!s0PDE8bE^7Hf`t45G2\X;YH1s?`
%#5=Rg7(e!1@V+N'(ZBAQ<8,X<IZD2L)5H+rBI/(53Ouq>Pk'qiZ+)TUXgAD83WC9R\8RU+Q3UX@:V6QMS6pUL(nDq/^Wbe$RP^)/
%kppOucWU+^((i-jD:Ug;3^RLQo,s`nTNMW?;'`^!*$;Y:PU@\+U1pqtM*JYp"qP/2\[o@@mU'W#O5IKqUe6jP**MNU)U,Jg[jfSA
%JapQIU+=JXED&,MQT+1Zh,Gb%=9[t6XPeAY1B@iN'Q]_(F1m-cZBZL^DGqi0n?t,1'n)?aRor22;GXLFLjTT[K[2_0%LiY5<=ZFA
%@BO^Y,hLWX?&jH6"c/nW;rJQoQl.HD05cE=2MdOdQE_TWQS7D>%or4(eFJV9UXD9q'Fd(hng`\D](a8&BBQaq*OM96pdkRAcI&lt
%FB3?g`dIjn4g4gsg"%eJSo1o2)_arj#D_dc;YjAqPb)@f`-C(D=,>!&Euq%P>g1r20Qd.0qA/^DbB_EI0^gF;$)?VRM0\>H+F&nU
%7?:D!b#Q^oTm?"m]02m)/9effgUE_V>f<N@he4jeo=YUB1N!BbN]CZ]l!bBX9C5.Xd5p?$Z`[E'8jLgCk6o\iF_Gp.rKc)NFOla@
%m+7[(c,U"se*:%V<C'cb[njQEa/7YT3hF64j^_5*qOH;dJK.n,$k.G69B9'o=8d<t:IN1(W8(#r`+Dk9DrF"LMP2oPi^CG%K=Hpi
%[pn[tL"n)uR<rqdJNgaeNg$*!cF1Z7V!/3f9):f`]+,OtrZrK)!X7eR>X`i`jN)B1Z*mU8"BdLS<r-9JG*_XKB*ApL$8+^+V`Y!\
%A<!uIH=An5]^6an11<(r\[VB>"2E(EDp9hAN/=s1V-"M:R;I@kM0H<n0s27NH,kih(_3XfZB5%B*\^V=Z\)tYA$JONi@QYIEem:q
%!)S"6gY%$VAFM=l_>0U",n$;l^8]`gP2O4CZ72:I(ZMfaHh:=igsM82<!3J'<%CKc/Jmg]'ltY#CaM@&T$=e>@5T5i*P$.Nn;N#q
%JnS!6N(7S71LE4JPS-f4>.f#VgC3;gcd?W#'3*#GmpW;gAd`;Zgl*GCJHp7\d29^WbmIuB/?A/Y0P2D1RX\HP^\Ni*U"[\=eEV53
%:n2A7R5!.*UXnRl)<1n<olFqNMRdiW/e:.`'K<en>^I4?c!0Aa&N`@A5i?^(q1?XMfUc1-g5UW2meQKt_!2VsR!P'Nqn-=(,J0\s
%<SkC[D5WnO!MMMG+h\:7L(q(f<kXt*NrFU@_jM[rbZZo3MrI=b::GtThtf-<[p>ktF]pd14D$P=CA?!%r8+D;E0hZ]+"!RD$Z,No
%[5FOFZG^V`1b4Ihf'2D+9!/8bD)^KO3Xf+)BRo"L[U@]WedlmhK8DK]6'dD'Ps^R2rgqKK$Jhh6*"\m1IIu*mF^M#nQG65d@MrP@
%BF^,IGf!Ff2p^\f5TXDX4u7KmbYpM6mHO(<#tf:KXQ:[_oiJ,j.(ok@nS'YV4E's5accQYclMSaX!T#Z+qO:n5)Pam[nN'HqquBK
%qjSB3NMEtC_Bm;.Q;F1k87.oC0^hpeb-"SZ1@u,==Z4s,KFmPH&g;feD$k=!-S+3/(:!3H`Xn(a)@a\pb0T$NA_uUP\[-1f\Nd\)
%?)==@QfSk*@US]QeYoo&ZTRhD6BDP.5hKe50>h0+hg>`gLu+HsiMshN(=THkc"A6I<bg"ZGYZtp33V#m32@0QK7(^FR6lr!,4W<^
%gJd0O]$*A#o/[JimuNb/f4k2s_N!p,]7smh=uQ6fCS2(^F'nJP\jq7<8)"+]rDopiAJ^r*G+mTK:,C%6[Fqr$b5%tfG$7&bqa7]V
%VRmD@`N:[-/].\LbJccV9/qm%Dh0e#o-$ZE>@?E4bj+/ZAL@p"6'ggt`C=,,:_)3D;sID6-&MJIC)hsjQHU_H8lXM+$^t-\""-t(
%D::d35S^?C+OL+-7+hL^)O`;kO5_M6"5Sj`ogU;HcG4]79DfHs4$RMh/!c:YGQdEf")/:jY=mlaSlG_G11r]7\U=qZ77*AW`O"nM
%<WbSu"J@g2d#TNJoi^CH,kmXi^on19iUHrQRtQ?#kZt:U=WmYdQXh/,0AMYAJ-:c^X\+#Rn8Oa0*FOXe!albO?Db14q"SLK"DOtj
%Nn(+Li*^a/OC3=qB9GXW6KJKX"L'ji=0i!a3"S*r/s:Fo#D7VP'HMa(4i]FNfl`F-MQCV:j9N2V^/>J:eu6=(1NI@o>,6qZ5Tg*E
%AKj[?`7Ls5!tYT1r:G2Os([/<BgDuTIL--4^T+$[:L%+91%j;RB9lMt9mnu)P+i1h@P!'5/_q3ML>F!tbIR-+`ENS,<Hg&9N*.h2
%qPD$.GdN?FjA&bs>1E>sis)ClO@^XcMj8CY5(,.Fo&=7pqAH1Dfpl]"q7u9CLZ4QR1U;12%)L?$/nQTi@@#ijSG,c(qIeIj-B\Ia
%5N,hm8NX)K?u9R$gND0b$2q&3"E3`qS72b$l%%=GS5E(qQuH9p?$"UQ7kfHXW-I[CY^S_F@s#CKW7YB:^4Q]N!:7@hEs.ohG)$-f
%r3iJFa7.=E5T7=S<s]6m_3sZ\DR((;G.]dhn,)_h>WlALF%"Fe#&MQ^9P-q&gjCHj>E$QiK++8Prh_3!!@%B;'Z+Na5"JW?n^"^O
%=mI4..b%^.8DD0ZN#&<aH*)&9cV%^R4X_3[FIqUn(;`S7DZdP-[j4Ko#CJK@[!rpg@>_fVH,ZN.cla45(N/rAdHDic>#"PN)P:1>
%TQI?N/TWucm$a,W!ZjYin+1$T"MEqhcleJ(@BiF[IPS,);JMNT$8*p[6NEjcNP+rY/u6$]+l</$5V?p=];TOsoVRD`%/o>TWY>tq
%F7-3.l?Y]^B,66H]l%p_?4`:2g@o`@(N^WOZTtm;@4!;d0&idt^\6397]9>PgNJ]F,G]#:;)0+/S4o]i/3Cl'Fo"-"5]6f=g>GL<
%E4OZD;BWkb]di7EA(UEio]pTqUD"fSIDR(hl>MG(M[3=#%*kXE"[TrR^n)G?g"@?"7cNZ4N5#J#L+D$&,@^mCQGnSIIe[!S^47p8
%l*<eBW5fagcF8_MqHs\),+EX3aXusa/H5Qm>YkS;8`H\jG[GmX@.DrBIW/$T.Rp=-=/3!69!_+<HssLgbm8'9WRiF2,p:A:X&&fK
%`A`dDkuM3+"t%l9^?j&F's3Ng63Tt(?])'Pl5m@kHOQoKR!5+sV4+rY,i",=H"rL#$d)0\VaL'<Xk"k/?+S$6Oin$klXDZUVB28W
%N.@Fu#7l$iB32Jn-S%^D>!5La)0`TQX/f!NjJ9":hb5CC?jSc9IaBgde(&Xb_9am-.U!=dH2!ma):Sf.g[T9S+F]d#eF^kYh2<uH
%e8n:f@1-(A'-R#*57E;@iN4Tl'>Z\QqkPUcrBaWAo_ufQ2A*06oV$'1)"n*CO3`I#;IU;.[@0n+7OmdO^V2V'.iV1EU?\4/d[#IN
%1]8FG7KU]nO.,$#BhiMCYL0KX_rnplX,Von@Yd2,V]OVeAALu_Gs4LeCYLct(CNX@V;#fI^.7,/jflsE#E0-I@+3O?\jl?&(HIo\
%-AiQ0n!gCu';XrCm"B;Qa[1(FfbnDISl7(L"M<cPM9u9t]5*VhFHS2"WC_bToa.V#hs-U?4ZEPT^C+'W+ADal[i]KUckTi7k31qY
%RpbnNILrM9O<2-X<TIs_Y\WLLFu?8@69WlL:lBb`ZJ=J($rD(D4>O;S]>6hEOs%YJD%[U3N[K8cCO9Fd_$(MR8k]4To'e=WGABf%
%9?1bNM(@8&ZS2o?f(H)u]":H&@Yi9W]bYocf3`=f]r\->NTU!IJF-GuDrfrJh.6i=`0k)%:WY+SoF(SCX?0(][oK8Ud3NS#4JK_p
%nLYm4K#"2?iqMWeqe7e!j>dt2rh[aHjWNR1f;mgJe-M?ZSkL]a=&,(T@^1QZ#M4!),uWl0("s8b=#*_Z3Y*EeJS_XB5_Y,D4_;J4
%YZZSa.o$rZ=tTt*$iWFBN&08+PY.n>G8!Q+.Euk?q'nA>4@RI^;oHb`$ZMPM'-@FAH\-TiD!P/h<Am1c(=[BZrfib2R(?P[&_.=]
%_Z0gjp+5EXqGfp+L&@VLjikH?E2ZYB,>/(+/ncu\QZg2a\?d6HbjW-egJHF_6maB`IM/-V=!=V2^GS^kQs-ctbi[=[6'<`8,I#0f
%?\'.)=WHg'e'Pde.a[RBim>\4+Ju]J<M"coRGiH0[+&He5Hs,Q.,;@Si&NPk5/APh4p+e`i":isfD\sMKc;-B*MIGjk(un%+:TP9
%icg<&gn1`kBRj;c1<<L8_60_>l`AD<i3l_LUA#rfdhOsUN$MX#22I3o2_i)&m4lVKi*P\]T0jX6F88fK1X<JP/')+oeoin1m(*nH
%"3\/Wga)4\65UP:PM<'(YpR'EG#Irt]_*9$]DNSW\Oo2!2$,q]q5h+QfA7gIoUCo8rIpuu>K&26'u5bMQ,P`JrB?ht.[0:WMf=h?
%'lf"N21+J`fe,o+ap"W%Riq1tL#>1$7>1mK0&/eV:%+5&"WuIf,%+BjL%5i)77["*Wqqe33)dRa7+N$6d!2DbEjVkT'X7Mn@>4OZ
%\M0EOGNg5jhmHFeJnoa5NpH+sH]885kOjFo0^kEXDu)E_7e)Sgr&WrZ"*Wh)Dssd?5sJD&I<Y!j]ZPJ6-s/?LP;Y-Z[O)s1+*C^\
%K26S21@>b0qea9P[+/d^7.j$38l0l$5=L7OXf5Qr#9aiOdm@)\T#m\1,\GaP0.-3bKQt]*5W>qKPC7Rc/X;-0:q_:9j]R>DmIA3#
%GJ@!9%DO*GKOp?D`<s7peR]0bAC#"684]a//=QD]4R>8eCsT-?"<2+D6<gWjh$U,tXAgq^PpXD8Q=tB*F+?H_/SR1J24a8Ja6;'m
%*2PAc'c@UPpRuHUDokt]Af-Qb@&i4?KZ%r>N:XSEWU-S7F6b$m-Ifu:`_0F/ZPB=hYQh+F&-EN";-LWZM"4ugTEE(FHY8)(0"QF[
%?PaSW(C'pDA+LW`LO//]Kq1)egW:*&e+$ZS#Q3ct9*.;O[$@L$i2qo\d#(bc(S`_-q3I2neo>=>qI;A+E't:@MGeZ91^X8OfldhT
%b\G+m2Xkq?bFC6:.-_MV?6>S$cJQb&hG?+`l4_mu-pVaC:Hr@#&^^X%8j]N_gMHKs`$h:5=J@_[9*lO;1\>850n2l`<_nas^tV]b
%LS)70%GY(+E`cmIpQ+`TlF#J/ON@;OKt:A#+bZanEB,YdTV-.?+uc1/U,i($W"T-8LlTZY!`_Z!TXSZ8OZY>rL9YPl8:O9rX:5rZ
%l:cg:`>4PIEknBe>?a1X)1[I;*2>6Wd=/Q!*ic2t):23aQEiTY8+!lh9GrI5+Wf/R9uTOAKLQ_S"#m"`eY[uX7Mc,2!E[:3*i<=T
%1aak?X5AMDcQP#K4eACN,c"+a2O$*kMioLuE=g4a8/#"(<QHQr670Je9"h*9CSqE1L[ESV`=ILh40HR/gK;dW\emDCBV&+p;_MEd
%]4hI"IS=p<ep/%AX^#G3o<ko)N/;I(4Wfj0Y0Qbn,Ms5a"[6pFs'4?[21,9a)f(goCmau77aQD/f;L\`XjOK,ca/3ujZ`hnj$0WH
%.L;&)22i>/ODCTQHh?XiC.#;N%A7]a/Zt3&Fg"YT^jR6[]DL!\\soXDk=#L6R!4@S%)#h-A,'`N^!o(sd+1ueZ:/hVHY5PNe^.pA
%]l!!dULF%;+00b!\0PnK^!=i-`_E,'0^W>)2l_*Q?6*>?9JJhHa)<sIU/%PpY&Xs6JdG8oa'I*T1aG^"SJ?9t/;GAMmCW)Y7*"Qi
%\5A#8CUDGUo)4O=UXLt-<j5bu=fjFaQ]Ppe&F!XVp-f_5QSH$p#gKr(B2hBKH6>]//EoROD_)P#'hV7HppM1]2b,BOF=>4L!%F6K
%+p=E3J@6(u)srj8S$\HZeejSBS3,KAn#X]T$GEda5ZY(`cV!7+B]n#dAe$ONjP4d>bu7[lH-kUrXQ@D(AO(UE\tn)*:;!oJ_%*9-
%!HNQ0?:QM1*0]]rgWE[V.fti=Y%O#GKeJ2/`YQcb$G3='FS'0'$\/o/<U@%V%U<%%5!$#<,,F;6/h[SYL]Xm$GVP)sU)s-gNIH_^
%r&hnSfpB771'q*sX5UCfeV;o2B4Tkobj4j.Dfk:IGs:0h9oN.=Y=<?X)^cZsW"?H9\m9I.i(Z,9AlC!(7NJF\Ht2Skb&r3"op'U`
%AAE>$c">.oN:Sm,F&UHf@7jI!(%1P4>MYk@R%]B)+*Q9Ifb'L4C/(#=MAT1"IP^?p5E2?lQY`YpJ1p5AoLIU;4t0T!$U+Btn#'-(
%ptjRRONo+$Yq_Q6\5GDDitSf`?+oFA2.*q/g_Z6;X';oZH[<1Q`FXY8!]6ADAljhSN9h[44-4@G"+i1Pr=&Bf#&')"k9:f0.aV`;
%pS*pV$]rR5;#/.0.*5o3,qK-MeDcUK'WKsLo3g3OYZNmi/T05m(?4`7.8nL/?iaGFpQXWj1i;mNfG.HS]LP-l%YK`7W%?NrMnhoR
%0j$!,#->%oT;W`E!O2OdKHJK)V:"LQiK?9Zeu&CT40C^>,Ro&]kfVlo`hMMj%-r"YS$SR7Z\m,H%#,-ZTf(RqL`_]*2-K&t3d39f
%EGTs5R^gPI)8L',[-tZm7ACB[L]`emGYs-9)$Fl%<J8>;Nj:@%>?j__6&'e"TpPoB>nIec7e>V9j:7*f!at]V^P5hgr;C2+l-Jeg
%E$XEcrtLjZE.r,)qd$*M&Tk,t80c$DPqu=Pr%%[$:t5t\s0DY5)8:MbdV;([IQR!FSBQXr[*C%(@3$<S8P+c1%$DpRp3nQ9gSdO[
%omK$j^2:BOAM(]0)U#R)QQ;lPD+caW]Frr%?FV7#JfVS[I%FY]e-j,XA*jmY%m.qV/q@NE!M&tm%VD8:'m_85[;:hA7[=Jj>WPCS
%QIn%N+KoK0FJuGgaPUV!O5F.!Kc7a5hITk3#=D?M[QB4o'U78MRI]oIA<f#3T#.ikc8]uF@0L-oSW588`K;gsC`cY2H7NBai1b9)
%&a\a`m3.aUp+7=c:SeI;TXQI/7)JZc=Oo4)>_q%7pW`#u0TW>l!"-[U>T*O-l;Jc<!\pj_3m+N3mGW?g4nI<9Yh%AaB9#"^?MjoC
%ds-c2[-#?[>oZC^Y9/7bM;NUrd+WJ,^<_^[ph,/$#2^g2*a#o4X1ciLNaRER5O!<p7O-%0V*+/XUs0)r=%F,KkX4G6+?97S*$6t(
%950l?L588@N4s[->m(YF?*9fjLde@PNAK#gdaCa->fKa>![>gj0^=VRUjW^>8?s01D7r#9F<=T07(gN"'j00)(9u2i?gBbi,,rg1
%Pk@'*BWTT")HDuAZM`+P?bTCp3bVrRgTotDjc_r\4F`p=hg?!^JZZ8=oT=V1>g$Iq@0\\HO>$&T)'UH7rSajFV*ZC_`85HfD:iI4
%QrJTCQ:-O""t$HWVC!`M,FL:tpE7Em7@34I5.IdGj<SM6of'71Hj%*`5N=?_Ro_fj01uB3nEP?;3En6@9*ppSN_+#.Z)+>2.ms\A
%:KPkEO95Ehl1/cn_m7\Xle1[:+uE.Kp)1-][7b@CqJ(cVnTZ`>RBVJ8ZW!!d^q-_e1X7ess#PYE25>^7#n![9.ohO3*_A.&Ac2A:
%/I\="3*_)s0aK6(\ommgiq_sapqoaGmG^fU4ko8dn0^1^nIc0Yg*htj8'pe:\U(e0!IAENh<7Ui#92^:b+Lf>8rB)h*A00]ajXa8
%RO?Q=J[@=APa);G%gC;5gWeG;GE![c%HOjJ(nXb#@qK[V+imlr=[.0-pm>Z3(u4Y5di)s"TQ%h2TLNfZj[`%EO=+g6H+B$X"XWPi
%oFuI"N+RKPn#fe)F#/<sjTt[)k(!!5K/9fL*"agV%Q)@)5b%@,3m0Ju<D&Wjq_BLglSBe]H/hqH3)n2/"^H,nnk@2C"oS)n$%>cm
%.T!HtF%f@Yi>_VA-ZYH'4FOuHDZB#QJNV$d>FOT"'&hI(TO6+cDbtF`f>5Ij[@sE-bIW`$Emu@[Z@-#)adR^r@]pdF=#$L^JWBS]
%V)&N<pV"b/1UK@G1+0h\c54S?D*GiarmTe#q]8P7Ns9&K)8p=Z?HPl[emNdUJD>&<V7tFj8Rf"h',^)kQGjOd6SuDCYC=ZRMo7eJ
%Z'K%j9.G3qZOu5kc[6hH(1lBGfpu3P"=nFt$[C:sWMX&'nA'3=_k/g.68(BLDH?6C*q%nYo34%k8]`>jPF$Fc*a;C54tt:iLJP*%
%4[qI/kcM`7&Hqd5orQFO8m$pM`pJ.3U<BR9J"+X=]Mr9LS9<V(XV>G8C"!]iIZS*u$7)F)[G<a`(hd)lWho;sDHis'MB]-aM#Z.K
%R6#M*p=H2q`T\@!C@B!C<M[cE&0saN^fCKT?rTg*>%blS\.r&"d%&TbYq3DfV_-uZe^i"?/o]OYE?1(bnu]3BfJdjcASX<>]!e]Z
%[CVi0DcVq-;G1HlVe$jmE]Yu:A<gc9A9:#:lH[#@X=UTbg<at[IlS^fbi%rT95(!SP/)Bb.;U=K`OD571@SUWoW3@WYhS5+IO1jI
%OKjj]hiL3Ab6X2e'Cf0S5(d6me!t,VdJ@HV=aISNh1;-'ksm<m)La)D*cqbd\\?d;@bH%CT)<0AGid'qDidqa0oi\QVWC1r+->Sq
%.Lu$@rqn=&KXFK>F/i!E/:Ppm/2-2.[B((I%c:g92jV]"!P2?U&_9CSR:#rth0<&KWmRp[Fer]X@j/J#)YUKaeP!R2><h`5N>;.l
%r%dfWp"]A8;hu-5lk!bjbIpNt+lso='LYrN':)2-HN<>X/)M5,91!I_([L66Zu%T9!,[0nm.m#,2lUMA2H!X3o,,+991_FVJ>kuJ
%=TN@R"`QO[V@h)MiU0C.lA=Z4enH60]&qL80CD7qZan.gO>IbM0;9F?8l?o9)I)!P1E_&HC"nn%(B]9c1*-04H?><^!pC4"nj46b
%$JH_!7`dJ85jNm!Jp(n0%ol3J.7=nS&`_d)C;tS<Y":L'-n?&V$_<4cKNOQDF9-#brT_,`A21mrfi,f?8_p,TI.Gg?'hX$P8E3Bo
%-gMA;+l;@\P\WVUBTS#&\V]Gr$^rN/6H==Rd#:m#6BQNAMQ!rkff(c&K@J>"1/)SHmq*F^T_!KRQ@$:gIr2AB^VA+glD6*[$j2K<
%[599*4.m?loXLC:ZL6cm`73:fO`>+;l5NX#;B,bD..M/tAPA1Uc3+G2]>`d6W'mtA9dC3Yh5hZeC],q5eiiHe;]'V`;5c@%dL!B$
%Qse/OE^5:bg0,;^1WPuu550HgQV"8EF;K]ilH;kRe"mcJc;m0S*@_WSNqOJ-fI_R3?sPKPIGRmId6eQNHe)154-M)i6AdYlo9hhJ
%"BEE%I\!o/Wkc%.YM4e&<339m8'kH2eCU6rUOF&WK,tpK]^CSdP'IXS[eEjiFAgFos&e@e*8-9Rk#\L3E*&_]6=`Z/]4+hcHH_4A
%Jq[@+'5L#sdUs"`'04(0AWBS\Yo+g^JMgWq*DVp/)T*/JJUH;9YrJp\1hgSlI<\h%dWMb6S"=`,SS6K)HoE,R7s9;?c#bE?RR;-R
%79N,oWa0ito2R,KYs4uDkp,d[bp7sG'D$K^rZn%:.j+AnQk]>51sq'h5M3D<=F!i+P5k:H\fZeJlnU,L,bq$\$#&Z>Z\cne>W.UY
%+?J@g17*NkOOc0q+I^\4]h7E^ERi"`*p>VrRVAhBIR__^dgLU3D3"t$_4TgqRP!ek3HNqK?ne9LH33LgBBJd[PDnP"*^+prYd9*U
%HPh*)BWeJHD<BHs:C>Rg+*r,+A;;1\Kk.?h#=9Gr`'heur47?WJ.8[;mbUY;Xtqb7C^#,fXK;57GJ;M$eN4RZKC[_Y9ehrlQ21Oc
%0g^'jR\Rqg%:8LapJd8)6E;.Rq2Tcp>;%:DR@mu%gp^s_Bt&XKXA*BBG/h&\NTV#08Z'eYT-8*SJ;mI!\?FV#OgQQ3Htm(4m8fE0
%Vor`^Dh+Z>M7>L6+!#",d\Q,cCRU;$Ps5$oW;%S2X\%76Og^6Le"/2K0c4&fE.k8ma(W-rJ5:qjKK!D&NZ%J/e<N!CXJQJ@eTh5%
%5dsqW]Zts?QT_ciR:-*q.%7a>(<P68!-KhWT%rb8Vm?6e?6?o!rP8>#GM$]SmWi,Ee9+NigVY=6B6A6pC)<q>qL_;*=W3NmC\e-[
%F/dYINZj-IOG@\3?!DQe;P,5qdgt&./KGHBCK+H9HIId7^R]:lG$1hRl-n.g;<Q'^eI-'@"d,jcln)/0o%M_``HAU*2!u]WdFi;;
%*ib_4U$5d2ZtT_(hQX^Ia"'gcpIk6"AogD8\W>j.0?)L2MH2mPDSGQad=c%l@M;ur*[@mlL&kH=d%!FTk''UdYu&VG]HmEF0rp44
%=VgX)-1pl@741']"dhg]$um$1Wq7l1KBpVpC,L</%>2,1\-_ECdh'##"&O<Qe`0INOXj&dE^ph86fBT?lAj_GAO;nmC1PV"$("en
%X<SJ9P2\H$12i%KLhP1H!Gjg2;2aDN3'#`81M_847l:6":R1<V-6o24nhnnNoFK98mu=U,/_$li.M([%\eYpkP^Y!\e*g`F-'>\.
%OI]PVFro0eleZksVDT6h"ir9QL-P<DX!-OI^oD+LV!oVC_X=F'<+&<%_@KEk7STu.%!K*,fYc4;?[LBseo9D*Bh#EcY8cc`lFP%K
%QQhku<otO1msZ;VP&@BAT)L25RaTK4g5F4"mS`QB4kn3i/)?/P:m'L1f__YJ<hP28<j,$[=/^;&Y_N,0h.2YU5!="6%9'bKg0Ff-
%@Tp)[k>S37/N1MjHrYPk"[T-@8%;m^SF.UNju`a@V;JfVF=kP(mbl^XWSLlMJ`B'6/8$I:$oqcLk=9u@5q8u(P]9hbG0O<\*bbp(
%ANe3B_B)I9a`T2p_i=GFbSH6O[nApiMAYRr5*jG>]&kS$,_RG1)IiT?bs1!q+B#'=\hUME;9`UFF$JsGR,*2%3BkClePQHgLW_M0
%qZ9T-*0s8M!1^F:Bp,cd&EJTr%X(<O!ufQmRs0PC5G/"%r.@#r5ehs\='jECSY<,D(&Mfrh)b/8)jBPZ+t[f6_I=4b]B^eu`#1gO
%P<o4>jp1O'en=Q>"emfMbAn-S`d#[+ApL+2FN-0"=a`.5NGX$Kla'-5oP,ZFWA!R2,^arn13M"ap,IQ6p0t<cP?-+F4HC,+fM_sO
%#:$n_/LT&9KK4`uqjaZR3u7%ho:jFtP_cF7dFr(,LQ!/&7ro^/hsMH_9lb$BiUrpIC*5[V_n*7#dJ\8sZB.&^fp?;q8RTdd'qW=H
%E>]DSr9.aAfL*2eqtAe8/C2E-bAnEV5<?"Vc)D@p0m&r4nikc$bL*NQ*J1$-&3A[nh!<FUG6TOT''SRMc(&!&]TV>YM3d0cAJ=m7
%DEa'2<"8!$&&%;Ec?A&Q6,Gj:,=9Xk7\KlmU8LQ1dh"Xh*f/?(EDY1QCMS*qC,.>aY:WAO#t_LPDM,)50(>!;%%A"iN<V`!%>aq/
%^C_I1Y8bqZ8C*FC(g<Fu*X*Jr)Q1NC5-p]J.VZ(+J+i8G'>63JSBsC%>%jcC"JAc&&9cT&BNB,(WT#"77s,#EAiS>3F!Q(@W2@Tc
%q+4YDIlLjB[hROA,m'Y3[<#.B2JEA+l-:3bA)@'W'0<s1\S<8$UnB?)G64JbdR"f"f&/5+R*[t7q%(H-,2F'HBY`Z[9g^2cAriGT
%I^1*&5>LGDr*<3@rYggh]5gHC(p!b\7X+)2.rSDEr7kne$m6=61<[.6(3,rfFN<oA6lSq'^I^EsBRcIS,FuR*)</CYYF-LJg1?4J
%YKj5t#:X?mbk>dIfYN,gT&7?T^0,:M6hWHte[:i)[T53gnYZm-%3Mkn;f)AABd06TpFm:Jk#kJeSO^SO(lrY3d%EfTai'j4m&?1h
%b9H4aO&c8qs0JgS:\Sa/NGm@,^.4D'0+K:W"KQ3RV"f0i=Fa-dn=r2HfV#nA=uMc>eZ\br7(g`eQ/1.H'LDB0E[d&2rV2MV%c@##
%1M<n(h7,PZMFb/>2r;#V-ir!$dtUAs<UJ/>rH[J<KgCI#PT20?d!t>s8-qL/;<J!E>maD3M'4_SZ<IL,A2Yq0>a:UX?%[[?cR(jJ
%9Sj467GI_g@t3"H^?Y3"\.G=hD(drU;52+`f'`'f>('lkg"9I9cYtEkJN(.$Oq*F!K3aT7OD*Lkd/Beie\pVgL%[I!2lBtCV'.5>
%`rt(C#\]`@(sH/A$k;\6F7iflm*G%/=*e&E*>oGbDD18eY$lErD4K-o0*<mGL,=1Mnnts74VXC`jkq%qiVC.R4Nm(.iRp<576s?F
%8k>3n&Zap#Sc8Z<p*Rn)j%.Y_<j[E/!s4$kSC?8I`ju-645L+C;H`^Bqois&Y$C$2$%bE!*Zk8QJ:'b5M<`$8MQ3+_+9iE\Fk&5$
%]Ao^r%A%`&[a"TWL8DhO\!IE(c`8\1ZbD4Nls'YK[0Wr$/e85TpUBALF]<eb2lA\\IdHj<r0lc8ZNB\P[U7LbpaXXUSg-&ifcA/d
%NOnn,1K"Mjl&/o[N]M1N$28ZN#?<5BRm#%jgc>:u'j4t6jV2gmf`gb;GC?kRVE:3sinMu&1ug19pRPq%"7rusgS9LlRk:;7O(9F)
%mp(tl^tee_dCmN#V5UF</^d.shR,:NJEgW4j69/o\/\F\I<N+]C[u-aTZ=T(ZDL>3L4Pc=o"rV4hTLUMdnAmG0.4/FpN>%iYN>#:
%Ab`6#*upfV=O(sX:HHb37<_Hr%^.d<.TS"[=dsat41SDgTROoHQ+C$kCo@*SZeR03%EPm07Df,\Y68sJ_/bk7.--,\JeuF6TA`)X
%o&"F7H&W"eB&%:T-.iZ\SQWF<"?'A3pRATZ+Q9_81,eOd6O(*)6Kd#[Y4i22TBNSfbFA2&=XQH_c[:'<qjj3t^L'*#i;1S,h`K$Z
%he%1fEiKLU^*U3QHF#t)@"!&D8*mqWBC!>rb9^9TcEQJl]'EA*Qr#$-Me&imA+MI0b/^XpVX5Ed*HCO!DFA9d[8BC(([:$!mG&I9
%f4;c5W"h,AI#=RYXHpj`*AV5aOOg&tq=<[[j'gtg8EA+`KJC[/9FJe;?YoKRif<?JeEK-"#(#uS2n-3f3#FHo4hoa&EUj_.?Jfn>
%>0,EG62cKd+X5g:I--<gdeBc6X'Tng]I]f?LAI63"^C6-]9V].Ob-ML/^U8R%*lMb1V5_l0\+qq=cqiRbPB[SQ3r@7a$.((T&p"V
%.iI-Ie`R,n&:M_b\"b1]?'BMR3?WC.NJ;Km%Lnu`?Gkd9VaEbJRMumQ%SRlnfr63J5&f^kkpI3u73!`bCe&RA'Y_TWB1$6\7n>[D
%!A_),q5\+H`Jn=bd=@r-6s>+s7ak2Oj*;Umg.?7nPO8p9&+@7#r6#FZ6LiSOouq:FY^%=a@V]hg<!LhmA__.;#/2IO01$g-p&;)g
%k$57H!S=I7gIJKG%+Dk0%aE-6f-/0#md']g'CFu_U^?:5M4]>c(H3M.;3[#Z?3cjcPmnYp[3\[LJ]X]6,NC1#8D_S?DOR?q8[En$
%4D$8Ccoh'iS(X[&"06qA1%J?\@Gd12(cdN@[;;a&r'_*"V.)`L?4Mg)XOm#V2@&YA-RbJ^<WmfKX!A,PmGAnj.,d+Tim`t[1o*'-
%R/:Hp<N*h1nm?RdK%<T)Y;'C#It+kTb2^*oHX=SfXJ10gXtE/?(G_>bc,f\C48nc_gQ+DRKWjn*+1V:5nQq1C3^ec`/\N'f2m[*b
%TQbdk+&._UQ`-a`RW6bKC27*-8u%&rikrNiHG=TqRO<ZMQi=NWm9c_Xd&4;'0t+cWFt2a2WmstI`3?Qtd:@^T]?X*TqX@q!ff4g"
%[?AIN"0J&X?&2e\$dN8sCXdcRa'ClOW(ekl0E&!krGalA(--KuFR.W5bp)7Ip@"@>Xc!Ac-hfY^]-6J#m\@BomX!]m5,2=t)UO[$
%A>)m:cHbf8T""K4b_L02.g,ugIPi5'UI\[]:".c)GS_MSrH6C=AA4,k3^X'-?<H6r>1-m(f9(/[Xa][?pFG"ZW-V."%HkR34oAI1
%NpnMPo9!,NW9%L*)YYqU]7'[i6S&beerX$5X%F'`mc">`>U$_JSln4Wmj<)!,N#c,hSC\=l;]\7j'JkP2.W`KiP/^a2_Q#h\"BB6
%,8U'`cnt-BV<a/<cKT.]jA;Xs:m$;ZJ$Z<g[Y$C2>Is,1D!(#Ji%Ec*PMfmcm/dHHZkSq'(i%brUs:fHeFU=RZE`:7#?fMbe?"qC
%om_sNH2B9Bpj#b9[Q_^!L2;rpZ!o4cGct1@Ar$>+"mo,s07$Zb0D=!\7N#S)FY-"HaYB6.4>t;q?LhR'@e5U,?mua*5n^JnQc8sc
%)m#TQ'li^"n+BoN7S'0`>oC@EWj7GZUL`jJl754ZF#r?G0<,I"Kl-(LVV'7a.E=_l#G>+cf>IpZr/SJtJ3B.?\Wk:s/"(T"WW[0C
%06;AR@poU.haoou`K,oA@_u34G,P.5A!VV]Suu<R=/A_h`AeHXhR1VqqrT6%[sW@GF-@NlEZd+PNS`cAA3,Zt8"I4&s72="_+LF5
%<j*qA8GaHEKNOk^/jHW0Tbr2I]p5]6a#qskh[E!n2iW5-2jO;9F[ktR6TLRlk/0-];d0<kN/ZQWG)O)+Vd_KrSZgR%/%F(YfSUZc
%oWa<;#FSX2Q.S1\J'D+NMS8J(9:?)=J*A0!H<*-*lZF:TP+#=,nqp__o/Z4)mKbU;h^i'er\hW`o=;(?4,-)AX^h,'U3Fn'7E+/=
%'c,Wsk$f&>96GT%h5HCmr\BIOcY$VrXY)kGQf'A+F=(G($6?U$:oJ*l,P^HFq;-<+8*5!8p*ND7gjV)?o<b\q*u=:eOfl.-g@WXk
%(h@iNi4dil]2Nn?kS9bce<MUI'7SLFVh@mI!-?K93-2Db1`sKB7=Su&"0>pS34[;f+0eG1?#t"Gap"/sYYQ.%c8!?mdh<_blh@r2
%]O*e%k1D<D8o4fm:,WhW3l$YJ5=ujT/-A+CW/(<?=c7?N5:;Rn+8\/rVr:JCTZ3`_edE%,6,1+_Dk8f'HDXjM[jTG)<%Mt4Kc95`
%b\16^`Iq/m.5FZo`3VX][Al7keU4K.K1/:?*;qp%[aMm63c6$;hfVtp>cupiA'!K(\%HkMrW8(7cE@Al.CN-OZSn`3%MuM2EE$e.
%D7HPt_'h2V.F7q"$CakL6lD;r5q)S7GIWMG7M<"Fk%$nUG'V%SXL#sJo@mdFcZim%l0ba#U3<iGg6fQ'0":P!KfZu^f^H4a'P/mm
%'8HJCKpL!2hjkI\_0$\d]4(uK<bWtgR\[So8uI'E%]+;\T`]a=2[bT=lK>>E&ml6CoS5r!G6M9:c@t59%X1MX0#of7p%Yrg<DDC$
%m]2@r#30si)S8fFB\2g*p(gZqG7a@E?mn\Qh9.G0$$#3`NoQG>U[7rmNa@-'YsqN88HW/1dA[W@!4=fh/[L>@U`M9_Q,/B(,Xm$D
%KMDt.7;ID(>HP*eCp+*<f&XOiS<j!6N;1u#l@76.F<.3=rs6&#GOs3N=f>aCEcoUodVa[>Jgu"WG2)\hVcn$`\Z=<lMMpL#6s'6W
%4b#c<nms-o&4-0>L:\<P(8?<m/Bj3p82TWfrP\S!arCaGDj311L+c[m&?!IqaG>D,MS5G(/=&(p;(36<FioK7jU08!75Y;nXS)aZ
%'WqKoVQ9>*eKh?F5\?%SMMndnq+'TX"l@?&Z`;u9I%,#n-o:JkP/X./ZrPM[]u9j@+Pch4M_7Xr!OE(H+j+FAjX\*'7p.DW8`.Dr
%O/NgJZQ$XHjqN-enoZk0L6s*tL*kZ80bHWuO4igo<omQ,qmLaAN_Q8n+*uS?$YTdogIZFWN[0`.VoqsB0f%NL!mf,0P^M<F@7.-<
%9rWj.q)&T"So9(;7C.X-g7e<`b-Prb((8Qj[n2j56R[uT7LKiBlM^8VnGXPNb.N#U8<q>\B6ED=o;Z*VV_AAD%Lm)ZRta*FgolFY
%R0_Y51J4Qf=k#^8Kp(&h&0*;8*'IE?N)\gA.D\cSIFY[+]BV/N"9Qr/qSB6<5-7#fBo+10$\c.&$F;Fu/*O.cI/#1nqCOJYY%\"H
%"*3XN''_1Rg6>qEZjW?"NIrbV5%&9R5U=,;QB6cNg(3V=h(o&9Q(6/@ra6\&&Mu3?BH_2TZ"?1)\P-9%C(k*G];O&9l8]c/2sVok
%#enrbp\Jm!)rJGBd`)_Q/=Eb@]$iid4nQ(m0)m?S.4hnHo0"/;N3Ar/I,BpKZq/*JKj*i(i:cB9@i[:s@UF*ldH"fJorlB:9gbq)
%=r09"KN!D=;3!nHJe6Q),"?7_!YQcFPI1p(\%#F5#F%@j&N\S8&h_&gpP6i<US,*faGJ9C6YCQ[f2omPk+m2ebDkrRgks?DFX^!9
%8:<E-Bqpt2""IJpTF@O@$CrElkQ@q>R6ZPJ3JKuo@*[pias%.<8:%X;qd]Y&Y%2chZE#E-dp7gEfu.12LWi;m>HAjQA"Yt?#9De1
%3VS!AYb2r?jo3uQs/C(KK+/WU^]$TlKij+d4V.MHatQuEe`dRT#pZ3=_6e*K+5=lc+Eg##7bt.ERh[ltg@Ml"R2C`STlU?p2Z1:u
%qaN8/48]eVWi,>7jM4,qNRJ;]Q9+64H>Tmde'mZil?Me02'.47XgNprCSt!bnk^:$<g;0XiAQGJ&.-^n%*N7;=/_F]"V%24Mu#_4
%D:'3X^<r]^`74e[3)!;le)ij+?<fAI7e3Z.E5-3)Ik(\\+f%(FMjBA.qAc\a0\9;ial*c$bJt;bSKle7/m3`@82Z7D"K7_WERK,)
%PXH0XaS$R@()rdA^90m>-QT%0_9K9[9k^*nQKV4n7T-3dX&5FhU]BBd*Dp!#7iR!1rN#f7$HZ[YA)fSjEekupjh+ep'_Q6^"+Z+R
%aCMK^3k!^*5uF/p;L':aQ,mXg7ae!;iiIDWQ/LQte>Zq"O5O/)0MF61=,nAcZWNg#X1MNsU^?+U?L2BZm.%#oV+7V5a]h-'eT`'W
%<\7-BmHtS[N*<R;Oo]smk1MgIS?7]oW*,ue6l!_sP-uui`E:g_Jnn2Lq]ZYY21/&b18/=Z.>p'"(^(cpTc@$cCqE?76j9YM>Gt`l
%bG6U)JWBCU1W6<r)Z?AZs!*sTl:F>eCq,GL[K+ZSlFUs(\FmYE^oV>g.`ipa21"ZCC`n84Gk51MOOj>.kI+Tl:s4qOrDbhLUEdbN
%=VasVDZph@0=rc*lDguT>Gg!&6hFDh[@Okj]u72?fO43JE'J3h#,pZ8OH*O'EgD_L><pkVUa>Z";(7s<PURY7U_0;(7L`e@Aac5A
%1c"G<S#eQLTa;*(%.<u]?utEYZnr.hrJlS,9>jL#QC#-_pQ)rOb$YJSe@E9%<VOt=k'sd(DRR]Q+TJ%p"mch-ej8)]*_)TkCp.gE
%\29Z=Cr('"osJ.JJ0gZfok$.pY;,E#-+L>K%%mkFlW)^*S^>$L:qfuQp+bkW<3VM[6+O6`i\df.cU(T+j_GA\DB4&(is.'F6f;'_
%>(`k<+*_aI`X-eQDH:O_ZOGYK_RCgeQN%P*L/mBZmgc%X;<ZC=/nks6-#[[oOeNYs$KuX1#Wm1mpY]?nc/1pHkTrs1mGC.27j-Mm
%,Tu]iRu,F]PTj"<Q0f^2YWmq"O+%T]6=&-ZK)Vul!^^cHTf)C`r5`SkA$]1eP3\%_f)3gY5X;n0k%jd4Y20A=`943"`fUW1"eK't
%nVL-9KD2$>.!eU\%-0.=j`[m1Te7RIb[->F9iQiIf`h=[`Ypt(Q>j<r@<W]L\ZX?g+LUg=PlY`%UYKIlViDQePVs@VF!*er50:^=
%C.+reLYLYWjoYi$_H*`PP/s<lZ7GQdfS&&rB8P3F\(&1B4Jsg9gf"T!h*sUZ:*e\?D]Q<rgOOCV115cW40b!?VgU@;KYsLqbKpFg
%6*F0n0\`8NlaWWe6"d42$DADB\!u?eY7F4D\Oa6LG1.#-4cpDR?pEDPaDM'eW[;kgG:_/'1d'/F^886sCGL]`\nUm&[4efD2d7/5
%0f+H9'f20;a(KBLk:W\>b7eD*)R\5+VN1fD3`c(==/J+gf$D^1Fg!4FI1l;^[%CZAh`fX[k!HU0qhqri/I55bA3tF^+;?ZihmmO6
%ThV)(Njn6-o@-Xt%I4_3BY1%?LNSVshT]T)93%5#\7l=TieJaV5J>cg=dTKXIi/<c&"f9#GQ"-"4b0B\Nh7!dOsN&U&'f):*HT^m
%8"s=gJpI&=<rNdMl)lS#'+YkeKVqihR;(3$*lhh,8WB9e$9@LHQaS,LY\+E<S,M_S;t_/UW'`MQ,h7##c.Y4YqqZ%h12sfm@sHOL
%D3?W>7-Um(_df]]%M06_2E]&\'cPX%BU6FMd!;77ZUJ]GFY3hU&V)t3(1iLbAM!Uuqj)BYVJkX`MD7Au^W2'"^5<RXW.RC*FA&#.
%akcW;7th&dU\&R5.9SH[Sgu%*D+uhl5mW1,aS(?s9,.^-\"(X&VDlP;M[XtkB.#P-\J62>E;DP)k@f!:OdEgP!GRqa]D:&&As?N)
%fR$N*f8#n&mUqWh;mRm:5qP=fC$neb=hu"(<\E,Ylf.$af\R]23d37TBNoN.'[d,)mCfc1T'g1'X/pIA.$TDWn#bDnhot7HoWB*#
%I_uko)M2"fZmmQr]$EOi#\gp,:-^iQH_X]m_beGD,I'94Q21_7F%Uo^eY7cK3r552G7Jr39`c1\*2tipn:MIMUF)dB@s)Yo1t5as
%Z_<2U$i.jAr-?hbYqClKfMMlT67e]_6*Qq&?*8QTjrQ@?>Soel_R`,chgeOWk^A4T/IH2?MuuJ+bZ/eDY3[2FLmi#?"PCbQ\4fnS
%n0\#`Zj(lu.j6/c&`_c/@O,.n-Ym,FHPL4F9D@VZ5>*>X:/q"SjV$a1UDbZ5NpGboO-K2GT^3"H%@(fCEXP15VDQ'FK2N?pNgnoO
%f8)kD5L58`ij<[_Vr)'9^WcJ@QpmBiLkUbP>jor!fZJfsJ=^YNSU)eho@\eEOdPkp1_^7T'6PEgre_hqO4rbImO@]>_#6Ti;s"C9
%YHTm"EP!S<j&D]2=GKK5--b=E:0XQR\CO;V_=7kSS+30>b:"i,[JHWNQg@cJQYkf;2Q#_*HIdBcLk@L*XL^)N;1[&T`33gs<BPLV
%%Du?!Fm`:LT+\5CX@3%_^!OcBj<XTo)QRDe*p[,Ao1]$H5bhA]g"`f>Z%\t1B\mn^%F?B:FDT2OW'3?AK3c2&GZUjYQ!*K#,=jHk
%8$)=&NIT%GX4=t`$Y7"#>fe!5F<-]!l"aAQs,%Z>Z9S)4VEd\QGL+i[.'/V<9D)V'c/9@-9o#%D1+tFu^A#GX/P%t2_R96Ndr55k
%_"h63&ibZYY-I:9<nfZVpYuGBo::oQj0e/4]!;]H@KtVkmr\Cs@um#j?["&l<*$;*Z4/Va*BOULI2KIaiS410[QZ]5e,!"fH3fKg
%?^e1Sg,n?%;(93HfoEAHq9T_]Ih$Y[6gemCl*D8]A[ng$0@.\Y$as?FpQAHVG>7t#aq\P*<.ShL(b>ATr^\M=3^\fP`eO:qE9Cft
%0ddWWmdu0$.<-b)l]OCn>P"s*q;*gJZHl.jL<WJ(5=F0TZ^*AjjQj'n85S==h(S$Q!f(:85c$RL[*=qUYLO_g5c9]6.gq^b"B8p6
%FhUG5Xi<db@mI/d.P6f\p3u^j]%$_`;l[k,9!"HRnQ3qq:tc]3Y2*S<CZcYrGJ[BH*XXroA14D7"jga<5Vte3(@jL\q>8pqhTTRA
%6]r$JeoZ+1M*VE;0hd2?H=4$/8GJ:^+"PPT\R(4$ptRd:mPn`(P6KVCol:8gFVokppY2k.WXfLMMt2!l<.];*9aSL8d6eJnn)aNm
%WM)r_A#T.p`b"d'YjM%2n]Qi-]7"[3Ai[[:8Oa"?6p[Be*qC0(IR!X#7;CMn^-(*4,cg9LVuJC3Y>K&^lDSgN`H<FX7<IuN<m.WO
%`+$Vu+L?MKf,#TB3='mUI)a>jm;US)75n;qMge.!>B]!13LE>NOu.iZ4!*T3NC,1o`1&O*Ba=@Wb=;p)'ul);5j9,lCr[2fFp[8<
%4j6P6/h@LSa*V!2=!T<PboGpf^@l3KRt[G>+g*^s.dE-+b?agj--p6c,'`[mG;jTXn6=M&P-j%W-U`rDV50E)%$1FN@CVZflUh=u
%?T,BkbW4XW`c2P!khZe%%V@U!aWX!`0j6kcL&RBBo]V^W6%2=O$7Aj<qO1IX:F=fAn*e`Jb^<Gd"d/JmNI!@QFP5m^epUo'<PgS>
%Q)5PaK'"bfUH]A!"ZpERLin`j#^!;aH/GR=_/e1oG!u2Rh<1PECkoa@E3^?!UDIDJTj-'T<#D2IZ>;B/aZflMq]lqr?ZX`B(L;PW
%f8@F`g\]%Mp!)?oM[D+$Q+C1C+/\rJUAY!%F5"*P/p/d\<e=`*fRF_FNSnE[S)geuEn0F*%c_]=)'Y3kY9$n2FHtZ#1>./(Z%%4<
%ru8N_IFcFUlKh(g`TtT`BAYC.VG^iX9L1HSops\@.)(`sCT[/;<DjB74'uq/Fk0(='IfM=12b'n&TSIlGkeQL9g\&D<j8!&41hH7
%EE?gV*HMQultn6%aQ'tGerL)\AVF(J9GPE/E`5n;#q2H_$&?VHJUJ/"f/rXt.3'c8U(\A-Q-/ombsO:%M>umm>%V=hR,e;(CO#LP
%lhA0,So7ms(c.$5I-mAKqZ'-_T4udj8RN:dDq4SUAjeAg,*/H#dk!Ehm[%8S&9V`O62V_q1_YffHk$#?72*8eDZ;gf7CmiZd),4K
%^j)*0Q!%0Pj*cAn'RK6!e1^uY]#39u'N%]"eRu"+76ZSMgo=ouUEng-hSpCd=sAmS?&#.?isMDBY"+6KRtOgCKSutd"P2&G<roBI
%=,#S8FK(AB*0,_i"ah_.]1"jXkBm0a<J,#\kt0`tRkC`0Jo<5qF7+p78n@^ag/*Xm\<#?OnMK@&=%/1J">=`\)D@u#4dUoao;+f;
%S?\mFW!G8YP(r!ZqTF'QR_nJG/@X-WJMt=>6DKj-WLct'WT-eJZaL0DI<[Va=fW.]>)g*[]O*l.9A2[%[m`XO08ff4;<XAGF/:QD
%XmuUfDA\+!Ea=!6#K(nS7H-#4dP00qXQUqc@)'BZRHo@9dr2?=OZpH,'j.MHessi^T#qDL1Bon</cL%ib?<IOL=,.*cZ,-F80a9o
%P[PLbb+.r]d0bkTU8?Hl>1&>rb2Z[2<G9Th_7oiu23.u/O>Stpqg!4#MW(4T0BaTIXh'X@_oDh,Wq<6[/1DWhmq:6p=P)i7k4<k:
%4Z=+P\^X0=94a>&1N#C6L.)9*=/ATkWO*/+!r$O"ik*_k1M$iHJ!P/c)$(!.C00,0XI&\fT=J#aU%>ocp58hCN;2O8MMnL07r4j`
%h<g(HIV9dpYJp2p:."i]p:PeoN!Z=M@9uq$OE4$)1]d,%7T7`U#^"!&Drm-]-.!D\e$>hC`K]KX[\5r)<A\N@ZsAmqm\6h92S0>k
%?\_'7n(?/3RL5?RY!dI#hY$EHFj*]GQ-sQt+.9P*<G;7bZHZ"O'#Un\\b)a2h@Q1D('T?lVkIA?Dm/;mc!$?R%nGn5&,s&cb-I/t
%<fW4l7n1SZ`Jq>?JX@`R%,i`&'TkE)LjRXN#;dnLG&:6,NB2h7'U>g43\kL=W!M8%[\$]D=riu1OjZ&oFQG6KkE@A_`(]O,bXD^&
%@.[^[osRSSqD.ZML`W`8Vrapch##&UXGXlr_&Tk?30+X5D'/</Qlao!pZSXt_iQD5p":3V<o3Opa1b[O*8;u:.L+#mQ+r[)#Q32#
%rT8Am<?_qR65+i1CagYeWo"d2>$0eU0R`'ZM:E$jZd3]P<L'LJi@3[ZAe?,&[1\88*5rpY:.d';.oZ5>48BIW2OaO)C\B3,D*D;*
%Bb^rCm=+.a9HFDqBI^o?V*`>,Cs++hVkQ)Fe2oa5b,!b8o^^VV@A22F9)#+)VYtO%-d0BLo5<YRE`V$32$d./II-&O<NL5b?f.lb
%<C,"b0$hcYs%]P)i:TNcF]SNiVr):A0\G0UL8?@/=U=.%4C?M$WV2GSOb.bN@;4`:4]KrJfMepMcWtZ3B,@tYTD*mgF\!X$?_,1L
%$YE=.oM(.+^(YkckfnmGA!F:hoP1K\e$h=_>l*/,1X`l[O$.&.RZFPLB[3>n,Y02WrIUW"Yp!f/?#8.emZ8X*UF-P+U4^iCLco=K
%(0VO<-XVF3;\4=<C/nu(X9_VoYB%:_(Qe>5n@D#qJ-1NYF+dlpECQ44Yu-S"Pk0W&hKCmobWPol3Us5peGl=Rp,6ajJ+UP4LXs1t
%*o7+;$j+cm/0P(#REr+<71#Z(-K+u:KFI(Ca;e$^+Gj,nfKo33@;qn+\4ER)!ICD,%Y!gHh#Zs]cpY.!Y;=#5-^n\^?^tmJReA7N
%F_2MB#&4M74;<b@_5>2B8@!XWTKUi#!3!88J^/=Z+PdSq0Ps$e@JI$f=L)U[gne16d)Htb5b*EJgE!\=r\Z#o!6snukCm.c]?M-!
%.+h+]&7hF'>b?B;c`MBPoO%s(ohQ:Z0;)_+,pAH@%P6LAcu<U\^`.!g:fB4^)\K3`)d?.:]P=)R]*C`@;*l;P$4u+4#P&qslQcXo
%M2%MAo2pu^M#(V'P+i;*@eo'o%DCn#\MP?>3ZK4E[AtWUj12-S!-DW_!0e&h+N.qL-Oj4MJ>0gSQ0fE)N76e<=>AP4Q&-Z_P8+(2
%=_WW"a&iLB=Fe.M";?AT`m>8RAM&/IPe]M+=TeiQQ?kJ5lE(&DX'+,P"T51CNR[1ds0s3r5mj"Km,Lh8TNo)*%PM)&337dYGBa6>
%0[8eE:Al4b$$-HE>FMWU(8BPM]:"A.CPmluaA9ct(bG^2HIVEq\S)IF,`cH:LHTjZd(m@"L_:jQ,6TcZ*XGZ%!U\S^E@SR.!1bWg
%<>Nj\9&BkrkQ&Q(q2[3ES6?s<A+ZGg6le3(1H_;3LlLeH;)Kp,\6,NKS)\jj7]u3pn[G/S?-nrsrlL>_l3)2ji5b9;S-VAW")Lpg
%+nVP68\osm20pN'K+^N=N5itu3,(kZdI*r/%d<JnS8C3@U_9gH*'g=_fjU="dKf&Nr?M0qi?N7Q'n?)8?0H+V#;WI_8?"ICn442h
%XMTe*cFV%c>6QEL9[ZcnKogG+8D"Ftc,G%ZmI!HijkL\N\)LCL?$6cYfLZ+jaQ?QZKo+9kDi+=KGG5+'i-##1`FKuRs/GeqNl^jk
%6u9&cTr*r=HOVI;i:%-<0Qp%]AXPWQFuV0]`O80h3iS=5]PEtFE9%o#e3)NVEX%<Uk8#"gnHjO3*.9sY\pSKZ`or2s+b3I.%Hp-$
%*PIg663]J1&8H>eO.+!8<TSDZTe(n'OjZhVh#XeS&,_.K?Yc_:3jnEj1cV=720jmL'\SX[^5&o7![ldn'8GKsAt"4UI'BIi;Gn[K
%>n6o=C&c\nFH;++Aj_kO@HLB1c9WUVTbnTgFM<sD)U]j=='*+q:r?>b-QIQi5TN=)9A8D:ij1!+6ALMd:=a7P8%Ti^8p4=GfFDI^
%]fYn9@doJ,*59&&F4ih+j.D8;-tDGD/qtfs'_@eXOR6Ko*2U@_hg5oDUD=rj9H_Ye<g`#l8N?mK]j6h;r(q;2H5%bmnl+`J]gHX^
%lI6ifAi(uSBj@iJhi_1[g$eQ60YGr$BeFAU)eK&F>1/PPVSgr1m10a4TZ8mlO'87FQLkOJ&/.e2m35/0Q"YU&gYK;dSYdKghQsrk
%caTibV=ii79>=V$f"=m4W*cP]mJ+XFH6k-Y&'\db8("[6&13=GV24+s7E11pY$Q1*@duREg/Fn]0Xb&]TsWM]qW>#T#ci;CF/f8*
%Y-G[V*:c_[Vq%Y>dOA0JCT!W[&f,1eqRB]!%$ImfZ)bT"V!*j5J*'7t_U8muJ=J4]_A3Kbc$hQne-#R,Y\M6l>D,*>U(e(/50Nd*
%VUM,fJi-[o-VrQ*9jbt'f++>ok:1t2CP.BJ2JEnIerDm5_*oq.7A>#ZHGqY%g8<2m$A/tj"`9Hg;,1oe#&E5GARh(k`m:+([&r(&
%95kVqlJ+u0%p?,EgYeCjr3-]7mS3A@D6#ZuHabO@FeFsjs2uhPp4u`a(UB+g)?t:>KXXS^&'uVjJqGcE)YACN)k-+_,Ft-1c#?(E
%/iQ\:GT13\"JtJOT>r$"qj\!0@;hiB*M%oMXKpFe;'+hVB.57mdU,Y;d'#Dtpi%<TrShC%Y`o@mYqm`7$CJo1itCD<gg7_<mVV_C
%bP-Be^s:[/Agab5PbST*[9GW_d=T?1+W.Mm=l2t#:d?sEn,`0g6MDG70pb&TL;hPRUhk;pF5b<$&2XX,$3VBZoS4;?^'pJ<&j9`l
%M2#q!lu/N?=m3HY2r@)63i(kU3T^l_Q')4c!^P[6R)-1bDis8g&?^'LG$*3aQJLZ#'!SX3F9ak6AkWg2e`?$W5er*rKSCZd;[%;-
%[qA,Bc5r^\NN7lS;G'd[ef=)@^JNbSP/k6m`MEpj)uuCZU$eroBgSU7Gg\,uYDLO3/7+[f!<&oo\FRd+-n(Wjf:b_[Ts9u@JC?T.
%e:J(dlV%P4;"HL#0<,-WBF2NG<J=Ho&7CPiDb#^k?pr,2"Z9&Io7=)-+(]M,MB;XL)";g!i94In%QVes'ab!^EbJlMKh/@n9`Nh`
%ZnRIt"RWcM"NJ$&mn,ZR]4/5SH)Ei+G"J>pB0Nb4o,GJdDp+b5FG<qfRY:8\k/07,oA9C]7['[^'_TkCLNPZDP>C'CqfgPZhp'bY
%ZcK_^Egr+A4-^-lh;FiQbC5aCOdG`.ar-]j"-k`MFX>\fL!Ehq9rRjG#6a[J9fp@eL`S9-+_8Ks6'VpW0gE-d"ORbO88S+R"3sR6
%O=:_u\i`%a/AncD2EjgL!=&/s?@$j,q9n=BnO;,Ao-6T4`r"iM8c&nWHHk^r6FjMt%-G#)4i.uBGC5O+g+jI32STF6ZlWeTAmO!I
%Z.t6cWSpdN<nBok:Z'AGFKqkc:mP*[s/OU\/n,.Bn?b39U"n:m[1*liPlT4:bNO,_41)<G-5#H0gmpAl%PFCVhNR#6p`U.^`lV#R
%WY63HO_U$$FaY>R[j$jq(O,-Fp;MIgfTc\'YS>P^J8N<1gOPAU'?%&FK[O":$/&R7CgF)sW8iIJ=0RtB)%[?*+`-YDCgULlg>HD'
%=Pb.,G\P8sqG4S*XrEYsY0gS,@]'Y<BKD?p?K9j#f[+>d1teieJf=ipI'X?iO32F`%a`(YQWpo]Sjo\8?>/p`ZJp]W=o&Vj5tXG8
%'laMJe"JVRTL+"C*EaZ&VgE#1J8UHCL^?qYei2eAN4Mo5:Is=-A"oGB"*r&t**?!\S]NWq*B/_CPKnnir&+%4.&0=;*ERq*@1Rto
%1qL@ph[lrCV@-jYW)23INIh^'hV#pdMb?:].ene1,q4R0[Tl;/5gsbYA?AC1UP=k90U_n)ou-6^%uRO/gLr7k02^Fu5[b`LatC@G
%7XiLMVC@=YKZ^Ub(Ctm.)601c2co3Rffq61$>g6RCn/CnBUK9^!UJL.pl:E^ceTiWSFUdB'g#Ye*lI0$0qRu`,E6l,"$?'k?1uF[
%>uhO;ZsR&B3?fBi",h?FkE`575d&cI.,<qK6/=]E,$JnB.btL:1>TC:_[5KfWKT&alt'XV!KQJi6L$T5,Dm1o,98[LL5e-G\pK*T
%b.I)hUap1\U^nJb58f_`oEPndSm-lNAi;O_^H'$ImW#p$F7^C8[BIjq9_ngb7]GE;W`C98BiR$9o!qgs("*Wc0(6(%#*moMUV^l\
%$D.d<5_H1u'I]_M"K):o'F3,7oohA?=:PYk<qE@;Di7K%4<CD>7Ru5;T@nEKJoJ$X/_$:9p1Kp;58Ai;hn^g-[:7_uLD9^LH9X(0
%GSE+a)XeK'm0`c#Ha-Br8b([-"Z%"LrA8k,`BqVI1$m^"3XinaO5ZHnEE(K%o%fE^Nqi"D:P8f1%LT\DGILF17ukueoh)fhfrdP6
%\t)$/Af\t4e:bKHis)c7"(DiC?^'"aUu1T!OHV-IE)06SBWbp>&h.bAV>@ha2S7EDD-jWK5;6iK^Qf6JkiM4IN\":dg5!H)8ZG!j
%FD%_#ID.E6C9:P6>(tY6ZW>MUchgO3B%9)?Ud8)]KHE=/r/"`'2+b5^/X.C@oW#h0]h6kb+o4]&]Ss;a1Nl=VE5NHi6<uGDS)MaA
%km,<O"fQ3bo9jVj3JFrF0R%@<LG:?geOttq/FbT&,*/'GAdh#Np1i&g#aQ@)oG0Eum:%u2e.N0i,jT.GV18eJF3>)JEP:03=(1_'
%N9PbqpSE6Wg$LURmVFQD-a?OC]lFZ4D+NE(GK_U;\dJ40#t#dgML8i]M"".)O:7Ia*`StI0DgIPTCm*"2X[D_cZhh+^2h@jM(fo/
%R'B)[VX59?AWDNYgpiJF?S%XmD"%0*:\2dor*32'B57.]gmV,np)T(Q@Oq09NYSc8<-?SUbZ9HC;rl5&VU@\]D-XDfZdTj'Uao-]
%`K/ki1q)gB2=<^X.`<LoqRibb2;c1t2`"9aDV>u"OI_nqegHNcVd@m":<Pd">s@aE'pr_(/Rq08L7E'Ublh(90/5lSp^THrY(Tj[
%9p^!QNR:r.*r(el4*3'8'[[Wt@YFH_J[#+)\P$Nb1g-2kir3Vi;_F;F'eOB@$+&r`VbJZqWcWaL>D?-2?30;*!(rIF:fGkOOlhM?
%YtOo6iJ5+tmC-s=m>7,?G*aRFTFNmD,p_8cJtUs3@`+4Z!ka6\,)h0HEQ_pZe2A^:B@_W>oFpoFV42p=#Bd;tg/2e$^WX'^^7,=p
%6pPa8SQ`%a(L<qnUBV-"!QnI%KaHj]6;mlu>+_ab?3'jXXleL%=@6TZ%sKpuj!G!AmJBU(E=r(]or)[&^tHp:3INq*14"B4f?K[#
%Z72e(-\nEnGl@4CZmp)6/K3jq*N]B;gOuCZY)c2Q3=^JqMIip_Acd\SKaoL,3If'WKag2je4q(;[[3Z)3]'=WL=VsB.!Dq>YTaQS
%OYVl3"IO_@\LXHl/dELKp'I%^)*Y9)OH?<KQg2YH6Hph`C<7!1ZmQQ1=g]LTe13(B@JuWKX?ob%&rlu>gZaGpd.C[)Bg9AIG*Y^G
%B6j4GXMTH+SE[]1a,0Z8kMKQjR(-L(97KO1-(]bCOYa\f=344]b=nILX:!*EpR%qt4A>.f@l_FnlFaYEc"X4T/O#$K]2d(Ie5<I<
%SI%SE]SJ8$b!M,<kHgFd;<1o%)%]J^&:>ITB*Rh915.H01.U"629_1EB=odC[Sam>;uVNdS^5X\O@p4/H[S%IV29g,FB"ilrGDLK
%XZ\@>Ohc#6Ok#pj.BXu/pn.$IcYqqC_KfhHT*$n(IiDC"(8#_SnN(t(#Fa>[;BAG!GMAlt+;X2&B],(%)reT.XESr8qc3uINr;Fq
%S?*"e)Ia*0X/*g*V_pJo9CDo\s-I*H<qG^`;Z^7^HYSfg=V2p5WRM^ji_emQ49Rc=qOmR5LZ)r&PmSmA1fli@1^M2>'pf.tbhWiL
%=]mnnAh=thH"3t!-Qm^i;u.A\(J8fLqt5@&Z9eJsI/LcT[RBp\nAJ6EXbat57mKpJTP7V<gK`83V$"X+Y]Mpm7Ot;^=!<ZpoBVEa
%HnbBXc?B:sRYTsh?;.Y:.ftZsX9A1/cS;'S0]:-3a%KQ<M<#mF_.0.VO>[om)P^>pm[=Z<fD2]hk5A3L,0er'P4ba&W4!sjGE8+?
%=fbtX3Fnf,RT>@p<-W(*$,)RTorq%[ai?laJpE\a(Fk`4OJ*d7o?r#RJ%aA#>r.k(DpC6N,]`o#])B0*dci1Xl4a;__#,%jDE*A7
%F)2Z)JaHD9E(]u3)s4)9U6W;,p_sQ$A#EEUV$tTRN&>=]@ad:QfIHJ\Q/'LnZ3nidXU8;"rXYNGq"maj*rui*(MDtVZW9XQ5q>dA
%HC70c9[[kT5jBX/3lgC4lkL]hj4%*B8_UnD1kG@VOm=t[j[sW;[!,Als-2?U.S%4R@[`AD.M`R.c73q)M>?W7qRuPJ-sGNiLnM'!
%e)l\RGIWthd9[m6h>K&TL')IX4ppID<c&]nd5Vm'T?=$KCC:a)RYG-Fe!VSEW_u(@?BgH(l2q2n(33VJZ2nTLfLYFW^5PPLgAMqt
%G?C9g]jFK+.8^*hCJu`,!.=?p0GD^?%ZF\?B,"VZEVS\>>SpRJD.r8Y.sfZAi_!q1jaq3h;/CfB-i)qcUX!O7Zer,o2sl)hEg%fb
%mIXZt1BWnZPn<;Y4U$sj&\LVi)^8/UE/q.Q$1[nGpuZ]+/*h=cA6;EXH9N&q)=M'=<H\ALe.JqF]`cl>lc&3_`K:5a*?K@Zld3_?
%o5W0FE`R#:jY+GHX7ul\bkNr'%#528o%R]Q$i0.F9XEl^4eL<LS#UJ:&*n'*Am'9t>7iE&[qj\dmu64CgQZlo;g_V<3XL]>XR>$i
%F+=.*?sqmP#ngCb\#U8X$>H^SL%t]RT'!>8nBY2-buS[])rc_oTo-UE*l#<mg0G-:<]YB\oA$*d.Z$('Q78,/rs_k_(#b4T]\5!3
%>`@SL+1T-Z\"$SEaaofPKb4,XHl]-3MK&"K42V&-2-aN=@8sscQi\:-!Fk6tUf3_H=gWo`&HdQid.YGaNn1kQmTg<OGMb-;-pk)j
%X[P2tOcEDVW($LJp>Z(Hf@%()<K?9fhK[)DH4+?6Nc)O-7)mu#;Hjn%s*h*-4DhNq6@'ZB=tpT$HuYmMbQKK\PWB`7OMPBW3U27s
%)#!!8`@B>7D"*ZjCh>J4K.C;RHhoN!"f&'`TnuHsQkEskR+@WGldjk3L]WgpMs`>d%7dkoIIO[;9Mfc:%$+p?+dDcR<d'q7@MV"@
%SW^qp>+q-C\rZ1A(_/ubP[W5[L)EbE;$-=9[;H0:_$qBu9UbR*CkZ.Te6ku%`0:op.$ViJU5I'pZu"]pb?*HQ))(jagM?ao]7p@K
%;d;)^T)U^Kd[hYC3>`d_"9#=o[uq-N!J2W>*Yk%NH]=hj.?W2^@'S]D+ii'ifD=Ui$del1,9kRM.4%me0tV03mbQIg4j.h:fZ7AT
%;Lr60OVQL:C9(d$1#H46p`GN\0H7fgfdpE"^g8CY7R:ZeM%k?1A*a+:X/Ee5j-8I&1ON7A,#[6^H8)1Yc&qtido8-QiNu\KB<N>%
%W=3@"Su%!p*Ca;.7UCjg&$L9rV2UD,a#_H)!l9@]Li6Rsr[1.@n>+#ACljV/SAY;n(C`M`Z-KU&LeCWU1ugAk@,"VT(D-IuiH=e[
%-7qX'["lB',naK0_PeB(+`pPJQN\(JEG`9@Y#>LQ$C[5V!30.1A'sYF+.QdP!-P>RhPdAO%CDAlj!YMn_"^>8"r.\!/o%BR8j>0I
%=2&LG`:sk'(aYk>gCt!p3h`N8EeC2)ZFLR-:n:aAFtu0;"uH&)2R_9E6<sWl#/(*jBIH>H_+Wh"I<^+l26P:Mi+7s;aTZNoJiEsn
%ju+cspuYDd1@&0O'VZS(m32h4'<imgR<k^'%Wd+;m<.dKp68E_6e-CRUkf1iTr,"<AndmY)tNO/jQJ?))Q0g'-<Tb.DZ%aQHXEVO
%D0.IEb+]md2J@Z_7!GM,;p]>e;t/;2\2EWIn6/Xm7<e!&8Rql?UmYLfER`KI^@WU1"hp;&P;\OmMOs,+5'M-8agI2KqnbCB6#XSk
%J=@oFkE:tNd9,bBGjjZ:I]uTG7pKsU9%qb">.>rC?TXd7V&pljK%FN0VCD"Z&afqA1kV(nl0&\I^'$8<J^!4K1oa`'[XqYnqcQ9@
%^o^7\c,"gYfM1l%iI\7nK]Ua8UN'TrZ&.Am(9m-Zj03=SXfcA&I;<pD0&@@%rJnN>hY8CZI.6A>oOWP,/F$Ho9Y]G\`gf;W<kr;0
%%6Y=Z&ce5o<]g)S+O]a%5'V2n\kMTH,(j4SARs(Fg<JTdbH9P\P(?=T?;Tm;1`!H([NG2[Fu9cg@lG@@]t)<%O1Z!.>[oEk#ia_!
%C,Oh(HF("P1)TI(9l+Xt>-Y^t7s,)lLG<Ua1aYQ]H_!;XJ5DQr1EI5nj;"%V^T99=\(!t4_GGiF!ZSPPki<;kZh*(I4^E0LE_TiO
%Q?0\%na9b^5WKC5omRr!<IgFWS;u5ZEgd,/iZ/<*8T1Un&HF+hDQ<.Amh;!p'6m?>"D"e*lV\4@&K0qVJn\(n9E84F#4T46Z,-FX
%H3UUlf!56Ls56#P'<AkZkt!cj'ME9@)N/n@e;;D"&hL"4J?4dKm;7>]%IO<B".'n0cWk8H2/YQ.;O]oe_ql1UD"X5>/&<1E=C*&6
%$k6O)X:`]n@,Bgs6<P;b)3cAC6+hOe9>_dM)[%>o=<Q?<0CFZq0>16PVkjc-007AI6oL:1=4n<:C."!Yn2u=;i.`!2lBr0(Vi>O%
%3&4?Z*?*NIIF?"qeV7hK]o>%^gHmbmIdQnjoKd:WN:GrJ<o+blCmH,UiJ\DbDUBVXh+*K>SiaA0b/[gHYQ"Vg;V`-/Qm%.5?pNGQ
%1"icRk`Z:RPc_J`o`l@N$.P('Cjp0E6;.inR&7b^0(\mMn-jD@^]F\F(aQlGZ/?9-UnrrE%^#:_pU[4@D>7@lOO\R.@tqrD"@7^m
%""kV6,R7sCoG`UJ?@O==-=8H2Xf--N$ujR]"1YL"I/@,U5J4jqUc]2P/s*SLaAQM6XOeNPi%`#B3HcCP\j;FHDXAG]+ug26$4lo[
%5T2,4pr94"Pl!msk31oMKIDA,4,8k0jq*VL%<3qV=2ekoj3Wgan\KKak2Zh;m<9[?HQIKO8th(!p4T859]t-'gUbIVFtV0JX7p9O
%#kI0#&Af1`Je/Jb'4"R.[8#^9RZ+q)X42`oC_<O%6GnKg)5<Q9[)?19HEq%2TbZ!9-JQ-q/AHYeARuLB:f$'cdXm=BageH[92LCS
%,qT;qJW8dK9;L/8*>W,IS'FbS>LVtG/Dki"G'Z8s0SG8YF`"r@U%8gl;;9plQd.Z[JO&um0^V%G3aSh9*XaN\F_p),$_Q'K+/\q(
%S^TA?nh7Uhl\_AHPtdm!V[.no>c=(LSLTNLgg_>NAM7NHYp6Smp8S*$lU"Z-3)D'G'A]ZU"M3sF2<_IXrb.0Ff-nG:5ml-LI%\$j
%I=i_PQU\:)W*en>fmmF>q<I1HQA'XpqL$&7,YGgV`XJ[]oftn+/[4F^H.>2.P5GE"nRJp-RGp:11"RH0:c0W(JbK@Dg9l9Hn6L7d
%gr`jcVGmVV?,"`Pq)>KCfePf#llY)?,+A"N>3*;*/eIO+!Yn[^[,)8>L[>dSddXLIgtt@amH9`6=M5l'm'WnIa5-uKp-^!k-jnB.
%l@)Q]b2ibbWafE0`4O14s#(drO8?\O@37N'R>!PQMdZt.-GX-S3d.bA>f@1M-'a5eg1n>-FA?G_?thI3406"eNR7Iq$pY&gZeO;B
%DOh)qHm="3T.^Dq&mq`&_n-*F$8]n1BAOt"HAQgta`<XW#hKjX3X)"oe7`(6SY(5qD)$>I!tT92?b7[8!]T]^\kPB`<[S)IR4E##
%XNI5'6DEg.n[V?sU%4nn4Bqu4Y&F@(nq#;b'Vq\F"js?blSOS;Q#L@6U)FaXFVdW_.7W/4`O_u(eC+(ZHGh-UJiKiY7'?LV\i:ui
%eKM!:G;>uS_BhbA`0<[d*i`0c)H+cZ6-8;e'"Dmb@&OZ8EG-`__K1I3&,sP[Qd7hef/n!clOX\!U8,3lRW[:.9aIgB48e*7aO*l,
%/'+bba(!VC^%e`AAOjY[XefK09Sd.8P93_-bNH02M8(A`i;fa>p]rJYZnQ4i5324K?s1&:c(TIX*[2Bi6W>>*_k;onQcWb<V6`bY
%qo*!3Q(^<5IC,`MpS$4i+%LG0m]OH4jKrYW@*kZTr3_7iS;45-AVhJTd3ZBiP8]>YFuI8-ggl`g%c^MP;]hH]FAMt1-")L7-Xo(*
%(@)UgR8SOrlkO*#&YQ:&mrQJa[')4p)?`2U_p_creRY"Cj4<)E/OT-6<a7I3=G956[:(L[cHD1:G-Q$[!2stb!fO<_RM$(5\ALfC
%!q#6_GtF@2nBd#;CU\-VC+8#H:L0lIFK9j*ctmDFP7<[;G>R\+&1q&MU;lBi0]K.a[OR.f_R*C6&P;n25d:C]ce;-[,t>smk&6)6
%!VHu!GBhLkI-s#JCCI,npL&44j+04!53W,A:hE*-^(SOR><5uB]o7-gRYt>6+!#ng5\h)t[CJ.8d%*#spOkbf@3J_olQ03"0%IK#
%3gWn2@-\.,O/to`hNBTR4j#B_T%$gj#lic(HGJiikkp!7m'e.Um;j#-bY[_fL)[b-S&dFfg!2\7BqZ*dC%3T195^M7VXWh^[iS)c
%B0,d#f&0Z7Q[.7g)C#K`B"[6]S2G#ebrYUEdN1OBaQ!O62F%k/9-4Le<iLJ>jN2:8CQEhMk]JF%^b$kLCj0MKWp%.&*S\Sq<@U!q
%VmnctA%P]?>+%GH%%<5'm2+,aFdW=P(I6TugK_l0-a2dH!BRpm'"oTVP&3<\bWr+mkhT[nG#G:ug/ImrL5%anr6u/kq$4H4g1#"0
%\lCaSk5$pqgsb-MjdViJAE/$ue5!&s^^$[QK\YoNl)OLW4Qdc..b=fN\u!b6@6_kZ091(_WB"GhXn4+;EEjZ_HkhU/>XC73q3a<`
%A78Xf#O)6mrS^c#VrWFOFNd+G=T6*JY_$lj)H4jj7Rg"X,qQV0q`Lb/QdO&k!\.[gk]IdKWIcWegE>aITpds=*ZE#P827(.(o*,s
%rM`?4a<G.]c_6&U3<U[E//l^G4n`MJHr#ZMQ66N-3FV?:qQWEE'>d_t^NQb/&+BU1Hf>r;N\psO.WHACq8P[%&_#&_$^i&$9rju'
%f3?7^%->g3KSg&3.1em[Gk?_.C'`XTXOfY,")A>(4Gd"U!Dfo:O>C=,nO]TU&+NF#,CP1M1V#gXkjdCI<?Qt!kGTs"6;3EEd9b6^
%*B[drldc;-C]C<MWlKMb9-joj,^54j("<eUQ*a%8>5^ds;]6E;iNg?'g"p!Gp"^Q=a5T9P"fUsr0&Oi`'luH:MN:Pnjct?qqhp4h
%D@cj@(IG-^b=Yo]lB!smfj;TTBZRofRT4;eY%e//\CXrfmXFA:[@68ukWQ4pN04%h_,J*E7b0R43!?i-C\r5Ire#)q-(:f`*>MUP
%71!dL$VUN4rJ%&u0^I!G(^eGG1L^k+F-A2:@%<9^WtAT[5jQu^H]'EX$i<UnY(JVWaM*=d6n/%?6?CbCc=LkpcsBY^qm_SjUHP!p
%`<c:M#&4QrlHG(CNL:q>5i')#o_ZR2LRg*!7C'?TJOBZPU!5&F35*h_[Wa%S:+t?f!fh4+g+&+@-oB.=SS`GBQ2"<#8k'+U05[W?
%]%fuPdj!ai$,!X>*1\aD,'H/@5tsUiI5B*5r`$JuN;&9A5]d2m?0=T2>!U7&6<NWd19=:GAYANF5"e.bV]UWK-^Z2\A-+]qAn=T(
%MX?"a?b3715Uf\<aqKr7]4q=dX*#9+lt'K]]r:aS4]F:753jeOdh733QDJ`I-E,4VhHTQ;\&u5Fm$&RUjqU;>7Cj=PC1VFH:&9%X
%b60:X+eULeMP08,l"sD6)q!\_WPf!^T4qkPp/2$Xl02<HV\kN(FGbQZM1lEhhah8-EfA+<G">-k@Bn.KPrAmFX09*hW<Gp5b]$`d
%khM@J_E$40Fc#dF<&\"];mWc6hmC4*igknBJ`g@*9>W9!4+fnZ&nHQ_S\[c-K$I+ZG"^HXqMt4FP#\-12*PKb^#<HcX2HWj7sEc'
%RC:9-LC>&t_)Y:'(t[5bersit$hT[MT'[+kE_0LKfpVGV-<@;Pg,'?YiT&kAOZATF([8E])-=IKTh=`[[k],F2CS@3<UGcg?s34V
%=C:m!!Xh%AV"B[i%Uqt^A:A]':RI&\[HD#<AQ^J;30iDH*5]_7._fs;L.*ts^`7?<3_F&6;bJ&mZJ1I9_iVBKV7/)e4eVa7_R,(s
%W4g\P3]6.Dk2Mup\q^4V@@>=dD2#*IYFo#bCA`/o5g*=!#d"!`GSb3.UD_\2ZCpbK7ALZ>6p4`fTdSOL&[Aq]q;.Zg)$4*>UiH?2
%+;.<Xnsq>jRgoT3F\X&-`=5ohaPV#Dp5)a=-B]+E4NkV15S[Ni\.W436F'R!qS9lN1aH:V39P,HWh6uI#Ei>k[sf=qm+VrEIo=(2
%r]aM#i'GTe>DXi4?d+=c%-$0i\WcarE0e2D?(oDGeLZWTU%:*>0dgLgE%FDQ3AMOWYC+Eir]SouV;M_/VmOJ^f=T>7X=?_q?*l)n
%d)"5);<euN,6+Y?Gr1;]gU/X7@e!>)^gFEcRgjK[/am15qg>P#g):`7U^#t)52]o?Pb2sY4).dL4NFV*F-U[NhG&9jMCTg9M#_jF
%I)t[FSQkagW2W]E&(2p"</DYp5srth\(FE=[dEPPoZuur2e#8?F\oG:*O('cMIQ$p>H[)GRriYlK9uhEj7Y]sl.2t:X)e;qZQu8'
%im)R"i/ip*0h8cgBGWCNDXuP#E1p'ugW98biEid,=,SspT"Vj&.c_e%,oK=V0/.8-\;j0SgeosoAkI3MNGZZ-G/I\Z[AUQH3<;`n
%[c'TBr3fJQ.Se%SJr'@9KKW#kS,W&('KH88e!K&R?/FT6Yb*T"bAZk4>Ls=]o=7)JHa_"u<f[20gIf#V^PWIS6s\PqBCQEH56=<:
%kS0c'SJc.kTdH6`SLB7!LL5/hA0/!O?MJS6-&VjK?%$e>P*;O2B?cNRT%A.."[?+=,I<oB7bqEkoEIKIgtEB@SWdf'MB'agOi+N>
%U+"]b>FY9p>E)!XQ#JEsHCY^[P=EK4Ft@:SUd(fsdWF;T6P#<Skt0LDFUH>jqm]p'BMpIiGf4EUfe!Au5\h63dBA&6aDY?3R,F>'
%$tBn^ROC^f=6>a\i#,dcA3<')Etf\0'!K;gXigZ/poZ]Xgt']D5t!OO4%B)k9_<5fmo3s>6MS\k/eN[h)0]#jS=4H,U4%AoY6)*r
%&5=)Jd3!XGo`@'s$4I#/<2g9D+'!)dW8a=\XNCam3Jo.oMhfS*+U'uj$:L)F]#.Q<)(?rIS(XX^%V'QJ7=%03f/H)(1NGCLX5(3R
%LbA5[n%G!(J3_A%ZC1Zmrq`fOpA\.-nUI&gj(7>V4m1A6@F3598U&3,U/;5rk3?m?iCr#(X'[S3RR4!4*gg%b.Ogg'3]2G0@r2PL
%R")sQ%)uYERU0.]hXh[$"6EL&GMW/9WiP?@.GsJF7H2#rCh16WI;\4:-VOJC;]o@M>FJsGcTQ.)kAZnjTVmg@h-gWB<qaZ*r(ThD
%.H^ucY]kBiCAe1)9C,j0eoQXN`/>#8C(rkZ\>LYp]<B\q)j1-N]!Hu/7PT0_kG9_:@KTt`fIIsmPs+A/%Oe^ns3$Z%At'"eB$'ij
%jOO8'n>SV`+t4l6!6q!nYHXJ>/+1,)J-=GI(U)Js#^OWSZgoJ+[FX3G[U/D;aq/k&]@(nrkPiGs;cb90'<J<!Wgubt%Z'Ak3mg$h
%7YqT-5L$AT2<84VNp`5rLE"9CF-Pr?aP<o>*pXGWl-rEBnT9h0?[+H7WaW#!5BUthYf"DiiYm>d4AVXpC+CdO=F;\fMDglDq9N.6
%c*.,\JO._hf`cur+4UE9g@KM6/]:>Y4]cG)Nl/c"mW)*hV;ni6LCCSf=q/D)&b*+aGgq'gfMnba=KA(HJ0#/:@JT3)Fp9hL6i.h<
%gZ*';Qb+I68j'?"]<e^-Dh8o:2/m'<X:#YPYD]"0+#dBb4T+'lAJFqC'+7W=hB-<TR3<0h^f%2JUm441U_B.nbL^HGCCD#*R+\aM
%ef&e*>'clRn`]RK0m:K0(!:?e<cK%KYnW&pmA5:#Ug`2(qFTX]rEUSim8Yj>qN#$N,TPI0kU=l,'msU\Q1k.74fSP0ZA^^l+Efp#
%)#Hb*],Q)j"Z_qr:dHo:;jeDcNc*SQ`V^u"(#bRu_StoT/Hqi..TACMm`665FD4jCk9s,<MX;L4gB"i%F/NEqB3K9n'LfD_C)FgV
%.+N6+A/I<[Bq\A[q5QDK2'QGPk4mS+JUHf]'s'D$\1sEn;-YJ;+Q+DYCb_RtFp:Mbl5`@U$\!T1heLk!&:\6KJU4B><)t6?#OAPa
%95lrLZ]/&HF3]\)Z-O\dla3;;Fu[b?I+GNb?Mc2Pgeo8rO0$m*I?%B:iD(Giq_>+TUejR[pJErh["#Dp)(;^Jb<]=r6GpgoW/boB
%E0MFs[0_jaZF[DtZ6M-[=$IEd19#>bnWH>m&KeN2N#8;_W13'$8R9OFl,GRJE0YI2in"3)[j(#E!!sq4_679X0e41NEfgu3'gGa3
%^78S.6QaU$MdS:,12=tgksWb'#=#IYs*I@clUpjM?^pnAql*YdR]*@O*d-:n%b!D8o[\j',$#f7(`q9AeA+3NPZ$nB!Ij^d-].!/
%W,'ubl=2)89;Ef*+VTa-Nt@LKG`nTMCm0aVUeJ1es+=;,ZqUp-P\X+%VB']IhAGD\o</47\5<RXP@<*d*HjdK"73PB"[8'Nk9k5O
%[\KH5MQJlI\g)el*4)I.JC^7s*<@'V$p%?(;DKCu9.+\/_T5Zd_B)WbnG?9]1Vh0C<sp<cf@/q#]"LjZ^,Wf-048Y"2TMHh:QLH$
%ofst(S"mL:B1n'`:h(@VTrP<?!8D*"l<HYR9AnBDS@6PKcU!>Q$H@qJ7=8+6/D%tI^JP7\Fk5.N9ec2Eh4gD/=QN!p$!`<Rr2=W@
%&;#Em%S3_*4-Ua&U.[:K#^+NM!N&g4+h!1H';2HC9b;qHV[,OhK]p=IdiCX>)(8-&AC"U]$Y.7XPC&BBhDE1-U4,.hD?'g3&jS((
%/'rR)@M;<dcG.,+pM<4SX'Jdq<\b;U?i']eGDV3`KJ.TJ=T)E\3miYlq_=i?,)P7,X^fi6onaFDqS!J<G6+[_WJ$n;XscU/G98Z1
%dnR_hJU6C!*$2&C[F$jQg7B@p3YtCCA*>\jH@DM^q%p!WMa.9iK*of](1f3t]Pm>FUXNY*64;Nl,Wh%m@7JfM5nAW^B9b0RWii=;
%%G>kKX?@dr5K6K3TkPR(J2=UjRCbIYA\!IlXXS8GCLnhN&JtRFiWFm"\Wj?I+>\j2EC&9=dlLSrg[_[_d8J=g6Ga9reeT<lC1dDk
%jtF*@'pF7?iP_/k)/=ZA9nh$.%.0-CX5tL$M.L-u9+@LK0[+e^$M!g33fqsUb5W/t]>p38=aoX@M^7\q%gNtI6@qpAfU.>KG\CV.
%B6hkW7%$3ZroMY/<+RD`fEQ]`J(0(8@SS7C5S[N"+8A,/h*Bgd*$n,`JscV[Mt]DEaRbGV*;dO0kmM0\Bs]n0#GEK"=<a6KAJ"^*
%$DIa)q/q=$r7e/77^VY^_Z]6:iC/;!3rP6MmA",E;!int[H\K[_JUC8[X<QBeN-=-<Eh\_=4_2%VB5_KLm>WpM].8[PRSa?2Cu*<
%<@a4!3OC1UL*0`?V1Q&go$9UA,CLlQZlMMh-m\qgDakrXilp\%_9SSG-7Hd5>63fFYZ)q9I`[R\fYLk'$Y"HL5]"09fl>h4KR.SU
%C34Scm<orWg6^\E]8Ar5:WbrP_R,"9WfY^)Q'+V,dSqUZA9T`#e),ho/T(rO!<L4Ja:OVqR[Ic;64[4fHU-&Vc]COoi=&K=p5YeV
%\nbU:*!gGEI[I[6MafF^5"-*$SB%LgK855o=+EUd)\)aAk[](625B#@fPRP/bj`0&SLrM[n+rSs[eC>=cQ@"?#E%0pY8_')0g]tC
%E.@4g%S!Y=[[Y2#GDF%U5AW^HOGI]fHkG`"$.`_0r]nDDe3ukh;9Q6[N^-lMq!p,'+E6PVe63'.$)!MVj)Ng*5YZjb=9k>=YCW\Y
%Me'Y7PCTj;j=MWjO2V8nJ_pCR,f,?Po]>mfYuCoUhQ>@eGt_CMkbl/J\B%Hu)^`s9$r.HNii"")e`kl9$X<k_X#\iVVZG)]>CA^'
%c6<GNW5MPRb>1CbMCceKaA(idrf,=FJV99<`G"4W2f0bWPf(3;j%B5tmnJ^7S8iW83lq9VCF0o8Z5pb&W:<5*b%%YZOHH$QXd_IM
%X9IVrKNUTp"3TTF>/1NP_uW[hL4F.L\?iU.Yr1*)$P!l@k0':D`4u\:#ln/YFJA=9K5qN-)\2fiUpJ7?JI>*4e1$UDEii`9lnGeP
%at,iBn.2Pn"WM$Na+c?fFAqkCZ^4=tF.5d;+SHOl9&[#KZIl>P@N7jjSQV,H@)7]U7eru7g/%>(Is+npj.pg?%K08nR[HF7bSK9X
%@QqNRa-p1$mk5*T/43^[.nbkoLg568\4(,C6_\>Q-hWW8Nr#DYIOX7b8_+u,C@:3:*tbg(A'Nsbr0.&%:kbb-)fET2X2p\r)TtB#
%;&P]4V[mtg=2B^gDYfT:(O0YO"7m_,R0.#;^6(Fqj.6`Ha.7'HGP6Zl;]d/SQ74:&X8WqE*WM742er]rXr@jnN]fms9PW6/3.\ZG
%[EZrYp/'F4ggMreMupZd"\"kZb"tcT/F<kklI=<M25Jm->N&&[.j,oH<'`SAXO)<O3E&q"/CJn(R(V5bpucWmThY3`XJ/u=qc$]E
%TO[EXfo-!LdEe*n1&<qmXe?V9C=b\ZJfHfU'uSCT7u3brKe^TO`12#$**XV+<7)+n3B49:'boWm;$UDZ4ldn&@SaWhP-i*hQ^,p#
%3]p-jh^BX\G(FR;E=quu7mh7g%7>g.QO._%m7*f$0_KuFD,_iXkBa),hC/c;Q@G.V/2D6TU]TPQNV]]\Sf3`N4VU)FV@@/^brF9s
%h08PA+p&L2,?:A2S1F1-D/1PS')bc9H$&a1^RW.GA=MPSOQq3bq\9gNV61gG^B%oj=@]33(TJLO_?H8lGXaO6+QK]NliO1n#*?3b
%'10,RK.7G-a<enC*9sQ^;#@7cZ,]LdZ.\LA`h4t!Sq0hOHd!;;NAgAXbm08tk"AH0GV[C%*KdC?Ls-0T9jIgg'O+\#:`V-91DGQs
%<0[Qa^_4t`Z+)A68U=l1K2siU[.:l5f%AfnI'd)?.BV\=$J\K[*"Z:W;]8JJE/PmC_NV$!:la4F`,tq)*e&@.`%6>mZXF<.+A4+N
%/A`u=>IK`+/2ES\]5k1Sb30%mlSZ,rV1&K>gYsg7NP\'Dp/$egF-d%F.Z`<8li*<,U;Z:-j@l><I3Yt,P,hA,c8BtKqWBc:V^jEO
%(o+nF(>M?n;O8j22n%u3Z,d6J[`'"#6\O!+6NgQei`4fI#6]lnA/`bh']fC\VE[V\)J0ibntSQ@>H.]@+m9E6=iSfU,=pr<&tNj_
%/p&abWYC0eK>bOm)@/4B%-[ksRUB)W,J)QY!C(dMi)7N8YKP3FbWJk6iD*s_&DFN@//@./>frA\M?mS`Paqmea4OQRF3(K4m7C1d
%m,2Sk$u:Ulb-)Db9R:?,!^F]WkF%?0TW62Z+-LhAs5ojf2/HNHpi,2j*NF88iJm&@G+(;$duQV+Nj'@q$fl,dL`laPHFmuo(*+("
%^F1Yqd;4Sn*)^E;O'j/Y%[$".`?n-dpAS#(-ahS-%SEgdX00PFR0Sr0]13F;[/M*u&]+!g>u&K'>0$cGF6onpS_M.oAC%=&!As9r
%B8F\3.NZJoJK!1C+$5@=r[C?PAq@jGg*hNkp/m(cGl>H'o1;G"<5hEWfo-C%A#qcSXUNNg'L0uNLuPE6<Ts!,mc@^m[9\4X#m8:m
%*dBQ=Tg8\d,TnRZYUZ`bn-c2/-KIF+MumI5PIhWD)^.2%go&St(gP[f?\B7`b3KMN&XFh!?nkVGnqU+aF_]W0iMgW9#LAjBM(Dt[
%lBBm0lL/;2*rTM=([cN7E[Y%]a`i>q+Cs^;.;^GYL1AClDp>_u/UJQ:r]Osr#ollV\(*,cf76UN?3h^b(ISc/k0hQH`.SaW3oC<=
%8*kckCttl/LS5J=_lmW+_@tuFo;Pkl!9K7._3udPrM^I\Q:h<A'HC$(W6A>_=<-EJFILB`&8E,+mMVO_BRClA&<qPZj<DR7d'<fk
%D!N<bEb.Wp+4^G=AdR+B%&=oYbrmP*KIBmm$RIM.d*cplmU3Xl>D1Qi9`6sG$BuQEM7/:AHQY2A#\k3QK2^5B'i:^))BhLL(p[\p
%O>#kR(C$-a*RSV,!gKfWFh6UK#c'4ZaB-F[)e?sffLU-U[N.aPL$b#DV:p"qC@r`oDUP#pD=TnNMV$3dj!L0K'raW*,lI3]DZOOW
%!e=kklaJ$5:9c(u4*e,@fId#L*i1=6S]Xt%$+gERfc6N5d,k2);`bklH<P"1;Ad)2&O_d!&0LQo1#(rn#&@<l*U*hfe-NZn5V05k
%d((0CC>'t97#X=le;n/a/YWmej%h>'-`jh9('U\lTj#d@7)S<KV>1PO5*+r+-Z)=$>#f4`g39bq"-VBM5%L!?UQtQ.SkPi?TNJTF
%p<EfZ6j&OaCh9pBm>7;#*,Qu!a.#NM!Kdt'%ZqR+cDp(.S$f8dgcBZ)k4L:YZsMR3r=n&4J*L8GB56<q+%Ts!mc7((&B_*AIb.Ts
%88n:"c&GKA9lC0"Gn.iu+aBR8_@LkC1D(tQ-EEB5^U48!WB!!m(1;b-c06i%j/SN,css(*qaboM08nYSOh*Ve$\HeLOOLT4DYQ3#
%nt2Jic_dfeG>6&M.qitp8.p3/TKPEN&r(IP^lige)/9_aETkU[a"PHn2>rb"Ah(spTp6`j14#1q7QCV4Cp/i51[Bck05Ge$`SlRK
%[IMK@">mD8kAe.2!4D:5.$RZ:i!RI=)TCa\0!.8Sl+QCQcdW_fDBQ'EauYk(P338_kts"<0_Ghlpo[g>C3s`\N@OT'Cu^Ni\*!j&
%$sV'r)Qf^0gq88i4g"UtZlhY#)[[]GY"CZL5)<3ZVE;^uUTVGW0(hR,^au*%17?r@-[)tCWd<7&]&t7CLJ,!8:oTD,"Ojf[\?GWg
%h!lfuD*W/mO#D,'/$?jUQqN>TXAT;K8ZB5nAS67'"0.ColoTDD,*a;<j0ghK7o3%kCp:Xt9h(u<=;RG>W:HYV8g2N6QDRtKe3A';
%.,i*#@X=G&.alE/kq1.)OYp]]:m4?s<ZFT^dI.03(#2YW"^Z7&WLYPaOH*$]]6M>R1>kE.$G0d[Sb6*A8EZtF71!cX4IL)/mLY^3
%7@(Yg&Jf5<iH3"A[c;(h&EY'##R[^p?G24UW7)._#'3UP"dcLS@Ll1I^7_:][]]^:b`>]Ee-UqA7C4:<b_#@4O$d)e\!65bj8dlH
%%TO+kn"K6S^+fbb8^k;Nd)04:R'(lY&kUN0=ph.'Z6alk[ihjCIWn_=2GoEpj;HpAUr.n!?bMUGq):\F]8N513jL\TY7a`c&h2TS
%&ci7mam!u5a]^9;a"G&@5jGmT;<)P-2Ffo;3]ecZ@PlKM;=AonNlo'Hs+R$;oD@icg#Dfe\^JsOXFQm7rcD)1"r/AQRd$Y30^s*5
%s7<K<%h4^K^@S%;8T:_IW`qS7MLi8*+Z[)##&r'eh4hta&S?(#;DMgA'2cb"lWo_a(s'Oe4c@@mM;%@P]YY^XmsatUW\X6*2/`?8
%[_.D1OMhO<CIkX78,k5"M;Wf\1.Ojf?_q/D_/+:"e;9,VJ-78:,N.?SDG0V&[o/46Jh[Sp+`=d"c\nlk)Ob[hmTRp.;5*j$][oB_
%PlOMG`U\48&a9,H:.ON#RaR9E*Q-&#hV/fVN@1ea_h6!Y4!Hm596S:H:obK;UT\$Y-rgO@:FgVHAZ2.<(<EpQJP^A&B<$J&Zl#ua
%Z^R?#6[$ZlJN:<@9[S,7MIe_hMB7`K_f632FPeh-1*jiWQb2OpT'VajHA4ZD6tk&`juVbNLJ;7qM9Qa``U!UEKkl#Pl3D*f8gl!E
%($_O#Q`\ZI(Tj/s"IJ$&caPMJj8^SC"<s?TT`LBA-[9U.3$#O)+qs[-cm!quPUUFnY'@p!X-1D6krj3TW#Z)IDS>P$PQO`?raeT>
%dGCN44S5Vte"*2)W7q'R-B#SQnEh39`(+A?AQOX:LHeZUl5?VqjG[g8Yc=N@+t)^QX.MhuA&"l46F>G_]B+>n=ORR,G%[AC%"EY@
%`J:lo=HJW^SWf`k71nfOk,aYAA7aY-=S%KgACG4=@5ueG6c-/]8,IK(igWUErp-D0n!X7iJ/YIR-h;N,@.%89KhjiGT'`h.%OG%A
%ECb(1QoQ6aF[WoIYU@A6%#6DD"(nqk@YQqb;1)o5"bW9W7T?"'nT:(qa8EH)T*:uYhki1WT#&Ul,T+6j6t'D7G7K`l;j)GP7oIot
%%WYm[+%t5dQ/LG/$K=pCCjtK[^-s@8.Jt6JKu>l`8f%tUfsn??_sBi*2%mqCQEbj0fGlcF^SZnXAP(tQ;Tg14gTnE1#AhRUMuDt\
%IWMn'Ch@tH&C+Brip>6eM/)cXqF,Gt6q:6A/<i3b%^0X?Qm,F(FI;,Vh/rM'h@2+&EQf1QM2Ah<9*q!R;4*ZCPJ4)YRf//>El4=%
%^;_+oTaluQ$9pD9CmCVuW/fIGHL2cln1r?Wo78bS[0h#@*s&HF(!uVO[/$#B.2"!S;5RC$f(@H'5KPbF:>Ulgqd.^ZPegKI>'U6-
%*6q0KQ;r`#\3d8For#YL^:(-0AD=XG;02Z<!eoDop&4$Ac4RXWcr]]@@0<cUI[^u-]2g*Am_m=MQ2'5X^?*^77^;BCrYuZ!BoZ=]
%>>@IijK$@[$>*ii6!:fFH5mfjCHk9mN)c"&<I@@tg@J@X,[\hc%K<<S!<F=?"rrJP?]P109bmQAfrSljE%QPPA!dcI'\BX34_B.[
%O0dNMT$3?%WA./0:U'@sYOk]kFs?-fj*O=;QWGhp27`%eqPl=-TI0K:?qm!D2AHO,+=_j<QWNe'VCh[Z<#uebh;:\+<`66GeJZn3
%hqm"W&a[4l*8XW>CG='$S)2h0hN:@0Ch5EA#m8Y2j-5lrW'Lk@:U!K@%SYnh#DH+8YUXi#5&\"h/K"H[bnPL.r9)R'>U*c4;FZeT
%"r.r]+=5?ikXc@^JaQ`^Om_s%G`ET!Zd#8^1J;kAbq/(N+n^&l>-u\r/+;aQ:YCu,;igsWSt!F+cLX;$_M0;5.0U-R%kfem<0XYP
%S)LhCA*;b<oR#a0K<dos@B7,W/"10)a&#&u;[6>mkPB.?"tRh9a`P]X`26<61RT/fCJ5117i<=V6bqI@fPX"r1'm.m#lt,B'6-oB
%9*J"_iOo>aTqus_QW@Z.oPrD!;A&G>,4$s-@t["N!%Dm,$G$)nK5CRHF;Hj.XfS719FhR0ZL&ojY5m5H*a#U@h;E_/QZ\j!7WM"i
%-eROZ@M'P7\`p/:"km8]cL*_\+n[?CK?I#iUVbF1A2u'<<pe\W?L.>(2@.]'&tDQ4Q>9mE<;81;[IIhP]%73KX-''.Ml2?$JD\h-
%nQb16$ihLS(Zh[ZSF7-71!0f.c8Xe$4*F!3Y#6U.BYlsUL=^r/H&Cs6_)KgUEq_?HnB<?n6$7Ro;g*"64LXI;$Y`"9AuQU/Tho-C
%+r?Y'&b1&raWs]'g,R">)-n?:QO:^#l=t;YBa0q7&cp"U7I*r/V1fE;=Kb7hZuU]K:2;%\Hn./Z4u$E&,=)U<LD)<jG^s:C>sukX
%bcVL&gNR:0M[KY;(B_,GRM"Gg;#O24BLu6:XF+KM6adUr4SV8*Q8f!bGuBirB]2'J7FSW8PRID($^hFncRf?l.@8FrWQq?#'1SH`
%W@"nt.;g+C_%Z-*LhJ^O$&fN>5RGX=jBJM.=Dl)I;-i"%aI_p%\nIoR*8)d4EKec6r64+7@YA#*$(k_$,kF,(2Uq`!83/RV:O[K:
%'\#+kWFSSq4'<KnHA+!A44E"MV/+4mA5Wh@%`qRp!6!J6T/+3J1(\54S*i9N[).C`e21:lF)Q-+H'3q#likNQY>+slGZj/fR+K#.
%('3AI>ddp\kTidFj1g8%j:h'9@m7j9q?.gQ,&2<h21j^k>%jIPeBPd:G+#eOb#2@-K/UeN]]smQNZe0jXc`,gRsnVg#cZY=FR6!6
%1dR-7V0bIUeXE#Legh(l-rd75QDni=+Lc!^bGFL8\21Z]0AGm@aMh>0]&YCh*@!CN5AX-;hEP3Mb,G8\-^VZgg-+^G0)ld1ob8Ir
%D[g:bH,%[q6:miA(!LKs4<Q.B8_"8&;'7BRYX3gA0_Jm8GR]YdY0_1bPN^`K6l_G+TaI8]d]nZgFoqb&Qs]A+pXS(Ea?L<IBD^uR
%+JSK6Z',Q\Se/f-Os4q/f-%-5=0]V,$=9aK$hQt='TEkm>Ja@W!q<-iheL@oXCOOAqr\nl`=:LCTt/.6_L@HB:j*4=5\aX+4idG'
%A$fADhEE7]e?ggI;F;$oj^j\[fc%OL]9pJ6TPXOJgn%.?habOXC';NE#j/jD#?8`nNUEpq,!5S@49OjQokLEOD4Ra#R+:G",2/\5
%6<'"70AUhnlM6g\OUaBFdJCg5OXsHG>2KMI%#G34_"*-.2C`)C'L-atlkr]Aiu;)+fjc:h`GbpD<%=&R8^c"^niHY'6,"qQ0XPGO
%"GFH>*5n,+<Em'LMZdn^+6@F=U0:5*NMI7TDN,sTmG/'eg7X1%)M`?$p$u5)X8W\JbKn5M)U]eNI't@@KK_>>Ii51LFfo4E^CKNU
%=!W6?!CX35W=_h;WJt2$m9ec6%Vu*qHfnt=HU!"L,MVIVYPCR#=dsa7RWod@h"f"_>bi,62N8Ldlb?3hF\4[gI2%Tc9'`siB<`Lo
%s8&-8CiTFQqCsU=E>n+L^=n8mDT;RdY7=OH,;'&]3k)?4h)ABgTS][HR]?eXlG=T$hpQS%F;;%0'#i$l(%1hX$pU+_8\O[,`?*&?
%PY5QFnOW"2[>]->\m%\=op42qDEqFYf@o"]'0jgd\3"(nQ8SA>mls`jSuV)(VXR_[@?da2KJjA6<gq\$cMZC,?rTSPVfj7T#u5;V
%ldUr+h8%.,dSi53i'8tP^&(+?S9C2JX+n%PGUDG>nb,oR[[TWF;;QH#<6S<U['o.?o]g%g+1q5d0\LEc9a[TLm4ifn)2:fjRK^:h
%1o\t?KZ4L3^7MUgG!_C>gb,X<Fl"8jTf-3'Tb<EeI"G%^W2KN?CTGZ&V1O6C,su5n2,4k5's;SaZ1)m3nek4@@aJsc9\j&,2@`-,
%-c\N;AbW_W=H**4bPpNROO*R"Tub"Cn1E(_lr8u'B3]U-TWYFU^DNo^"k?;oP!q`7&/Q1eP.cd!Xtt;:p+POtG_WkU>0prSLblVi
%M(W(SS?]BDoKM'[0X!O^rkit.)J-S]Ir2klM_3+q2:`T!s%j^nO,3P*Bc!DX:gc6;2j`oi5(g=T,[o__mkl.B,$3=_SMPKOb07q_
%q4;*CdC6IiEB,3ELr^o^UB]M".D6GS`M];i=c,]l!h#rh,A?o$(RRP[M!,$n@04T-J[!"D+MfF-qP@1C)EWC>#EDY._@4\%7oLU5
%!bjQpQ\ef=K]maF&K#1&!!+cAlED0\Ic!OY3DfIo]<n:2r;8Q!MtZ=^#Eo5;\G$"o&UfLBK:cn/0*j8;Hs]?Q"1I'q`O\m4%ep/K
%>!"@d5T^eYj^$qu@Y4/NkAsJ;WW_keE6uUI`]*XUTFDQ(na:up<+0VqDjR_/<I<V,")aCN#9V\3AhON.iNZ`u+7WdIX6I=AXLW.a
%J&,ilF_9f="dtAW(U7ZP[URR>i,VM`3j/F7a(^uM*)@H>M#es5.QkYeBG9IsH(9':+*^:C/X2?[ZBWM,)&8j<\h#-`/]u>!gf*tO
%PFNi#27tsX*m:qIG:OP!I683P5LLHrE5bPqfd5/eO:Me\Z4q9L8H4@P,>Hu'ImXJ)?)\JI`ieOUs+$*.j[a5:cm+27HE@Jm(dRS7
%bmoNJS';H0;iH8do^p:`APZUL09rqL!I.Vf=b\6dGRQ-!g/s`faEs&q>rFT/'+U;bc:#L99L`NF/G=1OCVlmi[!1CNTfgFe5!AtF
%:ckfG%S!aXSnMqHH5+gQiPV11fD33i\$:dnT7XhJ5'Ba6C:"(>(W/ML4l&odd.X-]qr),iK2l8SMTJ)hU0b#2DnO>PHG)+08p>W*
%o&3Eh0B:=1gIqn+e[&&m1htLWfQ0H3(U!_S`FO%$NsE$Bb*iH<[H"H25SY?cF_j"[2h!]3^sU#U)RJ5[mO"k8[t&cnkqNC/_Mac<
%4X),,5r3iM;Hr?U6ue34V=*P'b.V)I^GnAM`"K][X[dk3<H;GD7!CP6UA70]`c?\6#:C7N,\Q.1]H.T%1eeTgilfabd\cZBJth@0
%m#!pZ,BQ78*&4j2/?aQ(lLRn-(/r*Fr/ZXCeOfs*2mcN2V41gO@R0W6,8PEhGlBpZanNtReB-UgDGb4RiunEfI"PN`XWR6@]6l-I
%5rTqK]>GStOgE['4ii()k7,LBkp\cXqtW]?^->uq-3F+ahfB"Jc#N=_Z&tE13JiQuj)2Fpqm&HX)Vi+lE]4#nSM"#lVb(tOT';L&
%\[d!PF22[:-;NOEi]I_:c1[YpI8WDpjPSJ7<=h+,FS*XK6QL$]HrV'q[<,;NZ[Yn^2[pPfmRmQ4Y@WYj"R4's;[\,o^:2`.G0W+4
%X;hp#l2ic;G?;PHe!om:JNfdg?Oe)Pb!amj<PfBEj]#^8@5::_SrTZPbciZk9XYrWBG;gJLXl3OkC'JMMH;DS&0s,iboUp*2ebn]
%BM;?:=*$W]TGF7Am*&mT1!@OH/RoolA`l8I3e9G]JT.F7DiINSDRA#(E&Xk#/gm8Bl:3lF!BJE[o*QiiZI[Ze3LgZ^!&rk#_de8Z
%GiZKS[<^)X?Q\Ko7Ls^"'o.uk&&7ClPRm6KOhH7SB`t^qe/IgkL^!q4U&0,fJ&Dhq&P-s8o[H1<qa9YGV5?EI]R9'eH"Dune0,kC
%V[=42l'\QQU"-FJC*p-&Nii^8_T3pESYk:%eNp[T4f^3BJiTJ3>b.Q)?H1$\L-o<rX"`UD:H8%9KcpX#*XTJJU^._e<HR8g6M2aU
%c%nJ'Ke!BVmkq7</G#fq7F^q*Q`6!D*$,\#>%h"FTi?_UQ0AKVD!^K!ciKPBTsfS6L2DU8;M4ik^(Y`+cUe7k'T%f&_Sp^r`0F,t
%"465W3D=kVpCY_8*\[Y&^W&&lr^5*'(CR(:""PFs6aX2Hk4DlcOm;MmP\sRW'GXuma_db,aoY[]R/8ZVF;'9;Kft2gCs(oqi")9>
%UlejC#/XeSS1<G)!'f1Boj+SjGN'n^R7JF#,Cedu+&oG$`8/\;<pQO.$mM"_kt&S&[e^a"U@?OZ/j9-e4po>5.6VK;BHlCS<:hhU
%RFj.MWQG;dZAkgj5,!UI$#,S]NH+uW[jONUh]CS#cIDpIBlF;%i%oMJm$oT6"1-A(q'AY:]<DRX[[o*Ko17j#,pA79^s?*VRK*Xh
%krPV3;6'UIl0-U<aL%CO)49R4/qPAp`oKFG\/Z&6F<VH)nCfq@M);kWgumutg@J`p'<p3[]@*VV;GEnnXn<EYEr^p8H^c'36l==J
%1!4kd?E5aMGY:RtEZ*iV]6dCE;@f]i.t$73MOIk`GPV,Ga;HILX3#q)KW[74O?9n7@oiBq65et_CJ=FFjgSD>U4Y%aPi("O=[6O*
%0T6s$"e6XDmQIl('6'lGX/^>RhAq7-gSqrum<f?Oj"qRT%93@_=8/.;Sj!LTW>Ce67oUV\*([nfZq8^;L40.R!E</5N@Rcb*6reI
%\^igT7AgsqX=C`s8N0g-XdmCq\uQ0uiOTj1Tfm^%dDt:-I0eUGVJjcD_4]-OWT)3"X9cN$`c_4R<9lV&>VQ92cZd-^Ou^(5T4=Dc
%>7$2?\0uuS^e<p:+`:a*+f##N4`ZZdMT8>j(N]b00F`[5mQ@Rl`^YjFgSmEF""%m:-t61"7DW^I]AjRO$JHj10L(&VKQmr)KKKB+
%ll!aeG_J$DU;qo$8LMA#Y)1A:lV7Cd1ibUVB$EO"!JaBm9>\g$b6[8gCR"V[O6[f.@cPe8>cGBuN86KO+u<@obM8Xg4b47OA@`&B
%3M]g-=m4D+)R\TXCElkNcpmqn`?k@PE#!"rf8,t+<&j1+J_eEt-!6VI'=+!R^f0;>Iqf=-kVE\L:"Yie`@bj^6WeuBcLb%"?ThBc
%aWD(;0O(r[DA9VH/%OdD790iQM!f`*ScTI&(80ue)Y?O`@@05#["rtc-PA_Jlp0Te!-VaDaeW^9:"p;hiod3T$h(E5-Wj>%Qq@3P
%`/rM7g4U&q>4m/.pp*C?r-7\7s!75ZCq,Vmr@Ma4E%e$-egRO7LqW/F(Pk?4Kq]h*j:M9I*(t'cIgAh'hd9=)L;_9LB,\f_).oDb
%[uZf;FFp3$L2\&1()3.p@K<$$qjl1>MbdK8/tI]n:@m1O>[!/5f$a%7opY(<"cJYa]2Njep@/8Ac#533?<iVS.R^&Z*jRNq[RhYB
%5dJX[g".Q)*W7)grMF^1$GiZQOCcJ@[pMQ$Nuln*60n7k3d9@iBf;etP9Zt5q!VN?8l^j;K[j(md`M,0V]mQ>6_\kEVq,hrOW--A
%(qb@M`4!^5e="fcP-S%:TK=uNWO+A8hP"j[O&+$\"/F^4Jr;;n<Yh3>O1VE(2_`.+?3&p'C67_^qp,eK^d&sAi`2;:`5]i&G`0J2
%3tki/`DlEJn:<P&;@C_m\9rUgZL'bkeqdCbP?D0S,(5"t"?=BOWGl]SA`[oE=3D.UVfW!AK,j"?+>Z'Eku>,g1OYc5d*%j3<_5)Q
%rm%u3s72&OU(QZ48B?gS?@GMSSR;O;)%`g-8P/1r>D>5[V!gD[^n0N(I][`__pK`K+'!XP/#44iLAK6hU`W>0#W%UqM1jMQJ(Wkm
%0ZI9n/mN7_\Ie:5e.@gpb>XVlQ8,F_K_4#gh^'F$P0>JS(Of#gN";M2F`\h@fpBs-h&?9#o<[SY@-Yc=(&*MOhV-C998]_42;mi8
%M2lrQOE/.1Ie`)`[/jJ2FB\nO*$'hMR;tCI!VLh3m!O0]s1OG7pCrXQJPn2PP1<eF#:ui]0e(dO2f5q"ka;Nt8=OqEolE4M6NfQ%
%=R]+8$$7ZS(?99@G5!Uh_%_",>Z;"kkCl!QfsX<.&7e5V*C"fgif-D,jfYN:4YheUipQ6$9AQq,cuEj5nHmAL8M99j,>c^8M3rp)
%6PG4;<7?G@9sl-rWASRG=&psnp:+8bE-&MMnKmhkbKl4&'9]KEY0t@eMdH@K(1Kpt?k*n5'._X(Lc>kQOW(McRqC"p\:>KF-rhf=
%0?Fds$/4=7785mL"Z$>I>Jjb0$6c:unA&8albjF;dq^i=CNUS9"bkN$Dm8.^TUiZH&Zkg>)a6VtPuS8uJ/In)EsLCBC*AR*X_3D3
%Vrs`[esqA5E%iMqWpEVF+<kGL1M7W',W2Wc9W8L9#P'th!ibDN$`Dg@FA$1WP2Qo,7[34l^>p5"!T=8<c5;4']gT1B7N0CMLDNp(
%OKdd[QsOg3l1Hi==T!N5gqcN39$:[qj#D.WUlF<b$^.OAe!_?[i1bm_@)cUNmuZ%IKi9rq>sD].gVOoF]r329o8C(E>WA$<S(,jq
%ENj[QOhUML4W6A93!?-ef=rSZ*LCC&+ico)GfG0;J5f3LbNU>3ij:"l9n5/>F_5;p>jjR5@h7f6b1<JLNY8QuKpDfP((mN)OL5Jg
%VsWCbSKm?D#bfID.3d+i%-4tFM2aWOjjU][.=nXg%PLj`7mDQnHOEfI/Q!\m9C%-b&*V4('h!u#ndi$N8ee27r+heg'-qi1&k-8+
%nr]t"C.*3dOoU?7JmS5[1Hi=TKCs>qEepuhP+Tgq#7q3`Xf/Jn\"<F3!#S]>8aM6>QA"g>JlS?-8j3GD9uD@pVe10c?2h_WH2"n&
%N!bsDZ#@F\UkuD$f+<d;9d82CQ7<O/P.`uo=NrQ]JLLR)Yo;/qD]Ji);g2Zsq>C<((Hq_14uD^kStH]h:EWnD!ZufmmoKQ)?R2AY
%Kcp;NlIU9BZ8K7-apgIQ2P)8kJqAN[CdLP`5[De>Lb)(;9!M3b]!R?_l"s;6&0UgHIfN*1JY=/m$9hjHIa1QqPK.>!>nAZG8bK>W
%fJ4qF:2_LQMfMm3hdK-YbjsP[Q$L4ED&ZQJLA]iqR$a/&F%umN?J#*uH8)V*C@=/o0_7<dk?0>UoGcZt/HJE*Nmf#9Ul*p""1fbQ
%c5!q-:CO4K<N&l_O@c<c/dVfHDX7't)Tk"0D7"5m9N44QW]^\D"ru?#`+#OuU$J#$"t#/YQ`IM9\sBfC_(>E3bNP[$J$=%iR<;kG
%"d-*__RJ>QmXki\nM48rlO**@$c.h-*]=3D#6ARVL]lj%`:-$EPn)_k'b;H>>OaD\W/4s^L-Uo-*Mo/41tdh,bjWas-i@-s;J.\o
%P&r^51sN!&r36'sBYoW+$CAKq0_AYT_H#Jp*eE`_%G*&l_#q(>dinH6#s7_$[h8E>*>2j.<2&!gD:.Z!erY5WioRU/V2<%RgL0(t
%NT2qYOHps9=3.aOIiI)co"qF&Do+6042B2$3i@<%\o%f@fq7,n!'0Ct*A8#k^oR:Qj\DNm/CPP%-h`pLj3oq527Q+-i56&@Q000?
%"/62KGKi6&nS7U8a%u,=RQ+r_lX6cbR2'P]'-C*H/95*h?9:C4a7\mQHQ?Hh(aoq<duY?ld/riO[_ieK's;Qq`p4LnE*(;?96NOU
%2S$13EFMm77#YrE@NQ<2qsnD+@jG-+Z\It'7kClhc,]p,MWf+@<J,3kfdO8Rr1N@9S29XVHHHUU[6D?^C'9$);?<+JIZE.]rOt]p
%6LI,.o:_Q`k>O$r,oWj*o5.uRDBU+IgN$FZ@ZcJ;Y/R`'r7[33`ahEFICNVed_-,-]t[lra1nHDe'D#6?B;3bRF%.r7"K07q/(%i
%:>7_<q[af70B^X7Y5m'fk'edha/a#T)W(E2])_?d.'X7b7__]0KQNTm-QZiAH0QY!*:Jnd<tiI\nlcf7gQm9uQ?Di_@;iNf^6Ta\
%T"hA&bG4KupBOQ8cTq&S.$c*nfV"4'.SH.,SKAB5KgGGc-1?\Mgl*FJ,tKmfkrS*IpD*G$!AFSogAH>&q!:hl]K1sMgM/c]:oe+%
%X3s#MmBP6CrJ@97RE94k=r!F`_jFh<,c*H#K-p'T"&%r:4n,`=e1rSY.S%d!(d$Su#j+.5JtK"SPt-)p2/?rnKJ!Jg;/$;%Q-$mV
%MJ6FJT#o5(H_#:.M0*F_l2'A9Hhk8o#655#GmX(k`Q64R9<Lc"G?uLua>_FtSBDF2+aGL^!k-P`GK+\N8>?\]cgPm\Qa@ZONdA?U
%TALV;8CoolMKZQ"aoShi>VhU`8J,t`\@+d\oC2B+Ha)9XG<Ng_^9IJ(n/GMt*;Si,,3T4QMk*dnU8WGq-GTO0>3pGP:VRZjM!e,R
%3P`A;(?8dTdJ74VL4jmFVrLY&$J:"_c-Br;AuseZ/5\=Pk"se@@.N+<6'#@l)QR<!"9o+[KC'nf.i:Zf&fp:<KcJN'Y68h$/Wc:(
%PFj.Fk;aBoFT5bZ<dBE\c.2)7K):aN2Uc"udE7<9OO4nUp)TkQ;"$f3a9&VK1eLHQ[PqZ*l=Q)iBSZMDHhng-+J`fU]5cgFSUg:u
%g(Sbs-<\.Fnnn1NXZchi5-o5SDoBhc;df!s(b7;K!+m38a&9Ukg2G/\ipujIN9O+<J%jGBo?S5dq1/84n%")62S"*ffM\"r+V?g)
%AhCAQa"tE&I=/i3Pm5Wbs*3TsF=>-bVt)r52u.KSfhKka_g$5_cVo1S53I1JeBh%o2i%%T(,sogeB1KW*T]Z9<Db]o'e2ARg!,8*
%k&VTGW.10adO<'rlY-PPnW\W0Tl82(_f(ohkiVYXaR$$r'MN[WPQEC+h\Tl.QeWo+"ZTu8-q;B`1"[EYO5jqbR%:%6,>0j;Mcl(Z
%Ee5([c<B7fdG`3;BGcS$4JJ$$Q(=EmL$U6a)V"GR4RC:#G*gXV]ql_B\Wo_<((nI,O=P\CmopfA1/4i7Jm0oN.:qmY_S4<Z;AO)Q
%gl35?l_<29[fgjn\a0nLf-^=G9mVSYo:@(S3^bop*mTtGcFSddF]7nP%D+XuVn^dh.2fi@cR+C/;YYn^,=CQ8Xgi-Ugep`,6i&*C
%d0.hfnlj=%=9(@XLo9.PR`0So:g)G4h]Ha;$6X4r4T6r`,ml8jb$h<JcnEBRIP]S]WqdB=#umRk5JC)9EZ%ARHiJ??HgKS'Q\H1[
%Zr7l@)(C.AQ\H];M:b-`.Gi&Fa=U^eT^lFQH3Q7)-5Q+^L#YQT&LaWoeik/6PU^Z-jrJFX<d$mTV>q&G84&1q@9h\E47`mT+;Ggk
%M$kK\C71%EnP+,BbVuN\dDsR%eG?]D,J8Fe@)Tm-%0HVZ=T2HKr:T80L/h,<#J!hLM_X1ldF5t#.Vc]QKie=K[,LS5+N`SA#9b_>
%.n=g#A&l^1TWNN))#aaq5I`haMj5U='iIm9,5iY\b>s:+9i7b(B5D*h$M(N#j6&BU^oMF@0&EJ+IC<,FG^TJK]j3e!QP(ScNctH2
%Q_K3a8<$$k&0a!pja&iC4^A(8fD:RD8YReLck82W9RSp`[7WS%+i6iA-75o@/-c3M"KN9m)8WTo2HpHR0<$mjE6N@4MXre]PN>al
%r.<-9"k1q]f8fM@Ed<m%*H&*3&"/Yc,o2Mh=+oDY8^gBh8G\GFM!0_K/#U=^o?cDP=k:+-f:/#`=?9@-ISbo>.,TD%$n+fkW2cOJ
%5:'%,YD^V1OHQ5SYK4<mrUf92HUY/TZg[[`;b)S@paT%tb:EJ)?)#1/=:,S)E)*p&p8P&;0,rJ+!feMeG<0-&CR+K_"7)&g/\\k@
%%%@6m\N`Jj--d=oUNQY0VABAIlG2g;nD`S8LL'<%>K:b,U9;KDU,Dm$kuK/Po`Zi\?/CL)MK)J)VK-qfUWV!G`;7-l"6`8bVmF'h
%X6>e0W<].S"OmomB,?;J*<<*r#$M0nO!J(OW?:EgQ@Z%M-rneYBY]6WHW4e:,=OiSr@Wu^h((C/'&7Q-e-WL5GnAOBO2%3h/!ED_
%.sb<S/&bGd"G:&S#)I$Tn)\DAcc]"eSk\7<8gKaL$=!>YNg/]5IWH%K6RlnFdg1&`?6*LEf"Eg?*H.[mPJ9\%N^$JL#.ML_T^HU%
%g9Zta&?\Ql[Yn9pKtgfZEBfiPh\J>g6s!B>%T>hYR8K'(4Y+rnp(-QCAJg_j;#u+%@GbbkH'Zq?^JHq)*2M4J+sC0FMd"nF]nMs8
%AiB(r^d21_RXm$C`]U:QFk,Lif;:7G-ajBZZ_C[Wi@U,7113f#pE4s4pT)f75!\T;G]i$K^I$uu.>Y,@i`o*AX(_s2OOb!o&2"U<
%@3*"L>n47Ambt4LR-'(EBea$olSqd.E"`DrocEs``H*[O!<uPpM?]>Z`D]BO`MXdYo6t&/>V>P0I_9p,#V=5XE!jiI^].nL[m10<
%HX(`\3?2+Xk2V!<6c(<KKhFVq6hDn7/1lAK6Wm=c=Oc3N5'J$f8u_Ja:UlINP4\ESe#gC_KbclIb4^kSp++Yp.6eeDoZ@alOjoL[
%d+>FUI9u)#B-Fu@>-'(2Oetk,o/oc8X*Hk(b`$i%'*:k)CSbWCY`$',.gsZmf?8j,"RG#+7@PWI`$XtYW%$ehI-F>`rXQ@a<??Xb
%^$VB_,[4&rm,g!D+s'l5RM*^4pg3C#>ABeYlh9i[\OC"cjl$-srYOVY+`TT'VX1nJ.k$k&8QXDj8Ij#5p6-Q?-'=l,.Bh_W:;Q-l
%QgqD]7`H4pD"]o\<WDT7'G/>gN>&pj=UOBBWn)`ul(nTT4AuWqi3Ze?e0)/S6&Fi-:B09$qt.d.b5JqJ5>2[R;K]P-XtDGsFQ*N]
%GNiI6F2pci9B!\P[mPXUf+R:DpV;1c+pIbu7p2tR$0Ik`m_,]l:C\V2h7&e+M)K0%;H4MNYt&A(=GfS,EDS_Q2UuHY,MT]-aUp:<
%QPFi&+N"J+c;u(GN%c6/dN(mh7=^bc8]_=.L?N>ZH\0_:Ok>\r'FZUQg/\ZPAio\WeaJqXAOKsD;1\5*7%FpUq,.jn'3<_)KrZ%X
%eCGP-.N,c+D?14dp6g6hkWC!SHkRMRius+<@Of/=Zp-T'6YOGCZuuTK5MVB*71)(Bq7QU+&Phu^#3(R8j']D4>PLK/4L)&Db^C'Q
%l.B:h>PN]En,O@*j6,\95EVZ^$i]sW(1V/.d+&*'8c;^7FA2a1qb-G;>P+ge?%GgjQq"HhgBDCoUR/%P@73#Akke6QbhN8N4YW]U
%`:K-t,c_Z^&k.Df+\D?WJdhk)/*K)$nV+p$Rm-N,5+T?'':NmqJ\-(=f#A]4/5(O69%ncgK=FfGE)`/?$=U]#f0RK4lJ[rA!*Gf(
%[5,F??sOkK@LW''VQL207q?PRLC?'&22pVo"l/[[Y.fP.JZPeX+p5H&%$oKL+kJ?@aL0l"KXi:$em>f/ctJNF%2n:I@?2]"P\l)i
%6/b"NSn0\4@GgPk_uc#0n1DJ`D,NC],.[tL-?1k$=I*`I*L#9?O>R[`6-/l+QZ.Y"J^>;V4>98d5<4InoP52j9]YkXJIpija\=C1
%\sHQp#_#Qd=K%i@8b\k<'[Z;nad3F2'o6Jt6`_sD'Lj?bi0V9"+EkskIc1G/$3)Om\QeDkL1IOsNepF,%3a.m4oL:q*s=Uc.5-8t
%o6ensW:p?s'M)DOrfWJ`8Ja;2PLGS(-Tcu5fI!%d2d]N[6C+IJf-E^nD+6_JCIT/u$o,$>l7q;M13$(YqB55i_Q=nrV94e?Uiuo[
%='iTEC[c*g3FskD&AWt'o34'&j=j_k5SOYb:+iDl;#BgY-"837C.`Kj,/2_kBb=as,=fA-)3:j)d2o;?D"J,jD95;8Re'q:`(!)/
%j29k;i8i*%*gAO]l4I&faP84J%mDG0;:hcO(LgH3f\-Yi12Bc!epN:q?S:j=!d2oB&LNRJ!-:%)%G0*(a0t)rD<_a'faC-t@j,ZT
%>\8O6jY'M[/bOop1eBrqF"pT=F9[!FC+']+\2=S^oF8E73[JL5`.VAMF6<q$dA+aWV2W;&+a4i0;VKHpKT,PA(G\W]lJqW$9k!$S
%cd9mD^X&YZJRDppXklPWUb[XMB/LU3`YC#a:5IH51?7$n6!l!?gVSgsT_hTJ,?j-th*B4PW8IB_]E:XGpO(j(@SeV"b?4Os4Q^-d
%!CiH%e?f$;UW:d^k8m&mNq40%/#/5[o7CVeK*@+Zbk"dVVOlgfG*M@;O7NO)Kt33+0r,JhcY6B?NY$Ma;F";[_W2o-Vr_TO&UU\1
%__uefm\)s8ksb$NUM5+r;6>;-:1Be=XfK.L+rR^Ra/Nogm<S>s3TO"/$uP5k9IJ0,;m2@_/ftOMP'<a*T1`$+"$+h-k/sRKT<lg]
%O`d_Q*+9c$<eZ*ORh&(;fg0.[U=m#^O-d&l7N\F]C(GZf*i9!/aB%\O$$37D[Z>pgCih"Zc'Wob[\7=$7\1Ck+dq&!)T670CRN`H
%S#H*rZhoWG.8B'L](bFd9(Jb8#'dK_Dn3be:u<(5S_T(a(X+n0Nr(l&$d[]m%;^_M&e]pmK=:>o3kN9V),'''WIMG>rU)V0/2dL?
%=47VpG&-;mThh)i[8/^j4cHA+lcc&NObodln"IX[D,a<7&D(?]lo_9[YS1eQ%d'Kr&`lc:kWTLa10M/gHG>oO8#mE9:1t_0^,=X'
%3iA77/i&(_U^^tj_T!5=n[WWIp:;9Z*6j:M<XA0M[j]0ZGl%4I&n*=8JhOgN-DXGqn<-K4f*Eu3Rl#!kikEK%llZiAZGqk&<Ka_?
%.<i,mQPIe8afZ[EJT/C_MC_hY`@4b!M3i.DZKpcK5!nh4^AUr"o?lTQ'-29IDWp7MOWcbKaVdfP^NK%?n2C_d[2#n/GQc,0pWdZB
%i:f!Zg0I[C^tr-7Q-FD7YeSXb_hj)4/haaC]7/(u*"ApcHUp4#/_,&o^j?@OLjD7hG8gUSFnUnUjT`T&Fpr?qrlPOt1SoDIZW%3>
%`4fHgIi")CJd[`anqr1!?_Su!4<,i:9Tpo$I&aL)M#dU4<V-=J&iD@:hLc6aBSN;2H!cktWdUMh<1/OO>sihS?_K@0LN3at3$I@S
%;J_s"LT":2M?^1+C'Ie(C:hnj@o]'u&FN*,6Wn$Yk,"B?r24i_&qSd!LXg:.BV\\d2)M/3>nsKuSAZ]!\W;t=Uq>>aa>2h00a5=P
%B%@VfDIGc`:6r#f4hdVm:X5Bs'aAGFe:=G<lQC_9KP?/b;pa(IbFs!HYpheG$qnopbiI>ZTTc1n$<I\(in$.8-H"UalM+VmbVJ+<
%P%)pAhY/Gkd+7?(Md#;Uj$7=m[62pl,R7)1XrYq_(-9#Wn^sT^\O:k<2_O5f4WY02bs6No=e^#A.kUVCk#oBh(IW,mfoq0qd2\j+
%_NT=,"IR*2%nLmt',8lU/[l:c2>aB#aF/_`CE;eOk/<"IrU<2u,-]"`Hs!.KimO.B,!BW$EcUj.m]T&:liFf\mO-:l.'H'#TEF</
%cFJfii-:c3i9?dk93XEJGS^i0U]u(0^X#ABY#eZsWX?i[pM&t@BCJ_Kg83Xc6[K'dF^g6)]PkZ[pc.4;#Pn!UMf%5]hE]QjcHI\-
%c$5(-Zk3KWFXCU8@23ZJ"juX(X[hFUdE:^,?Ad)Th2:n?`k@3Cm_)nQ_F!.UIlMVAnL1s*&5uAp%_nnc;8$-Hot/(@/\i"\kOo%X
%=6_@=ITt>9/>"TR0O$j9rDY08^)uu8ki^.("nQZEjM_"07n&QK\+8=#O[JX;I&7ghO0cHb,:2:Xh`l#8_T-+Jnf)N1kN"qs5s*2O
%HQ#[XjmC\imc>MYPFoBXi8en7[)L/]>d\U86<F!4_ita:lK"AuGE$cD;FgUeg?g4`:$OosMP`-\ReJB_oQY9@R5/PJ6eBDI(%2cM
%o?1KFld>Rb>rJ`(gJFEfMq@4_257ZpSJ0RDl+q/![aU&M0>1FJ6e%s;1<>eWau?cab;"_JAhIpUgIY\r'UD5QEDja;@tBEAV)a=)
%:?RbKpa'LuUT$gWY%STd$/-9rJS.uIbItX.l#W:F`S[7,1;L'04XnOiH5;iBN/P^t`s?VH/L149N)&g;pe]AD,tuhKCn3uhFidCq
%r69FQV/q@Z7P\OU3](4E&R>tafZJZ!S>6t#?jL%dXQ.@OmC`&S\NH&SDb_]r"7=?;Ac3aC:HkoG%,[U_eK^re;]Q;u>1g_>C?7$b
%f]h8%`'"!V:@=ZFaVIIcUS)'ls1S'AR,CqH>blB3@%h?r&S.iq;]^M2XU7'pH*8;Q,+DeN;@$gdjEU%uPZ4u8##d!gp%Og]$VIIE
%68N_6e$1mkgIos#.J\qn+CmGMYoj5K&M?6M-`DF6'RDrl-CL@RpNhLspQ6ZJeRQoq2#O+fpZp5">>]+)b!U]c0j8^UF9s/B>h'"a
%7o=PH',R#sY::'F;=^t%aR#!8^$mucYc:[?\Ge`5<'pC9"0aF#2V[UWM-j$<emOYLFi#^Ed=FV>7Z9SuBirGZAuk@9l8G"3%^a*^
%f8Z)Z,XbUC`gW5;)-D-1jo(./?,]/.VqJ$dLhAK%.82W;D;?J4+3-jK&U+DqBMjN%;>kgK5IeRslCBeZjH%U/O>(hBAO,$4T0o65
%mm+C&jEuui4"o/QFn#(%[uG8`bQ2Z=@?s/4Y&Y$2Hr4R<'WtkEG*-Sfp'b"nMB0UgHsKmq0-nnagu7Qn#fGej4'Z)tJUL[b(AHXT
%GD@khjo4qm,:D(SlACL#pp#8ur4G\i5@4$1>)Cp(IClbYT9"WBr58raVVq'R$YjqIWPiC/K_+ORe3`o>ZXli_`>0d1%Ii+X+H&hF
%6[iK6Ws]t=C]hWqC$k'-Z;1p^8rUVa:1L&H!:IUFU=/eFNE&5Cm*1fXZu^^GPEO>p9Dt\ReY8XC&:u`Mb!'0M.O6o<Rm)Y;iis>`
%o#Si)9Xg)PE6faKK^PKCQs0H[\e9I+0H!8k_<PQ#N((g=C;o3kGeb\cBaqIG_W1T;mkQ^/#/U@D3MKT@h-I6eD%*>[\*R%5[b?=g
%I_S3CmlMog=sAAB.Oa-"/IQu0F.a25OOkHIL,]M7jg;,NX\L"/dqR-+cghhC6.0R[en-6`-"q!j+)cc.\6%6^etSKloMPeP^UftV
%Snj8u5F:d'G.H)YT'4-SmKfH"YO4Q*BkFt=$(^`qp/eb6B4O^=Ml[m_93&/Kg$S47<_o0"W:^DN2)CdL,^Z=-K+l_7%"Ks9G:aWK
%pd*Pt9ZNH`].e"4QHYluXaMr]-qDG=M:;/ZA9Q[u3M:;oHaRhroPildoc8?*&lo$S/:Ae1]Wr\Q3bsH,Y5AcVjm<VgGn+K?iN@2b
%l75h)QWqJF08,hO's\2D.&fgL#'b9U3VqjMk9aMg9"*NTR%5f6CIg)`iQ+M<Is^3kSu_fg*nq_/\Z!%FdVuS@H53`#6^2UOU)NMk
%]0/Qs_Q(lWm13QAFu_c'Aa4a5>-=!e1SiXBY]C+N\TEK3>To&l(HbJG((/Fhs06t=*)<k'/hGVG/h*Q$p+c$n<pT1P[?GduWhm[h
%W\)OIA/;39:7fDe8:Gbs+h7W=ZO^48JCNiI@3tIQeOWR&X/Q@rhP#!r-UBDC3p]#f+I3C")/W7+#UGG_n2k]Oc_GM0li9C.Hl_>m
%;1\kLJNiE==5o0:PJrMG6Un"GH)A%39pLn7Utt.c8tJPdN^=a+OD9K3Z<])*>:i:#EP'Z+I-@ftQ;k3@=lJfkig9Cb%os75:lc::
%_diilO7JAKgmrc2H*:rhR5aTIdb,b<SK)co<elcl08=sQ@OaR<[hU42>*:5CGn&?uEG*T[gso]4'qu3GNpX(ILaX:n6tqCQ.1_r#
%[o`R?;ZsFd;!"qt`#s!Lq*=O[[*hh]bE+$=lCt.NF_73G5t(a`7=9pD@B87nGPKpK12PB_\-WR5])H`9Xgs>+?:nCUY!ek?/aS8Y
%e-pk.\"Te!UFhBY,1-M+@p/7RI932F'IGXPA%5hr]3<MD9j>dV\=[_5W!B][oh=CfK$Vi==)Y-<fNbu#99*r['Ya:+k&nUl678Q'
%Vii'bM$2CB4IR:TdFUqo'gbmK^G,jE_'X?5-PXH=6U`Ib9Zbs:;W5]rH4$7iH\>$WV>;KN*?&;Cqtbd@m!pCu+h8@Sr7+Z:q^lMo
%D`?pr0Q9h7AY*"[aCcg?jlC4K;?<A>hQ4:d3_Y1^4Maac;6pKhmPfe.`<ajM(?R=o8pfkVBKZ8%Lt!Z=&f*gZLdTljT1(2%es'dc
%a1O>UGY$"7ETGW%@sC4V;b:"r$H04n;YncUhG`,^r<eZ@1rusL>/q*k8k:]m81"[O[_>AV;'TDYVBhE@VdrCb)M@["c!1YZ!:(gY
%6t+Xdk*(A2Gi6C0bbYXYBo;`)60UohdUWo3P1NW#;IQ4tP@'!;=Ao9clk#V&*;TFNJ!kp^V5V"sb_[uC9W[BIV3SoFgM@Q=JWiN;
%m8MUPJ^m,Vb]j2gZM)Ygh4,+RVAfHgL6.htkl`r^7L)Kd6rU<?csfpEIZSGeRm:tEB7\^j9SYuHTZdR:&If[7>G^soM59)9:^Wq`
%L2SV;:Bf]9*g>].BS^2:Cco!oDNNpG-T(n0NS%#f66O!p8kY\c<(fgPr$-"'Mu"!d!!?M#h7pD.AY;Hi>MFB_"::.PA]"Dh6A65;
%2@X_hs0]i;%8m0+:L(6[G[1p6Ur.MI[WaR(-<!>.AW6CIeRTdrp"[IoI%*7'qFRBI,FmT?+rPd<7)`^/80uXR5p7FA'I+H9lY,O^
%,Y1GS\@>P.[.L9k:Y*lV^l\j(2B^@Fr*dQ'+sfhpUF;P2>?mYP[aj\I"Q1KE)&=e19LuHdKMaCjl+l>9ok#c6%Z)MN^*+CFpd10)
%G5DPkBaA>_(QYLt1DaF_W0]?!qi.Ya2OSTA77,CrT'.Gc[qH9CVN^XSh]2'YM3f>"i;umjgQ\Jh7"",NKq@aDR@Y$;GZc:B)U41"
%YX<m(g)pW3'ELMm@E%#De!9a5T@Ol*a-a[l+XMt)5[7j6St[FKNGmFS]f0gQ1?tt[(E\@#*;t+J69DUUTZAB)e2"^@'p80JKs'KJ
%7_(=9a$P4>d\]m^[mfC4FEr669!cOuT3hq!-*bbpSffu?)uIPE5"Pj5h_kd5+"Y$L5?ZY)mVht4X9j<gmEUBlhYagA8W,d`h<f&@
%d^^a"&WgaT4$&?9rr"rh5Sk%qgc:4N1W&$E/5VFO/TJ.=f&*Hk6No.q&kWt,C77^7PnU,#BU#AY<0l6Q7u[#@pA3-3^2F\#`D`&\
%(KYPb;sdEhj]VMj'lD5-ot9G7ThT@lV*&keV_3*5jJeIh'o\GX\:c7fc@-Hjh?GFC<f],"LaFFlL-H]IC$'`q(CV1iGf#,QN*Pmg
%*,B[Vjh#9^1i)%6D=G]b5eLRg,sM1QO-.Y+C"^N`Tg+gW-:D=3go=_&$'1dTq5qba?]G^oPu!q$2>'sKp*K$Xd3nFXU=?<7CmD-;
%/5=i<m_o"NI26jEG"P$$dZ@N`iOPcK(XDof3%J==P.esidY]+t,j(CL>Df6HR)d+]#G>;4NZZh#at0mO@2$HdLCX&BSfO,kr!OO@
%li(>BO`Tc*INhX`7XdC_J8!u`]3]+PV"Mshgs\a*]Apj?h3Dheno_LB$c:L8:2q79n10IX4VtdMk#^qY%gpGh8WVm3E/HKd3UMpN
%NO=7S@7Ium&I38u^6WE=5j5?+DcG]-W2TZR5;9BVs4O*'V1WTK2l6Tq(BDl)OUjrS;gX0g^U/N.kl\gOHk;s/VRNf*"thsVDHXRT
%#msNbq1,7HC6I_qjanmb<&5WW.;J&(4JaUR^&Qk-lhc,)g!TNp!Q?q'Y8YY-7&=n`ib]uT.25H1LFUuC1R/W?c6DiE51^W^EXi<r
%T4=m)rtWt!Bctk!'13&u0n!ZH&!0iO3hQ?Pi!.X14gl-!TZhZVfS,^*0EKYYX=3NbD1-C`6F8JS_QD.HBlGiBr668jOkBn6VWM$h
%?BZ$S&5?=5*&sN#@*[)##FnIe?6QFA$1%Ncmt`%T39MsBnmI:H_2rbk\;3pSDifH.]Iq(eVPo:l>C));-E%)+TC6GDLu;E?Xn<75
%G#_qkC't3DV@VN0?TgJ+[j@s[:t2r=Q"3R+<2sVh5iSlBY,fi>eJr<^1d?[E1e!c;1+'n1]nQZa"^L)'EPS6kFFYr<07"Se=c5t;
%a?0JpSN;-_)EOlo:bCjV9`Y\XUnc"AFI32'35m?<WaCC@N[:JAp8&_g1:GcY^W+_eA>43J6g%hJ:E"/IR-Z)#PdC=KPiHU@Wr;()
%:tih%Z&_61mOa*f<TA"\3`@(1P1L7f@*dOaWq!slh2A"HllKJt4>+@RWA]fM-E;&2;NCcH;K8KbYG2>uBgal<k>eWAHD7j<3k:6c
%Skc7Lge4A=n%.N[jb=Bm]\![YZO5([RIp/e+e$s%Q/8\tD%g0CnrT@0$=kHpdTOmSMjfUkF#Q='@iS+e>a!m`BaP*Zq=St&IZ^sD
%,W0Lqj+7if4sQr'UR]:)%3EEGm%qj('T>OcLo.J.MHsgVcb-MUl`pAaR\!XOOJRV=\5<o2]&@$G]^i@ojqNckYjRe<IQbLcEQurg
%W.Uo?H%J(GJ!>tq5?*U:&4J;KIVhKD\d),$LeKNLmO'/NDhP?BjD'*g@U6YcK?8q*]`@&j<Tng2l7L5/?e#G(cPNfbZ2<Q[7>1^9
%TTKR@?iDWon?tn4_/T+3V921g2I>Gp]K>^0Z/KO^,-dj>L\H/m\60H:MFTSdH$E*8jW:^kS%2&Z,]V\dm)etVZ[Hj\<s+uJd8Nu6
%*7NFd-P:Lo%MMla?2\kd>P"=64*e'WH5?4;AnX[e.<B5oLK:89C<Q8ugII^8*OU:cFKNsROpWicS`J)(Y0S1^&$C(,K$oHdLV5HO
%Qh$,Q5:hbVP3&()*SJV`m+'3aY-ha[;"daAFQI$2Slo![a`d9r"SAu_eU;WLRp2G_e^).]Xr<_^hPIl#gm!ZQI8#&j2EAF*]_Zp1
%P-k;Z*p-0DX*c'dUPH2imTqNf<9AFJW>&Usbdd6"iSV;G`h0ulc(^!FA?"&Fa1]&Uq;[.am/>C;HV)9->2pPKPmEQ/Ke2M(Lg$;H
%+`c,+2=9^W3Nc6:.B.g/]^I@;^?3uiSpi'Q'uNfl#F/;Kn6+klWqtZZ4RTAp,l@deMtMjJkSS[Gpec1UKEoZ)$Eh\$)qWt9$"o/m
%mTJk\DuZpl[)Ee&FWm$3*&:V5V5=MM:lo_1)Ze$TE90@H>E.q\e3*#)%Y-+\eA@30<*ln%nJ(;.21N7D?A"G1%[.U!JKg?c`Z)l+
%e,mBTHP@r%O0B0>5\<02a#DD&1>el78)Jbj60n-N-b+Re?:;VUM>D39je"EN?ak@uMN>i$bZ>&U%2qqML.F_.>bq5=<WJ#7p"\,Q
%gme\YgF1"6#2brh(j-j?\[p?2.beY=dO,PiIGX+SL2#JmR0R:P@@3mt'9=[j(!Ap8CUo.u/rF>iW75R\p76sHL1@6Mi5^1oRHg>\
%8rb`tC!GV6BZ(P3*KQ8g,n'3U".ua.'\@N:Lqdr);4O^;-jSH_c'4`gWl*NmnBb`73>Nj-p0IC=p2,<u>M#X<cL))d4!Ao%U,,6?
%-.`dpE]LVqIQTO%U_63nX8RG==HfbDSGo4-PJE<ND2,EB9e&tq=sR.Z-?LNn%h!e=EW_ADD2lRcU;2W_Hp+<NfY#4d^,C.*B?kMk
%<Mj+S(OAd9`@)l2=Z;q"[rSVlVll^9PP9pGs*/`@9#I@)288D-7VVL3GC4lD*d*u9ZK/WY]5W,ZL_8d0*O\S"?srCDhl0pj8b)KI
%bTSQJ`4(L\JFKA$ZU7?^W,Z:+>:IU^UH0<m^1=0e7_^Rq@uH?bdVl=;f7UjEdKUiSpap4R.>->^4p3S.]nUQAMTFOU43h<RKUao5
%EGjC-m=ZWt!m@h?Ah0@kONHOV4:0NW@[/Y[C"^(o9hInDOfR9?c9n%dQ"J;*UqQMkU"nH'o7pD.2<c7)Y\@C!nUF2896685JguVV
%(:QY)2:au\c\1AEK#qTgg0/TBS;F8qc^\t`N3WiM.a8:_^"OoO[6;E2/GF*KWc0Y7TjEG[Cocl]>Rj2C'S[/Lh^%BiT>HGn(B9]L
%W9e!C9sYM%)>NcpnUSde\F`<<PB&#)C%41M+4g=,cF1&bX6bRKm6l:g].b1^mFpnrNKKt?V!J.0;V+JsD>CWU[1?Po;?)lAlZ&bL
%lu5nG=j&g).TrJJe8DD6a3p[4[T7as&ttuE.g'!Jq`^LR[n&<@OjA%Gp>Vdp:BCR56aKBtmP%O\-M4#:Ru04qk2E9$RaZd-NLnQ+
%cC'\1kBDsUi]AK8^-^LD;(W21Xs6s3.&$T"().[gqg4Xs":L!5jG,3WL-BG1$_n#Cs1Vn3T\J(jhYLFSiaa[)Snj)2cRT(4[-O^D
%V`GjRA[KCt_F5N0#]L@"ReoJE/$.e!hu9jFFfo<L"Nl2<\8TRB5)j]VEF8T"m$CLHNl](30AIP\L31p)1b106IC0\8-;ET/ZJmcK
%lU^]O&FU8NiQ&N8QXT/q_6nbQo&2@"[eE/3,acmT_J!qe,gG??dRpS\_S[6t2c,"0#[g9'RUMDhU)6>/>j')];oOc?h4o]`RRVM9
%_JD+Q/+)rAdcf8a6WUU(N[d]OH^XlaWBWdGD7*XBgE30S_31AF5Z1n*lBlu!AUcA6E5_S0BK`=qNPlF%[mj>2X;h7_IFGd*f=gMt
%?Rq+=hA6(1f24pY?ZeH/*@=^H;gXOOEGnSRhNW0"<6fE&4O)$D?<8r2)'k[GHB[oAeg$`f`0mb)V!_PtImfl#&U"V!=YCnSN^]H5
%.$/UMG=h6jAWr2@5LWJ'*^f_?]6c1]lSHBZ#Y\8";0HekoV!nD>`V%i8kY^c6A>^BN-Jkn+`JtN6^JidrJ"%oZFPW&&fjV.hR.HC
%&B%8I)cFi$DltoA4H=M*iiq"N7!1-g@^^a0=ZaLpf=pQ*ed*Li=tI^m+nZ6Le"MFDOR6rK9t.F0M7M#ZJuMpt3!;gPdpruRDF=CM
%]'dO9>1a+ST:=f?<+U:JatoQVG#i-(HRHmg)D=>?$stHSAJugtP$:p]dq!WX"jP0e%]TN@L6iZ)6&V=ss-:IiRn=CW\pJ[W./3aD
%nBX=,lS_5Wpo0*IMfk\t)bIdfD;[]-o,</\+KBL@[;BQfHZLXgqYV:8gD8s>.J5*,o)tV;3S;H(BHSbYBc;JB<lSDYn:6m#-c.cI
%Pf\L;)7LLMc_9uMf)QP<b'a=g+D>=G<]h\!b=$B-fZ"KqeO9[DU]`'Dh9$mnlREQBX8q4F#=:#"%-mrZ2UQ,&1o:V-Pboa8,7ua,
%d$3a@M<M&2f@Zr'&Y[lAI9V^F;-LI>_h;h?Fl!n7`P;nVjnTM8_@\I.dYrIj_?srMcXl<Ld.!0X9;:]3=\.Xe;<ima8?&t8Rr'!Z
%QBUQF9k`IahlM^5ArDLe&@>#jh9SKWH=ph'qNcUafBnJp*p;*CY/UUh4lGIli@cVEBhHlr[]$Q#4ZN@:5U"bPGFV!mW"ZEG`G&?&
%-g@qk=U-tK'AWd.kJGP&rF&04ISeN@p#cHXS>fQY,31Y6FG[u8)Kc9LVo_fcr)H;)I8Pma1KU5t/4jW]6uA4_nBBlD/4M+D.*ri'
%4&p^n.$r8"-lg7WHQ;%FWn7uoiFl-,j@R!<#%N235!&?u?eA;NOK(2EBs=pAWeH0$m28&ZVgi-JK8cP%0*P<5iXHIXbeH[iMdO2a
%3-/XXARrtuLRP#V(I7t1S2.PNIm7@G/:7jKi=Fo2F/T2(=UhL:JJX+H37W7f6Gda=dR!HJoNF/T26u+B5lI^R:DSY)^aNa$.H,QM
%!"nqGrk"^0Y!(;DL0+'#1]]GsBhl/>0hhajd-C"a&(q,,j#r]C#_IF?*KVO#%AH^uGW&E`%No/Xnl8&'\LrV*[3%*pWn*PoG@/6q
%)r76W[mWo6;3]FIq+K<d%a&iqVeI#^QmjMsRY$h"M@cU(+:^Z%Tt:X\q?0A@6<p?G&`]F#f>8TtEc0ln*4;0t;2PBbb'iCl;`ZIZ
%`lmTW4,7+T"C69+rNT87CJtT>\YR,qWFtn=4?p8dIJZ\dn[s?EFOZ942uhC(=dJu&Io&Au]9U)eZ+&JVDd*^oH,&`>";VE'T)0>A
%I^\CDc[jh=r3(Gc%c>jlYlV%:NDHYI"`f>1T8A=7TMg,d40+WX_K2OGB>nI8M->NU%`<%XK#E>\f^!46V*F%6Yk=!*DNC])nnj:i
%m&(I@F[RWq._IFZNpX3od>T!PlRI9SI5YSRp\rOGT78Y'f>uikZEV#WW:+`a2aX?6b@A>-L5"QB'NK6gku*KZaD&aRT@O05PrTNf
%\^`Nr)OgD3X:?pRZ+EK+VQ%sQR*si[DVZ9\[Z-4r'=k_d9=%-B9.s^nRq>Kt&ok;&rCk4Sp$L1\%o#\-"e7FA`qZ.*1!1_SESmb<
%W4[n<jWS3bP[1PqkLkkW,.R0;/j23HRaUm3d^_BuX(g/F*S'b6WRQ3@-;U@SeWn%_d]@U2iN$Zj&Ym;b7'a">L6C^0?gZt)BmA=1
%K&c]I!'^8ia%%B`i-o_o+];+VEB/l"d=$f1Rc5-#,3Zo_6;Z6uNiiSeLN4"!Lhi#@??KH*=4bfDnkQ$6/SMmSP.bR=>(14cMTX:A
%Y8u%k6e_!FHCf/2+r#RKY873ADQWo&Lb*qGe9]%P%RN^DUa,#H`DR66S\PHij%D""KKkhYcc+iRj.p&Y!lBnMFJ/Mh3"Fbo[o+#1
%8=n:=d]NhXJs$")L_o9d1<Y>F]Qoq&7*HVFY#j<[,5qGM*gc`+>Gu5LXe1W6LsS"[9,;O9pg(-KMu13,B5all6#(@3/mXTqW8EXn
%?DMJ@h`f(Q)Gg&3p8;,*(!c!K-i`>q.o$R5_TJPA'BkF"bQ9WjhVWM.b$pQoh5-[Pkdis.Dn'?p\io12r4qqHmQG``!3G13cJJLB
%&9,u;dT3u_9r_q]6IY$UG`o`!j9*Z325%R;I&$YF<?kjaRLXE[SbJJL2p\p*1&0Hd%`Tl%kJ`[3p1i""K.$^.g)0h"2Q)RpFV[AN
%(*fgQ(6TGfP'X?c1nZ-nFNZ6orYuZs#p2c@%HpM5i>*@uUi'i&(:j;A;!A?._!/X+=T(T*[e#lCKoG>Z_6Pdu*C(ri<bIPSmi["X
%m:7qao3i<P5=<+2[4l`/U7)U[<E@q(U#oIa>_P!4&<5VfBS=E]kbS[t2!@o+]U3OTL="?r!pTl%GX,oVI;NhB*@(o/dK*;eGlV%L
%+s)"J$p`$DGV?o^^:PGJp>^GN97_&AK.kU7o';P@(uV"9)ttn8PLB,Ln]!)/o;!N%"O=pN>'@H;[.kH)<-pTE$_T\q5J=a!ZGD"&
%4ZP@[Q72Ssq2QTKBYc:"79i*s4+O.#6pYJ59t=__'q>j&h6C6Rddc)>"4"WH=FB\'X$j-5%Yn5+]9G.W6g[2BSiA;Vq<c2M&83Z:
%MH-3ZTnkOTfB'3%"spq!"90PMh(<dL1tQLkZ67bgmK;RSW$I.3\,6M>r'3'7!s[/o'LHLQ#;2^Z)Xk#$(kiqiJH]QqY`I\r9A9Od
%=j2k3a.9g@ck5#a1>hI:g+Dq,Y7Y3:@mETJ@8<!^Iu#(BI_419Vf%Y,`B!@]jC]maB.aFCdP7q3mc+lrEs:k*3:V&@e9dke[\tQ%
%Nt5WtU\FY^,/h6go:uHI]>(6QhY,%40Z8FGe>\81nSZ'-gTs'6)VW1gnf#f'BYW/[8!`5+MOR@d*hSpG3To`UB?k3R8Y"tC4h7/*
%\8O^tBRlR4HE)jl@QHR3-DHO_;9#V!<7K01NGn+KB#6n-3Jj&"B]fRT"m=EVBMr6g.06o<b0;kJf8b%B-X"LcK[Ae8(NIbtpi)%R
%,Rf*l8Ym;lB!rdEZAC(g[d4EDPB@m][%,'>l^4f<UE/`hXlaH_dc?ari-m"KAM*4>SrU<P!b7sFZ+V.3gRPT%a$u\kD7-Q;>HYUh
%d>Vr3Q*PP;K8tMfZ'A<!GG1OsZA&eOD5<@oY$M7@-,\&q_aR`7rGU+GI%9s/psU=r\b,B^>]t)74aa?#R6Q_a:#R1<Xc99'6\J&a
%6rf(ULq3sLRT'ZOb6ESq<CcoY2`%"rHc4Hu`8C,>pKJg#l#`Y/OlKm2SMh!Br,mEiej$nG\uLrr3d+C1UT\Q46W_+!liIuMT+t1F
%L7\0>(!&6Pq<Rq<;="V0rk1#X$j(;Y.09]H?#;Wb"`%#Z6&FT^>J,hQjh8t4N+m0(/E.b$J?5pB'.Biuk!2MsP\P2uYYNu-V,cj(
%$.'Tb\;9hm`\eHGMuW'qH^$!Ujff:/8$!:a^55UHq'K)uqY"]^=Wb,dZ0gTA+pQUk\1":@q.JgZf)m$1F-<!FRWNJ$5mYFg,3(D%
%OY3_N43s!$59\<f'_4kHJYM"!RnJBE4pf+D,tsma$eO$n;qU?ed(,AR!r-K9@9,J[,Z`0_W,'h':+9<"lDCr`,cIY#9@\]a?IJ46
%IsCXi6fsrkN'\*6j%ST@<1fa-AC5<<5c`2T:%Ym@TLrW8^W(fcAQ[qT1%fh78@q7n0Ru"%@6C;9S+8!tPaq]TFej%`)Q.G>XWaXR
%g?'cV5`OXV>^fs-*GX/M_4de+qVuA3H=3an3/uX#_1,\#O#4%-&mi7KO^9'KM4@']]_[oB3nGE\qrLQ3qg?(MLN"UmSJkS#6Tj%f
%1,u1RTT%2%o%&A*lg?$0Lhfdd,i01.l/rkt]mD;&!T21]Dn<V1fMgmZI)`lSDeFh><B/"?hY*(-NPj41>5f0DKG:'D18k]-D=Y$q
%'2I',C4-"-Uh\?>G`s!/HT:DLV(!c')I8b"CqP'mjX]WQAbC[?p[-L@9pdf1Tb+e44>Y&h7VIgV^jM6j;>R*qGAo#Ej(Y"gpNu#g
%5O8EU=Uh:p;gp,llUc!><6h*OX&isEmKb)!O*[3D#:9*r//>S*,Ull7eeP_3ZI.7MDY$+%IXCUs,";M3",k=/ED9N<O_E4k7Eqd`
%p(]o"?d[>/4J^?"-LtDI\S[!Di]/H%]:"9"O^?8[7eC0^IY]n*mT.R;VQdl>g>:%PTn0rr3T,<F3Ag73o0k.I2pm'AVmO]$P)qO\
%D`69\VBX_h@<#?Z.KDTjn/q'<=qRq_GG,:,iTlOTIQtg$3"p\;2:(ElF&@O:)Lb>fldV7/7*Qc04+[qFAgP\TUh.l9,tKK?Q'1Du
%V,&\^k<8%ufSOVYPG(mb?R+)_[a&Yoh1%gWmk]uS]pdb%?&6s-m9-=C/dD:OMglbga[dSZ76VhA7u<a=.f&FdjTHh+[\Q;dG.^7N
%?"![%Q9_82BA7:dOHGle)B]`S,.NT=g<%!d^&7Oq\VGF1d^p(@-L&kq?[7J*#!1-ll++s5C\B8j4nmR#?Mk_QV$S0`]7rdcXH%B*
%cT&Rt*^WeCCUQ\5A2V=tmgmOD0Tgd4qn&#(/@oY0E\[VZhl_Yo_S[^>V3mF9kOES1+[*-BP*_]S*dhR?lq-8NR@:1qQ#i"%S*N1\
%\Yf1>^$\4M8r^R`m]j%*L/TZ<Inoe.*T^FUVY2EeU_`%=#i2gEiRhH!AF4N(%'N>pA*nBd@6"e_qOX6MX-tE(n9;;n'h',7k?bW%
%_(A\$@>Xr;SaD-V22a\<.h@cWnD8)5L76BtRkoCF]1;0/kNIE;e)SB1?E<tW/OpTXb`"0:1q]'$f6^S3Q]n?jpau(UcSbarAJ>O!
%6_+h"d]34gDFg-G4Q9(_.&tZJ(iHJtr8P/G_DiV!:9dfoJGYFSo%2=<G)hc5no[;e_E?aTDnSpXa\7R3A,dTiYWp$\h@<6NN#kO"
%gC\Rpm2c,r]tK&`kGb0G7ub$Wmc<Y3=2kWs!6K^MOkiuEO[ghTIc;P[/l4K^Aja5:6B.$>!-L^7b?,S.Vkdp(>)"A)S#L3(bXY`0
%F89MM]5\V)&"UY)obCn=T4,G0Oa_ZE],ic)a;!.f?Nol3<'*eC38r$:m6oC'SPUb(TlbQ$Qr4fAq>`recSX5C'[3b%75o=;8i--q
%Ia3XV[W1WI@tuRub?5LTVWd]C[ib<^i#pPpe<81F\uDg],L@^L(@u0]k2Vlk2pq6-O-C_s/*3+DUeNUBfmd,ocTh%:K+FY(=c4L^
%Ec<HQ%2'imZ[rLp%U6fmrm&B#N4<SoLX0%P(_GiIp,`*A[bAQ@E7;QQ?7tcDp/>/`-CHIV*7uF=%rH17e0q\Cn3plm%YU-1\!acg
%1)V[%I\T:6PJpLPZaV-'/(TM!TF_0`=tLL='!g&*G;IK:1fR4\dtdPSi;W'MIFuOsbRchjduo<&_4AV;jg@I6?/03>\2U[_QMA)2
%2AP.Zaei'43:_n>FGMT@//Ed-epfU"8!IAY6Gm&Ei">CQ#`?Y0WAcK+EV5]ZlLN@S3[7?'5_'h'b<[VO7#67(4fQtF`=NMD*iGiW
%(@\4ZH;\hVUuj*I:j)J+hS][uK1tZs%)N]F;R+6VoZSbbfb=an.D"]>\:.,B@59E19+kEf@hB?%d_Vr8?>U(rBHU]8Vb##HmP>:3
%(V>Pi\BuSs^e?s*EBmI%bT.2S;gI,+efooPf]==s$\V;CqE<i.W24DVj%W*DAn8]N0_JWSagW#heKMQk\S4f*IiJ<#)"/&;)t(Qm
%IkG3gi8[M8A.fVO2P2X-rH?jn.[1-5'W'R4S4ohP%$"G^:*'N>@5.$oJ-1*-E$#PC&S=?S'6p1GYnk-L!*+k"9re>PKKYn<8PK`Z
%-c>.Xgdg>M!1X7;8:Gsfl:"D81iCNj9u45/if;s)am;]T@+*CaM'1JMpW]YNEm.(r+CLb9Y3J6+GHr=$ZJ@O7n>/XXY7lNa!O4(e
%7Y$EUScaqe<IMOb;CH8&">3mNf/A>=PRc1!EP6<t1fh&4RnZUC1e68r_>8u%*i>gt$u,>^6`Ni^Fs[mAO:d.c&-,jp.4$MGeIaKB
%R"%^#?^)9,36i5p[]q9j(D\?Y'C5eY)ULh'fU00G$)2@#4n/R#T#o\%UkLIWJ;Zk$Vl4:Al0[1=!,K.P()o&6l>sq>+>>.!6L9@/
%8*H;BbsJ2d]4%q$lm_d-=F`$O<(n5]osufP6T(%IU-dQKfYn)gF@C1(^(c(tVN>ZSHNHi`.BO=,T(de)d`8thKUBE@Eq"O`Yc-_L
%p)UDrgSg1h8YBPO\3>'j0S?:G9!R1qb(VQn*"%3_O47ZNI<m$\jmAGK^,dU4o&DDjPa*\DS6AIIReV!;FY+Ed8cT]:Rp@d^[7!MW
%l.ht4RP(]\$kk7N0!3tP<`6Z63[,XAN5*tjIcrsfna`B[B*783-F_&WWjI5f69u1L4EW8oo9(_qJ?,:cFZiC/I"X>;ptL?HR`msN
%d>hX[]afqb7qK#R"=pa-7QC"We7;O)2&IirKP)S+G7Vl.OSqVpa:`ENH+$/e^`8(_8^qpO@53\D"Th9'9d/aOIP*/)VZ"Jql@Q3]
%lu_nFUG+We4U4g#)J76Xd0C@,9%Y2YTlZm;dm[1#E?#:5-qI;/L"C2rj(7SZE)-0f/-O[XdHgKaO.S5S]C"ns`OA3gr&@Iq9#p25
%b%*to)FL/>p6(Z]9Z^YjKV7>Wj4E6e&tn&I`:')S$GSTXR@2824kFX"+VNXAGaslf)A@)KRc4QN3p!HgNPV#cqnJXCb]<<M=1G2_
%*R^LY^$1JOJ2_7\7El7je.A_q*Ml$T6SoaGM>#UOZVPE3hU3k/+)q9K]p*0:^`+YVYC#`J7m/:&LE@'G'JTZS0<]dA:(]1SJLF6*
%#T38C@@CC;*$>.-ice+C/35/^YCnT+&@ZleGh!?Ol+=os00S8>+@N#(&J\lQNHTO&ZOd09:"6L(q;.ognY>!6_`k$pmCpB+eHEqa
%!RW[>qslW"ZEXu[l$\iZkg55N^3W[\B`U[EUUjVl2o`'(jgiU:\[V$7"DE'MFLg:HW1DJU?F'1&>J'CkKLHNiO2m8h@o@a4>3K<3
%rS5<&&A:i9D1$0O[71,Z:$nOZeTdFESDT&$q5'92'33ckP8%"4%hjC%AqC#*4EY`O2cA6`cKi\RZFad:=@\b%^TeH&c>_,+B&cIC
%"3XIAc:m;LZBEVgIn$e&/ehSd&j2P%7sX`9.5=2NZJ&<cA^kDYrdq'dV,,euLGW$BRZdIJr*V=5%2C?Uf$-[Uoc^Hl-/%MBOET3O
%jOrhU1c^C7qDapK=s"Fh0$ui+"/t19%#\s.8W[S6fG`]G%l7/*-Ll)A_'E^)kcSgc<`YTt-4u=$B=p!cV^><nl5ns8JnUm@9VrPo
%XX<Va*'70r<Ubc:X$'aqWPRM(P?oM,eS"<;IW;EJ%m(&[1r>0lOVe_mn\aUAe.f_0#6iO@(thLQTXkSm1%m=s*$1t"+Y:).k#&<t
%.(Jc>..k=?Fg`FKfl/pk/&UB=*"F!:WX@f8,^?JM#LRRtlhZ3u5mKUMnJGW<3XRT;f<Qao>h"!bq4O"js*u+RSgm,n]g!!D9r&*#
%cV<Ifs&l8VTms-kDX&X3,HW8"e0H>+O#rqX+Dl&3>`qe?-+`Pnl=J)[HsM..F$EFu@M^2aL:Ugc!(F`C6L)]JL2N1<Z8!+te+[-+
%"H6R=P-h"j*QSTE-*>jVCC5eIj[m'-'4/8VY<&'qRB)UbkPc<Ol)gZ>O_-\K)FPO<`Js+3,%P*lhq5+>&>ad0#k:Wb;"F#%#W[#8
%7cSTdH9;K%l2XiqS/oX?TZ]:SnEc!dp&:=$M5^6Odp%A$>gjXNf*CHnNS;^6]!;50RPtNa?i;Q`nD#-F[;bi&V92)o9m73bhO*tu
%d-qOr3^huF42$'toSCg\HfS%q#NmF=I(jJrk+'8W]m1[MS)u`/qBgj?ftU[bVinRSV5$b&''cD8B<00B2r2\YIFhsf$[,M+Q_&2[
%g/Y_Hkq^oPejFp229Y>*MgA:.q.An/Lf5`mmZWI*Tp1?0R"]RnO/BsGfGIbO3QTJlp(:oS/c8:'`\Z&W-oIER'uG`=%Wg<.jlE\]
%9JXedkY\Qo8lWqKedoh"UeYJIGGJ!':m,KeMmBKWD%AJ7aFZ-VX)"UeJpusm"?HrAhEIJ.?"*#<n<bP7F@VrGYFAF%+/m7bf1@Fc
%n/oYhgCr&c%(GGb+=E4T[a:1/m0si_POf7pk<2!-n:i!`o^JBbP_>+``=%%!o&59cde=8rNJ33GI2?qBOqh5-h[gA""`2_XNs_#M
%"u#4i8AAEedE'N&o!OL=acZ$jL3Rs6.Tc7tGH.*dgeRaN.Xld:F^671p5)4KhGb>ehoquX'c/p`CRkVG`t=qI.$nl5Y,b1U3`#PD
%mj0-r!9M^`gj#Q,_*XKV*)sE`eK9poZY&;1jh86JK:-?qb^n*,hSffULlbkCRu]O$"h=7Xi5,ip*DtWnd>Elmit9&>]VX)[HilN(
%q^RY_O<S8%,&VcE7=b1dAL.-M3QJ2Hqqf-^q1+KUobq[2ioE<<*.L-*M1PH)dDX]@AbFg>&a>(-5Qa0:5[L)+7CSP\nY$Gf>$"YP
%[>;@E@1-[kTMLmoOoNP7ce>+^)3&I:X\q3YRWDpV?ruBsg7a<u=(AeWN)7B`b1KL`1SQep_Cr^e"$C44GME%CD3rL]pVoe.$"?lt
%Y1'AifhHogZnQ(QQN2&6YOm$0V\SP`@6D-r\(_>?[*J&[:]`$,&#5->ZnV]bf$6[;I(9o[d*jGT$FNRcIeZ`8$nr"W0&&W.Qu0-<
%]l+0jF:/"pmoY[1`jEgL@^c!>Ur=XI$)c5n&2mY^1(A%\H'*H,Lu':%+kjW<`FBJal/(Uh9o>tLN'2b<if72k1M\^-OZqS9<8iS\
%Xc53;**:15cY-!jboJ5,-$^H9[f:_tXU,'@H;][5=0>,l4t_sj7CJV+M4+J,%RKgu]_T.a<cTdUVLHinINOXrjHoGA4rg8:H>,OQ
%K=IVXkX45mT3umVKD?6QJgB\%0ttDR`:U%MAndKNP*Y+g`WQ2Aq>Yh/g2CmN97htGjj41rY!tsQ]d0eH:jW*5D!j]oKc,Seg@(F3
%=3O'r16#j"h;1gt^Z!RuiO2Xi#1aX4R+jHO,e/o,S5L2:Z]3_6Z*U1A(?75s)As75eP9dI)_p2f[6T+Q1QjOYhYJipe#,RM+KK]$
%aU%tt/8C<i'MV/]WuL))o#O0^U]?HNm6a*]\rG+sXLeZZ>kPH9UqP;7GMkUQlQrlM)N-:26^jJ@K?Bt](%%sP''-;sRg*&k(+=%W
%7-Ci4Ug%C[r0H38U&V`RkbbepX-=JD_3k$Pa<jI0]1BLJc[Ph4[Gs&NDc-BS?NCW'?"n>df9%@(Pr:,$gNI'F^MTh4fh"n`T<Sok
%,XOJVca$R>,Bt9ij:PQuOe1r;R:O(8HSEFe5YB5\EQ"-0?brW-:;aC5a@EY`(lEaP:X6!SMf\/8X*+.YhE<]A,S(SK9XP?s0/_iu
%Z(2<NL_%Rf"o:jnK2TlA3=7<Jf$"[\<Td$(FM3>7A39h&gqQ?j@q6"LDa-a:&!*Wd)EB@1n&3$6J?qZr[q!'2Tp8C<E*Hl0ZH"KD
%LRn&#e+XZn7UID=pjHhKh_HSI6\0?6M&CpBTtWrg*t6q\Gd;qfO#ZLs:.+Y(;CnZWr?4N#T$P`*fr#UH1/g9sBq-7bku_._1"b=K
%"QK_Lg562UO2<8"mo;s4`_CNRbmB40C\;hQ]OlH04i/n$?a!R%]X[XhlSFjZ=KAP&O>8!1@pZSVm<4-HW49E)$ADj@!aS)21<%Hq
%,I3;hH02fLkN::R\]t,\d7"`_)[!3b9[9Kn[`Zis!'<O)(hK(3,)s$W[.!^_2M`\R;cF;nK$%0fS;p&+aJ^T_hEM.DMYmAbFV5G(
%#3s@t,)r:_QNGg8@IBC5?E"EIqEf'I&RO2_boQc;EEBp-5c4dXNbPK)k!-V?U&b%fUH)XTW3Q;%hBafqHm5.XB!09QM?LKjSNUqM
%cYd<IkUj,=*HB<?D)kK8ag7,<3tcOX_s(rg\ah2)(G2ML!3e`fL=!:K1+1"6N=_b_g-Ybt<a>LU<u2`Djl`[k+"PZ96M68DKFuR/
%d*@c=V&YWG)q\[,cP]j/UNPD*ar!Ma!)QgDnq>so%kNX/Nk`=42atu`B7r]b`&F8Y<@Lh7a,hS.0W41IYW-Ln87F1Rf^sdubrAGA
%M6LMB)VKSPqH]<L9a2Q+e5$LMZFl_ZfJu86Hk8fi]6i$D_S1D`=,cGGCg3Z2b6.1fBIW[p)DJbn-9AF'S+LhAQ#M-l=cXDZb+po_
%4726BF.)8)LPLVI)aa0X_o;>V*Gb2q"&ZNS7ndC@X5SP:`[0*KG,S]'48'4KT)9acgR!&"D^h2DI(DNnq<)H?rq[`:p.t_d5Q&k+
%J,aHep4%JgrVuc8J,Juk9CU:-leha8+91)Fr;HZn^]*aFJ,?-nrQi7Y5QCNRqnN*a^]2pCs6Cd,pZnG8rq/MTnXojSn,Mp=O8o.H
%s8N$bJr@nXs8:4Cm=4r(rq9.f5L@OaoD~>
%AI9_PrivateDataEnd
